
// deno-fmt-ignore-file
// deno-lint-ignore-file no-explicit-any ban-types ban-unused-ignore
//
// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// To generate this file: deno task start
//        


export interface OpenAPI {
/**
 * Últimos Pedidos
 */
"GET /dashboard/pedidos": {
response: {
pedidoId?: number
situacaoPedidoId?: number
situacaoNome?: string
data?: string
dataFormatado?: string
hora?: string
valorTotal?: string
}[]
}
/**
 * Lista de hotsites vinculados ao banner
 */
"GET /banners/:bannerId/hotsites": {
response: {
exibirEmTodosHotSites?: boolean
hotSites?: {
hotSiteId?: number
}[]
}
}
/**
 * Vincula hotsites com um banner específico
 */
"POST /banners/:bannerId/hotsites": {
body: {
/**
 * lista de identificadores de hotsites a serem vinculados ao banner
 */
RAW_BODY?: {
/**
 * Id do hotsite (optional)
 */
hotSiteId?: number
}[]
}
}
/**
 * Atualiza a exibição do banner nos hotsites, se deve ser em todos ou não
 */
"PUT /banners/:bannerId/hotsites": {
body: {
/**
 * Exibição do banner nos hotsites
 */
exibirEmTodosHotsites?: boolean
}
}
/**
 * Deleta o vinculo de um ou mais hotsites com um banner específico
 */
"DELETE /banners/:bannerId/hotsites": {
body: {
/**
 * Lista de identificadores de hotsites para desvincular do banner (optional)
 */
listaHotsites?: {
/**
 * Id do hotsite para vinculo com banner
 */
hotSiteId?: {
/**
 * Id do hotsite para vinculo com banner
 */
hotSiteId?: any[]
}[]
}
}
}
/**
 * Retorna se o usuário ativou o recebimento de newsletter
 */
"GET /usuarios/:email/comunicacao": {
response: {
recebimentoNewsletter?: boolean
}
}
/**
 * Atualiza a comunicação de um usuário via newsletter
 */
"PUT /usuarios/:email/comunicacao": {
body: {
/**
 * Novo status da comunicação via new ajuste realisletter
 */
recebimentoNewsletter?: boolean
}
}
/**
 * Buscar autor por id
 */
"GET /autores/:autorId": {

}
/**
 * Atualizar autor
 */
"PUT /autores/:autorId": {
body: {
/**
 * Nome do Autor
 */
nome?: string
/**
 * Status do autor
 */
ativo?: boolean
}
}
/**
 * Deletar autor
 */
"DELETE /autores/:autorId": {

}
/**
 * Retorna lista contendo os Id's dos pedidos do usuário
 */
"GET /usuarios/:email/pedidos": {
response: {
pedidoId?: number
links?: {
href?: string
rel?: string
method?: string
}[]
}[]
}
/**
 * Usuário encontrado
 */
"GET /usuarios/cpf/:cpf": {
response: {
usuarioId?: number
bloqueado?: boolean
grupoInformacaoCadastral?: {
chave?: string
valor?: string
}[]
tipoPessoa?: string
origemContato?: string
tipoSexo?: string
nome?: string
cpf?: string
email?: string
rg?: string
telefoneResidencial?: string
telefoneCelular?: string
telefoneComercial?: string
dataNascimento?: string
razaoSocial?: string
cnpj?: string
inscricaoEstadual?: string
responsavel?: string
dataCriacao?: string
dataAtualizacao?: string
revendedor?: boolean
listaInformacaoCadastral?: {
chave?: string
valor?: string
}[]
avatar?: string
ip?: string
aprovado?: boolean
}
}
/**
 * Loja Física
 */
"GET /lojasFisicas/:lojaFisicaId": {
response: {
lojaId?: number
nome?: string
ddd?: number
telefone?: string
email?: string
cep?: string
logradouro?: string
numero?: string
complemento?: string
bairro?: string
cidade?: string
estadoId?: number
prazoEntrega?: number
prazoMaximoRetirada?: number
ativo?: boolean
valido?: boolean
textoComplementar?: string
retirarNaLoja?: boolean
latitude?: number
longitude?: number
centroDistribuicaoId?: number
centroDistribuicao?: {
centroDistribuicaoId?: number
prazoEntrega?: number
}[]
}
}
/**
 * Atualiza uma Loja Física
 */
"PUT /lojasFisicas/:lojaFisicaId": {
body: {
/**
 * Id da loja (optional)
 */
lojaId?: number
/**
 * Nome da loja (optional)
 */
nome?: string
/**
 * DDD da localidade de destino da loja (optional)
 */
ddd?: number
/**
 * Telefone da loja (optional)
 */
telefone?: string
/**
 * E-mail de contato da loja (optional)
 */
email?: string
/**
 * CEP do endereço da loja (optional)
 */
cep?: string
/**
 * Logradouro do endereço da loja (optional)
 */
logradouro?: string
/**
 * Número de localização do endereço da loja (optional)
 */
numero?: string
/**
 * Complemento para localização da loja (optional)
 */
complemento?: string
/**
 * Bairro do endereço do loja (optional)
 */
bairro?: string
/**
 * Cidade em que a loja se encontra (optional)
 */
cidade?: string
/**
 * Id do estado em que a loja se encontra (optional)
 */
estadoId?: number
/**
 * Prazo de entrega (optional)
 */
prazoEntrega?: number
/**
 * Prazo máximo para retirada (optional)
 */
prazoMaximoRetirada?: number
/**
 * Status da loja (optional)
 */
ativo?: boolean
/**
 * Valido (optional)
 */
valido?: boolean
/**
 * Informações complementares da loja (optional)
 */
textoComplementar?: string
/**
 * Se a retirada na loja será ativada (optional)
 */
retirarNaLoja?: boolean
/**
 * Latitude (optional)
 */
latitude?: number
/**
 * Longitude (optional)
 */
longitude?: number
/**
 * Lista com os Identificadores dos centros de distribuição que serão vinculados a loja física (optional)
 */
centroDistribuicao?: {
/**
 * Id do centro de distribuição
 */
centroDistribuicaoId?: number
/**
 * Prazo de entrega
 */
prazoEntrega?: number
}[]
}
}
/**
 * Remove uma Loja Física
 */
"DELETE /lojasFisicas/:lojaFisicaId": {

}
/**
 * Atributo encontrado
 */
"GET /atributos/:nome": {
response: {
nome?: string
tipo?: string
tipoExibicao?: string
prioridade?: number
}
}
/**
 * Atualiza um atributo
 */
"PUT /atributos/:nome": {
body: {
/**
 * Nome do atributo (optional)
 */
nome?: string
/**
 * Tipo do atributo (optional)
 */
tipo?: ("Selecao" | "Filtro" | "Comparacao" | "Configuracao" | "ExclusivoGoogle")
/**
 * Tipo de exibição (optional)
 */
tipoExibicao?: ("Combo" | "Div" | "DivComCor" | "DivComFotoDoProdutoVariante" | "Javascript")
/**
 * Prioridade do atributo (optional)
 */
prioridade?: number
}
}
/**
 * Deleta um atributo
 */
"DELETE /atributos/:nome": {

}
/**
 * Lista de resellers
 */
"GET /resellers": {
response: {
resellerId?: number
razaoSocial?: string
centroDistribuicaoId?: number
ativo?: boolean
ativacaoAutomaticaProdutos?: boolean
autonomia?: boolean
buyBox?: boolean
nomeMarketPlace?: string
}[]
}
/**
 * Insere um novo Seller no marketplace
 */
"POST /resellers": {
body: {
/**
 * Razão Social/Nome do Reseller
 */
razaoSocial?: string
/**
 * CNPJ do Seller
 */
cnpj?: string
/**
 * Inscrição Estadual do Seller
 */
inscricaoEstadual?: string
/**
 * Seller isento de inscrição estadual
 */
isento?: boolean
/**
 * Email de contato do Seller
 */
email?: string
/**
 * Telefone de contato do seller com ddd (xx) xxxx-xxxx
 */
telefone?: string
/**
 * Tipo de autonomia do vendedor
 */
tipoAutonomia?: ("ComAutonomia" | "SemAutonomia")
/**
 * Seller Ativo
 */
ativo?: boolean
/**
 * Se irá ter Split de frete boolean. Default:false
 */
split?: boolean
/**
 * Se o produto deverá ser apresentado em BuyBox (apenas para Seller's e Marketplace's TrayCorp) boolean. Default:false,
 */
buyBox?: boolean
/**
 * Se os produtos deverão sem ativados automaticamente no marketplace boolean. Default:false,
 */
ativacaoAutomaticaProdutos?: boolean
/**
 * Cep do Seller (utilizado para o calculo de frete)
 */
cep?: string
}
}
/**
 * Atualiza um novo Seller no marketplace
 */
"PUT /resellers": {
searchParams: {
/**
 * Valor único utilizado para identificar o seller
 */
resellerId?: number
}
body: {
/**
 * Razão Social/Nome do Reseller
 */
razaoSocial?: string
/**
 * CNPJ do Seller
 */
cnpj?: string
/**
 * Inscrição Estadual do Seller
 */
inscricaoEstadual?: string
/**
 * Seller isento de inscrição estadual
 */
isento?: boolean
/**
 * Email de contato do Seller
 */
email?: string
/**
 * Telefone de contato do seller com ddd (xx) xxxx-xxxx
 */
telefone?: string
/**
 * Tipo de autonomia do vendedor
 */
tipoAutonomia?: ("ComAutonomia" | "SemAutonomia")
/**
 * Seller Ativo
 */
ativo?: boolean
/**
 * Se irá ter Split de frete boolean. Default:false
 */
split?: boolean
/**
 * Se o produto deverá ser apresentado em BuyBox (apenas para Seller's e Marketplace's TrayCorp) boolean. Default:false,
 */
buyBox?: boolean
/**
 * Se os produtos deverão sem ativados automaticamente no marketplace boolean. Default:false,
 */
ativacaoAutomaticaProdutos?: boolean
/**
 * Cep do Seller (utilizado para o calculo de frete)
 */
cep?: string
}
}
/**
 * Reseller específico
 */
"GET /resellers/:resellerId": {
response: {
resellerId?: number
razaoSocial?: string
centroDistribuicaoId?: number
ativo?: boolean
ativacaoAutomaticaProdutos?: boolean
autonomia?: boolean
buyBox?: boolean
nomeMarketPlace?: string
}
}
/**
 * Lista de produtos
 */
"GET /produtos": {
searchParams: {
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Lista de categorias que deverão retornar (lista separada por "," ex.: 1,2,3), caso vazio retornará todas as categorias
 */
categorias?: string
/**
 * Lista de fabricantes que deverão retornar (lista separada por "," ex.: 1,2,3), caso vazio retornará todas as situações
 */
fabricantes?: string
/**
 * Lista de centros de distribuição que deverão retornar (lista separada por "," ex.: 1,2,3), caso vazio retornará produtos de todos os cd's
 */
centrosDistribuicao?: string
/**
 * Retorna apenas os produtos que sofreram alguma alteração a partir da data/hora informada. Formato: aaaa-mm-dd hh:mm:ss com no máximo 48 horas de antecedência
 */
alteradosPartirDe?: string
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadeRegistros?: number
/**
 * Retorna apenas os produtos que estão marcados como válido
 */
somenteValidos?: boolean
/**
 * Campos adicionais que se selecionados retornaram junto com o produto, valores aceitos: Atacado, Estoque,  Atributo ,  Informacao,  TabelaPreco
 */
camposAdicionais?: string[]
}
response: {
produtoVarianteId?: number
produtoId?: number
idPaiExterno?: string
idVinculoExterno?: string
sku?: string
nome?: string
nomeProdutoPai?: string
urlProduto?: string
exibirMatrizAtributos?: string
contraProposta?: boolean
fabricante?: string
autor?: string
editora?: string
colecao?: string
genero?: string
precoCusto?: number
precoDe?: number
precoPor?: number
fatorMultiplicadorPreco?: number
prazoEntrega?: number
valido?: boolean
exibirSite?: boolean
freteGratis?: string
trocaGratis?: boolean
peso?: number
altura?: number
comprimento?: number
largura?: number
garantia?: number
isTelevendas?: boolean
ean?: string
localizacaoEstoque?: string
listaAtacado?: {
precoPor?: number
quantidade?: number
}[]
estoque?: {
estoqueFisico?: number
estoqueReservado?: number
centroDistribuicaoId?: number
alertaEstoque?: number
}[]
atributos?: {
tipoAtributo?: string
isFiltro?: boolean
nome?: string
valor?: string
exibir?: boolean
}[]
quantidadeMaximaCompraUnidade?: number
quantidadeMinimaCompraUnidade?: number
condicao?: string
informacoes?: {
informacaoId?: number
titulo?: string
texto?: string
tipoInformacao?: string
}[]
tabelasPreco?: {
tabelaPrecoId?: number
nome?: string
precoDe?: number
precoPor?: number
}[]
dataCriacao?: string
dataAtualizacao?: string
urlVideo?: string
spot?: boolean
paginaProduto?: boolean
marketplace?: boolean
somenteParceiros?: boolean
reseller?: {
resellerId?: number
razaoSocial?: string
centroDistribuicaoId?: number
ativo?: boolean
ativacaoAutomaticaProdutos?: boolean
autonomia?: boolean
buyBox?: boolean
nomeMarketPlace?: string
}
buyBox?: boolean
consumo?: {
quantidadeDias?: number
enviarEmail?: boolean
}
prazoValidade?: number
}[]
}
/**
 * Método que insere um produto na base
 */
"POST /produtos": {
body: {
/**
 * Representa o ProdutoId agrupador por variante (optional)
 */
idPaiExterno?: string
/**
 * Representa o ParentId agrupador por parent (optional)
 */
idVinculoExterno?: string
/**
 * (Max Length: 50) Sku do produto
 */
sku?: string
/**
 * (Max Length: 300) Nome do produto variante
 */
nome?: string
/**
 * Nome do produto (pai do variante) (optional)
 */
nomeProdutoPai?: string
/**
 * Tipo de exibição da matriz de atributos (optional)
 */
exibirMatrizAtributos?: ("Sim" | "Nao" | "Neutro")
/**
 * Se o produto aceita contra proposta (optional)
 */
contraProposta?: boolean
/**
 * (Max Length: 100) Nome do fabricante
 */
fabricante?: string
/**
 * (Max Length: 500) Nome do autor (optional)
 */
autor?: string
/**
 * (Max Length: 100) Nome da editora (optional)
 */
editora?: string
/**
 * (Max Length: 100) Nome da coleção (optional)
 */
colecao?: string
/**
 * (Max Length: 100) Nome do gênero (optional)
 */
genero?: string
/**
 * Max Length: 8, "0000.0000,00") Preço de custo do produto variante (optional)
 */
precoCusto?: number
/**
 * (Max Length: 8, "0000.0000,00") "Preço De" do produto variante (optional)
 */
precoDe?: number
/**
 * (Max Length: 8, "0000.0000,00") "Preço Por" de venda do produto variante
 */
precoPor?: number
/**
 * (Max Length: 8, "0000.0000,00") Fator multiplicador que gera o preço de exibição do produto.Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa no "PrecoPor". (1 por padrão) (optional)
 */
fatorMultiplicadorPreco?: number
/**
 * Prazo de entrega do produto variante (optional)
 */
prazoEntrega?: number
/**
 * Define se um produto variante é valido ou não
 */
valido?: boolean
/**
 * Define se um produto deve ser exibido no site
 */
exibirSite?: boolean
/**
 * Define a qual regra de calculo de frete o produto vai pertencer
 */
freteGratis?: ("Sempre" | "Nunca" | "Neutro" | "Desconsiderar_Regras")
/**
 * Define se o produto variante tem troca grátis (optional)
 */
trocaGratis?: boolean
/**
 * (Max Length: 8, "0000.0000,00") Peso do produto variante, em gramas (g).
 */
peso?: number
/**
 * (Max Length: 8, "0000.0000,00") Altura do produto variante, em centímetros (cm).
 */
altura?: number
/**
 * (Max Length: 8, "0000.0000,00") Comprimento do produto variante, em centímetros (cm).
 */
comprimento?: number
/**
 * (Max Length: 8, "0000.0000,00") Largura do produto variante,  em centímetros (cm).
 */
largura?: number
/**
 * Define se o produto variante tem garantia (optional)
 */
garantia?: number
/**
 * Define se o produto contém televendas (optional)
 */
isTelevendas?: boolean
/**
 * (Max Length: 25) EAN do produto variante (optional)
 */
ean?: string
/**
 * (Max Length: 255) Localização no estoque do produto variante (optional)
 */
localizacaoEstoque?: string
/**
 * Dados de atacado do produto variante (optional)
 */
listaAtacado?: {
/**
 * (Max Length: 8, "0000.0000,00") - Preco Por do item por atacado
 */
precoPor?: number
/**
 * Quantidade para compra de atacado
 */
quantidade?: number
}[]
/**
 * Lista de estoque/centro de distribuição do produto. Obrigatório se valido for true (optional)
 */
estoque?: {
/**
 * Estoque físico do produto
 */
estoqueFisico?: number
/**
 * Estoque reservado do produto
 */
estoqueReservado?: number
/**
 * Id do centro de distribuição do estoque do produto
 */
centroDistribuicaoId?: number
/**
 * Quantidade para ativar o alerta de estoque
 */
alertaEstoque?: number
}[]
/**
 * Lista de atributos do produto
 */
listaAtributos?: {
/**
 * (Max Length: 100) - Define o nome do atributo
 */
nome?: string
/**
 * (Max Length: 8, "0000.0000,00") - Define o valor do atributo
 */
valor?: string
/**
 * Define se o atributo deverá ser exibido
 */
exibir?: boolean
}[]
/**
 * Quantidade máxima de compra do produto variante (optional)
 */
quantidadeMaximaCompraUnidade?: number
/**
 * Quantidade mínima de compra do produto variante (optional)
 */
quantidadeMinimaCompraUnidade?: number
/**
 * Condição do produto variante (optional)
 */
condicao?: ("Novo" | "Usado" | "Renovado" | "Danificado")
/**
 * Url do vídeo do Produto (optional)
 */
urlVideo?: string
/**
 * Se o produto aparece no Spot (optional)
 */
spot?: boolean
/**
 * Se o produto aparece na Url (optional)
 */
paginaProduto?: boolean
/**
 * Se o produto aparece no Marketplace (optional)
 */
marketplace?: boolean
/**
 * Se o produto aparece somente nos Parceiros (optional)
 */
somenteParceiros?: boolean
/**
 * Se o produto deve ser agrupado pelo EAN (optional)
 */
buyBox?: boolean
/**
 * Prazo de validade ou consumo do produto (optional)
 */
prazoValidade?: number
/**
 * Dados de consumo de produto e se deve enviar os dias de consumo por e-mail.
 */
consumo?: {
/**
 * Quantidade de Dias (optional)
 */
quantidadeDias?: number
/**
 * Enviar e-mail (optional)
 */
enviarEmail?: boolean
}
}
}
/**
 * Remove um produto de uma tabela de preço
 */
"DELETE /tabelaPrecos/:tabelaPrecoId/:sku": {

}
/**
 * Atualiza o frete de todos os produtos de um pedido
 */
"PUT /pedidos/:pedidoId/changeseller": {
body: {
/**
 * Objeto com os dados de cotação e responsável
 */
RAW_BODY: {
/**
 * ID da cotação retornada em GET /fretes/pedidos/{pedidoId}/cotacoes
 */
cotacao?: string
/**
 * Responsável pela cotação
 */
responsavel?: string
}
}
}
/**
 * Objeto do banner
 */
"GET /banners/:bannerId": {
response: {
id?: number
nome?: string
dataInicio?: string
dataFim?: string
ativo?: boolean
detalhe?: {
posicionamentoId?: number
urlBanner?: string
imagemBanner?: {
nome?: string
base64?: string
formato?: string
}
ordemExibicao?: number
abrirBannerNovaAba?: boolean
largura?: number
altura?: number
title?: string
urlClique?: string
urlBannerAlternativo?: string
titleAlternativo?: string
diasExibicao?: {
todosDias?: boolean
domingo?: boolean
segunda?: boolean
terca?: boolean
quarta?: boolean
quinta?: boolean
sexta?: boolean
sabado?: boolean
}
textoAlternativo?: string
}
apresentacao?: {
exibirNoSite?: boolean
exibirEmTodasBuscas?: boolean
naoExibirEmBuscas?: boolean
termosBusca?: string
listaHotsites?: {
exibirEmTodosHotSites?: boolean
hotSites?: {
hotSiteId?: number
}[]
}
exibirEmTodasCategorias?: boolean
listaParceiros?: {
exibirEmTodosParceiros?: boolean
parceiros?: {
parceiroId?: number
}[]
}
}
}
}
/**
 * Atualiza um banner existente
 */
"PUT /banners/:bannerId": {
body: {
/**
 * Nome do banner
 */
nome?: string
/**
 * Data de inicio de exibição do banner
 */
dataInicio?: string
/**
 * Data de termino de exibição do banner (optional)
 */
dataFim?: string
/**
 * Banner ativo/inativo (optional)
 */
ativo?: boolean
/**
 * Detalhes do banner
 */
detalhe?: {
/**
 * Local de posicionamento do banner
 */
posicionamentoId?: number
/**
 * Imagem do banner (caso o campo "UrlBanner" estiver preenchido esse campo será desconsiderado) (optional)
 */
imagemBanner?: {
/**
 * string da imagem em base 64
 */
base64?: string
/**
 * formato da imagem
 */
formato?: ("PNG" | "JPG" | "JPEG")
/**
 * nome da imagem
 */
nome?: string
}
/**
 * Url de onde o banner deve ser carregado (Ex.: http://www.site.com.br/banner.swf). O Banner poderá ser do tipo flash ou imagem (optional)
 */
urlBanner?: string
/**
 * Ordem de exibição do banner (optional)
 */
ordemExibicao?: number
/**
 * Se o banner deve ou não abrir em nova aba (optional)
 */
abrirLinkNovaAba?: boolean
/**
 * Largura do banner em pixels (optional)
 */
largura?: number
/**
 * Altura do banner em pixels (optional)
 */
altura?: number
/**
 * Title da imagem do banner (optional)
 */
title?: string
/**
 * Url de destino para quando o usuário clicar no Banner (optional)
 */
urlClique?: string
/**
 * URL para um Banner alternativo que será exibido caso ocorra algum problema para exibição do Banner (optional)
 */
urlBannerAlternativo?: string
/**
 * Title alternativo que será exibido caso ocorra algum problema para a exibição do Banner
 */
textoAlternativo?: string
}
/**
 * Dias da semana que o banner deverá ser exibido (optional)
 */
diasExibicao?: {
/**
 * Se o banner deverá ser exibido todos os dias (caso esse campo estiver preenchido como "true" os demais serão desconsiderados)
 */
todosDias?: boolean
/**
 * Se o banner deverá ser apresentado no domingo
 */
domingo?: boolean
/**
 * Se o banner deverá ser apresentado na segunda
 */
segunda?: boolean
/**
 * Se o banner deverá ser apresentado na terça
 */
terca?: boolean
/**
 * Se o banner deverá ser apresentado na quarta
 */
quarta?: boolean
/**
 * Se o banner deverá ser apresentado na quinta
 */
quinta?: boolean
/**
 * Se o banner deverá ser apresentado na sexta
 */
sexta?: boolean
/**
 * Se o banner deverá ser apresentado no sábado
 */
sabado?: boolean
}
/**
 * Apresentação do banner (optional)
 */
apresentacao?: {
/**
 * Se o banner deverá ser exibido em todo o site
 */
exibirNoSite?: boolean
/**
 * Se o banner deverá ser exibido em todas as buscas
 */
exibirEmTodasBuscas?: boolean
/**
 * Se o banner não deverá ser exibido em nenhuma busca (Caso esse campo estiver como "true" o campo TermosBusca será desconsiderado)
 */
naoExibirEmBuscas?: boolean
/**
 * Termos que o banner será exibido na busca
 */
termosBusca?: string
/**
 * Se o banner deverá ser exibido em todas categorias (Caso esse campo estiver como "true" o campo TermosBusca será desconsiderado)
 */
exibirEmTodasCategorias?: boolean
/**
 * Em quais hotsites o banner deve ser exibido
 */
listaHotsites?: {
/**
 * Se o banner deverá ser exibido em todos as hotsite's (Caso esse campo estiver como "true" o campo HotSites será desconsiderado) (optional)
 */
exibirEmTodosHotsites?: boolean
/**
 * Lista de hotsite's que o banner será exibido
 */
hotsites?: {
/**
 * Id do hotsite (optional)
 */
hotSiteId?: number
}[]
}
}
/**
 * Em quais parceiros o banner deve ser exibido
 */
listaParceiros?: {
/**
 * Se o banner deverá ser exibido em todos parceiros (Caso esse campo estiver como "true" o campo TermosBusca será desconsiderado) (optional)
 */
exibirEmTodosParceiros?: boolean
/**
 * Lista de parceiros que o banner será exibido
 */
parceiros?: {
/**
 * Id do parceiro (optional)
 */
parceiroId?: number
}[]
}
}
}
/**
 * Deleta um banner existente
 */
"DELETE /banners/:bannerId": {

}
/**
 * Atualiza um produto em uma assinatura
 */
"PUT /assinaturas/produtos/:assinaturaProdutoId/Alterar": {
body: {
/**
 * Novo valor do produto na assinatura (optional)
 */
valor?: number
/**
 * Se o produto será considerado removido ou não da assinatura (optional)
 */
removido?: boolean
/**
 * Quantidade do produto na assinatura (optional)
 */
quantidade?: number
}
}
/**
 * Parceiro encontrado
 */
"GET /parceiros/:parceiroId": {
response: {
parceiroId?: number
marketPlaceId?: number
nome?: string
tabelaPrecoId?: number
portfolioId?: number
tipoEscopo?: string
ativo?: boolean
isMarketPlace?: boolean
origem?: string
}
}
/**
 * Parceiro atualizado com sucesso
 */
"PUT /parceiros/:parceiroId": {
body: {
/**
 * Nome do parceiro
 */
nome?: string
/**
 * Id da tabela de preço (optional)
 */
tabelaPrecoId?: number
/**
 * Id do portfolio (optional)
 */
portfolioId?: number
/**
 * Tipo de escopo
 */
tipoEscopo?: ("Aberto\"" | "Fechado" | "PorCliente")
/**
 * Status do parceiro
 */
ativo?: boolean
/**
 * Se o parceiro é marketplace (optional)
 */
isMarketPlace?: boolean
/**
 * Origem (optional)
 */
origem?: string
/**
 * alias (optional)
 */
alias?: string
}
response: {
resultadoOperacao?: boolean
codigo?: number
mensagem?: string
}[]
}
/**
 * Parceiro excluído com sucesso
 */
"DELETE /parceiros/:parceiroId": {
response: {
resultadoOperacao?: boolean
codigo?: number
mensagem?: string
}
}
/**
 * Lista de parceiros
 */
"GET /parceiros": {
response: {
parceiroId?: number
marketPlaceId?: number
nome?: string
tabelaPrecoId?: number
portfolioId?: number
tipoEscopo?: string
ativo?: boolean
isMarketPlace?: boolean
origem?: string
}[]
}
/**
 * Insere um novo parceiro
 */
"POST /parceiros": {
body: {
/**
 * Nome do parceiro
 */
nome?: string
/**
 * Id da tabela de preço (optional)
 */
tabelaPrecoId?: number
/**
 * Id do portfolio (optional)
 */
portfolioId?: number
/**
 * Tipo de escopo
 */
tipoEscopo?: ("Aberto\"" | "Fechado" | "PorCliente")
/**
 * Status do parceiro
 */
ativo?: boolean
/**
 * Se o parceiro é marketplace (optional)
 */
isMarketPlace?: boolean
/**
 * Origem (optional)
 */
origem?: string
}
}
/**
 * Lista de tipos de evento
 */
"GET /tiposEvento": {
searchParams: {
/**
 * Status do tipo de evento
 */
ativo?: boolean
/**
 * Se o tipo de evento está disponível
 */
disponivel?: boolean
/**
 * Nome do tipo de evento
 */
nome?: string
}
response: {
tipoEventoId?: number
nome?: string
tipoEntrega?: string
tipoDisponibilizacao?: string
permitirRemocaoAutomaticaProdutos?: boolean
corHexTituloInformacoes?: string
corHexCorpoInformacoes?: string
numeroAbasInformacoes?: number
quantidadeDiasParaEventoExpirar?: number
numeroLocaisEvento?: number
ativo?: boolean
disponivel?: boolean
tipoBeneficiarioFrete?: string
caminhoLogoEvento?: string
caminhoSubTemplate?: string
sugestaoProdutos?: {
tipoEventoId?: number
produtoVarianteId?: number
}[]
}[]
}
/**
 * Insere um novo tipo de evento
 */
"POST /tiposEvento": {
body: {
/**
 * Nome do Tipo de Evento
 */
nome?: string
/**
 * Tipo de entrega
 */
tipoEntrega?: ("EntregaAgendada" | "EntregaConformeCompraRealizada" | "Todos" | "Nenhum")
/**
 * Disponibilização do Tipo de Evento
 */
tipoDisponibilizacao?: ("DisponibilizacaoDeCreditos" | "DisponibilizacaoDeProdutos" | "Todos")
/**
 * Permissão para remoção automática de produtos
 */
permitirRemocaoAutomaticaProdutos?: boolean
/**
 * Cor em hexadecimal para o titulo de informações
 */
corHexTituloInformacoes?: string
/**
 * Cor em hexadecimal para o corpo de informações
 */
corHexCorpoInformacoes?: string
/**
 * Número de abas de informações, podendo ser de 1 a 2
 */
numeroAbasInformacoes?: number
/**
 * Quantidade de dias para que o evento expire
 */
quantidadeDiasParaEventoExpirar?: number
/**
 * Quantidade de locais do evento
 */
numeroLocaisEvento?: number
/**
 * Informa se o evento está ativo ou inativo
 */
ativo?: boolean
/**
 * Informa a disponibilidade do evento
 */
disponivel?: boolean
/**
 * O beneficiário do frete
 */
tipoBeneficiarioFrete?: ("DonodaLista" | "Convidado")
/**
 * Imagem da logo do evento em base64
 */
imagemLogoEvento?: string
/**
 * Produtos Sugeridos para este evento (optional)
 */
sugestaoProdutos?: {
/**
 * Id do tipo de evento
 */
tipoEventoId?: number
/**
 * Identificador do produto variante
 */
produtoVarianteId?: number
}[]
}
}
/**
 * Lista de preços e estoque de produtos que sofreram alterações
 */
"GET /produtos/alteracoes": {
searchParams: {
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadeRegistros?: number
/**
 * Retorna apenas os produtos que sofreram alguma alteração a partir da data/hora informada. Formato: aaaa-mm-dd hh:mm:ss com no máximo 48 horas de antecedência
 */
alteradosPartirDe?: string
}
response: {
produtoId?: number
produtoVarianteId?: number
sku?: string
precoDe?: number
precoPor?: number
disponivel?: boolean
valido?: boolean
exibirSite?: boolean
estoque?: {
estoqueFisico?: number
estoqueReservado?: number
centroDistribuicaoId?: number
alertaEstoque?: number
}[]
tabelasPreco?: {
tabelaPrecoId?: number
nome?: string
precoDe?: number
precoPor?: number
}[]
}[]
}
/**
 * Retorna a situação reseller de um produto
 */
"GET /produtos/:identificador/situacaoReseller": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
}
/**
 * Lista de atributos
 */
"GET /atributos": {
response: {
nome?: string
tipo?: string
tipoExibicao?: string
prioridade?: number
}[]
}
/**
 * Insere um novo atributo
 */
"POST /atributos": {
body: {
/**
 * Nome do atributo (optional)
 */
nome?: string
/**
 * Tipo do atributo (optional)
 */
tipo?: ("Selecao" | "Filtro" | "Comparacao" | "Configuracao" | "ExclusivoGoogle")
/**
 * Tipo de exibição (optional)
 */
tipoExibicao?: ("Combo" | "Div" | "DivComCor" | "DivComFotoDoProdutoVariante" | "Javascript")
/**
 * Prioridade do atributo (optional)
 */
prioridade?: number
}
}
/**
 * Inscrição
 */
"GET /webhook/inscricao/:inscricaoId": {
response: {
inscricaoId?: number
nome?: string
appUrl?: string
ativo?: boolean
emailResponsavel?: string
topico?: string[]
usuario?: string
header?: {
headerId?: number
chave?: string
valor?: string
}[]
}
}
/**
 * Atualiza uma inscrição
 */
"PUT /webhook/inscricao/:inscricaoId": {
body: {
/**
 * Nome da inscrição
 */
nome?: string
/**
 * Url para qual deve ser enviada as notificações
 */
appUrl?: string
/**
 * Tópicos em que deseja se inscrever
 */
topicos: string[]
/**
 * Usuário que está realizando a inscrição
 */
usuario?: string
/**
 * Status da inscrição, se ativada ou desativada
 */
ativo?: boolean
/**
 * E-mail do responsável para notificá-lo quando não seja possível notificá-lo pelo AppUrl informado
 */
emailResponsavel?: string
/**
 * Headers que devam ser adicionados ao realizar a requisição para o AppUrl. Headers de Conteúdo como 'ContentType' não são necessário. As requisições realizada sempre serão no formato 'application/json' (optional)
 */
headers?: {
/**
 * Chave do header, por exemplo: 'Authorization'
 */
chave?: string
/**
 * Valor / Conteúdo do header, por exemplo: 'Basic 0G3EQWD-W324F-234SD-2421OFSD'
 */
valor?: string
}[]
}
}
/**
 * Produtos de uma assinatura
 */
"GET /assinaturas/:assinaturaId/produtos": {
response: {
assinaturaProdutoId?: number
assinaturaId?: number
produtoId?: number
produtoVarianteId?: number
quantidade?: number
valor?: number
removido?: boolean
}[]
}
/**
 * Insere um novo produto na assinatura
 */
"POST /assinaturas/:assinaturaId/produtos": {
body: {
/**
 * Produto Variante que será incluído na assinatura
 */
produtoVarianteId?: number
/**
 * Quantidade do produto que será inserido na assinatura
 */
quantidade?: number
}
}
/**
 * Categoria encontrada
 */
"GET /categorias/:id": {
searchParams: {
/**
 * Hierarquia da categoria
 */
hierarquia?: boolean
/**
 * Se será apresentado somente categorias filhas
 */
somenteFilhos?: boolean
}
response: {
id?: number
nome?: string
categoriaPaiId?: number
categoriaERPId?: string
ativo?: boolean
isReseller?: boolean
exibirMatrizAtributos?: string
quantidadeMaximaCompraUnidade?: number
valorMinimoCompra?: number
exibeMenu?: boolean
urlHotSite?: string
}
}
/**
 * Atualiza uma categoria
 */
"PUT /categorias/:id": {
body: {
/**
 * Nome da categoria (optional)
 */
nome?: string
/**
 * Id da categoria pai (optional)
 */
categoriaPaiId?: number
/**
 * Id da categoria ERP (optional)
 */
categoriaERPId?: string
/**
 * Categoria ativo/inativo (optional)
 */
ativo?: boolean
/**
 * Categoria de reseller (optional)
 */
isReseller?: boolean
/**
 * Exibir Matriz de Atributos (optional)
 */
exibirMatrizAtributos?: ("Sim" | "Nao" | "Neutro")
/**
 * Informe a quantidade máxima permitida para compra por produtos desta categoria. Informe zero para assumir a configuração geral da loja (optional)
 */
quantidadeMaximaCompraUnidade?: number
/**
 * Informe o valor mínimo para compra em produtos desta categoria (optional)
 */
valorMinimoCompra?: number
/**
 * Informe se será exibida no menu (optional)
 */
exibeMenu?: boolean
}
}
/**
 * Exclui uma categoria
 */
"DELETE /categorias/:id": {

}
/**
 * Retorna todos os identificadores dos produtos/variantes relacionados ao produto pesquisado
 */
"GET /produtos/:identificador/relacionados": {
searchParams: {
/**
 * Define se o identificador informado é um Sku, um ProdutoId (Agrupador de variantes) ou um ProdutoVarianteId
 */
tipoIdentificador?: ("Sku" | "ProdutoId" | "ProdutoVarianteId")
}
response: {
produtoId?: number
parentId?: number
produtoVarianteId?: number
sku?: string
}[]
}
/**
 * Atualiza um valor pré definido pelo id
 */
"PUT /usuarios/valoresdefinidoscadastropersonalizado/:valoresDefinidosCampoGrupoInformacaoId": {
body: {
/**
 * Valor para o campo (optional)
 */
valor?: string
/**
 * Ordem (optional)
 */
ordem?: number
}
}
/**
 * Remove um valor pré definido
 */
"DELETE /usuarios/valoresdefinidoscadastropersonalizado/:valoresDefinidosCampoGrupoInformacaoId": {

}
/**
 * Lista de banners
 */
"GET /banners": {
searchParams: {
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadePorPagina?: number
}
response: {
id?: number
nome?: string
dataInicio?: string
dataFim?: string
ativo?: boolean
detalhe?: {
posicionamentoId?: number
urlBanner?: string
imagemBanner?: {
nome?: string
base64?: string
formato?: string
}
ordemExibicao?: number
abrirBannerNovaAba?: boolean
largura?: number
altura?: number
title?: string
urlClique?: string
urlBannerAlternativo?: string
titleAlternativo?: string
diasExibicao?: {
todosDias?: boolean
domingo?: boolean
segunda?: boolean
terca?: boolean
quarta?: boolean
quinta?: boolean
sexta?: boolean
sabado?: boolean
}
textoAlternativo?: string
}
apresentacao?: {
exibirNoSite?: boolean
exibirEmTodasBuscas?: boolean
naoExibirEmBuscas?: boolean
termosBusca?: string
listaHotsites?: {
exibirEmTodosHotSites?: boolean
hotSites?: {
hotSiteId?: number
}[]
}
exibirEmTodasCategorias?: boolean
listaParceiros?: {
exibirEmTodosParceiros?: boolean
parceiros?: {
parceiroId?: number
}[]
}
}
}[]
}
/**
 * Insere um novo banner
 */
"POST /banners": {
body: {
/**
 * Nome do banner
 */
nome?: string
/**
 * Data de inicio de exibição do banner
 */
dataInicio?: string
/**
 * Data de termino de exibição do banner (optional)
 */
dataFim?: string
/**
 * Banner ativo/inativo (optional)
 */
ativo?: boolean
/**
 * Detalhes do banner
 */
detalhe?: {
/**
 * Local de posicionamento do banner
 */
posicionamentoId?: number
/**
 * Imagem do banner (caso o campo "UrlBanner" estiver preenchido esse campo será desconsiderado) (optional)
 */
imagemBanner?: {
/**
 * string da imagem em base 64
 */
base64?: string
/**
 * formato da imagem
 */
formato?: ("PNG" | "JPG" | "JPEG")
/**
 * nome da imagem
 */
nome?: string
}
/**
 * Url de onde o banner deve ser carregado (Ex.: http://www.site.com.br/banner.swf). O Banner poderá ser do tipo flash ou imagem (optional)
 */
urlBanner?: string
/**
 * Ordem de exibição do banner (optional)
 */
ordemExibicao?: number
/**
 * Se o banner deve ou não abrir em nova aba (optional)
 */
abrirLinkNovaAba?: boolean
/**
 * Largura do banner em pixels (optional)
 */
largura?: number
/**
 * Altura do banner em pixels (optional)
 */
altura?: number
/**
 * Title da imagem do banner (optional)
 */
title?: string
/**
 * Url de destino para quando o usuário clicar no Banner (optional)
 */
urlClique?: string
/**
 * URL para um Banner alternativo que será exibido caso ocorra algum problema para exibição do Banner (optional)
 */
urlBannerAlternativo?: string
/**
 * Title alternativo que será exibido caso ocorra algum problema para a exibição do Banner
 */
textoAlternativo?: string
}
/**
 * Dias da semana que o banner deverá ser exibido (optional)
 */
diasExibicao?: {
/**
 * Se o banner deverá ser exibido todos os dias (caso esse campo estiver preenchido como "true" os demais serão desconsiderados)
 */
todosDias?: boolean
/**
 * Se o banner deverá ser apresentado no domingo
 */
domingo?: boolean
/**
 * Se o banner deverá ser apresentado na segunda
 */
segunda?: boolean
/**
 * Se o banner deverá ser apresentado na terça
 */
terca?: boolean
/**
 * Se o banner deverá ser apresentado na quarta
 */
quarta?: boolean
/**
 * Se o banner deverá ser apresentado na quinta
 */
quinta?: boolean
/**
 * Se o banner deverá ser apresentado na sexta
 */
sexta?: boolean
/**
 * Se o banner deverá ser apresentado no sábado
 */
sabado?: boolean
}
/**
 * Detalhes de apresentação do banner (optional)
 */
apresentacao?: {
/**
 * Se o banner deverá ser exibido em todo o site
 */
exibirNoSite?: boolean
/**
 * Se o banner deverá ser exibido em todas as buscas
 */
exibirEmTodasBuscas?: boolean
/**
 * Se o banner não deverá ser exibido em nenhuma busca (Caso esse campo estiver como "true" o campo TermosBusca será desconsiderado)
 */
naoExibirEmBuscas?: boolean
/**
 * Termos que o banner será exibido na busca
 */
termosBusca?: string
/**
 * Se o banner deverá ser exibido em todas categorias (Caso esse campo estiver como "true" o campo TermosBusca será desconsiderado)
 */
exibirEmTodasCategorias?: boolean
/**
 * Em quais hotsites o banner deve ser exibido
 */
listaHotsites?: {
/**
 * Se o banner deverá ser exibido em todos as hotsite's (Caso esse campo estiver como "true" o campo HotSites será desconsiderado) (optional)
 */
exibirEmTodosHotsites?: boolean
/**
 * Lista de hotsite's que o banner será exibido
 */
hotsites?: {
/**
 * Id do hotsite (optional)
 */
hotSiteId?: number
}[]
}
}
/**
 * Em quais parceiros o banner deve ser exibido
 */
listaParceiros?: {
/**
 * Se o banner deverá ser exibido em todos parceiros (Caso esse campo estiver como "true" o campo TermosBusca será desconsiderado) (optional)
 */
exibirEmTodosParceiros?: boolean
/**
 * Lista de parceiros que o banner será exibido
 */
parceiros?: {
/**
 * Id do parceiro (optional)
 */
parceiroId?: number
}[]
}
}
}
/**
 * Avatar do usuário encontrado
 */
"GET /usuarios/:email/avatar": {
response: {
urlAvatar?: string
}
}
/**
 * Insere um novo avatar para o usuário
 */
"POST /usuarios/:email/avatar": {
body: {
/**
 * Imagem do avatar em base64 (optional)
 */
base64?: string
/**
 * Formato da imagem (optional)
 */
formato?: string
}
response: {
urlAvatar?: string
}
}
/**
 * Deleta um avatar de um usuário
 */
"DELETE /usuarios/:email/avatar": {

}
/**
 * Fabricante encontrado
 */
"GET /fabricantes/:fabricanteId": {
response: {
fabricanteId?: number
ativo?: boolean
nome?: string
urlLogoTipo?: string
urlLink?: string
urlCarrossel?: string
}
}
/**
 * Atualiza um fabricante
 */
"PUT /fabricantes/:fabricanteId": {
body: {
/**
 * Nome do fabricante (optional)
 */
nome?: string
/**
 * URL tipo logo (optional)
 */
urlLogoTipo?: string
/**
 * Insira neste campo uma URL para redirecionamento. A URL deve ser inserida por completa (optional)
 */
urlLink?: string
/**
 * Insira nesse campo a URL do Carrossel  da Marca (optional)
 */
urlCarrossel?: string
}
}
/**
 * Exclui um fabricante
 */
"DELETE /fabricantes/:fabricanteId": {

}
/**
 * Lista de posicionamentos do banner
 */
"GET /banners/posicionamentos": {
response: {
posicionamentoId?: number
descricao?: string
}[]
}
/**
 * Preços do produto variante informado
 */
"GET /produtos/:identificador/precos": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
response: {
produtoVarianteId?: number
sku?: string
precoDe?: number
precoPor?: number
fatorMultiplicadorPreco?: number
precosTabelaPreco?: {
produtoVarianteId?: number
tabelaPrecoId?: number
nome?: string
precoDe?: number
precoPor?: number
}[]
}
}
/**
 * Atualiza a autonomia de um Seller
 */
"PUT /resellers/:resellerId/autonomia": {
body: {
/**
 * Status da autonomia do seller
 */
ativo?: boolean
}
}
/**
 * Lista de produtos variantes vinculados aos tipo de evento
 */
"GET /eventos/:eventoId/produtos": {
response: {
eventoId?: number
produtoVarianteId?: number
recebidoForaLista?: boolean
removido?: boolean
}[]
}
/**
 * Vincula um ou mais produtos a um evento sem remover os produtos vinculados anteriormente
 */
"POST /eventos/:eventoId/produtos": {
body: {
/**
 * Identificadores dos produtos variantes a serem vinculados ao evento desejado
 */
produtosVariante?: {
/**
 * Identificador do produto variante
 */
produtoVarianteId?: number
}[]
}
}
/**
 * Atualiza lista de produtos vinculados a um evento removendo os itens vinculados anteriormente e mantendo apenas os enviados pelo request
 */
"PUT /eventos/:eventoId/produtos": {
body: {
/**
 * Identificadores dos produtos variantes a serem vinculados ao evento desejado
 */
produtosVariante?: {
/**
 * Identificador do produto variante
 */
produtoVarianteId?: number
}[]
}
}
/**
 * Atualiza o status do hotsite, sendo ativo (true) ou inativo (false)
 */
"PUT /hotsites/:hotsiteId/status": {
body: {
/**
 * Status para qual o hotsite indicado deve ir
 */
ativo?: boolean
}
}
/**
 * Autenticação realizada com sucesso
 */
"POST /autenticacao/login": {
body: {
/**
 * Login do usuário (optional)
 */
login?: string
/**
 * Senha do usuário (optional)
 */
senha?: string
}
}
/**
 * Parceiro encontrado
 */
"GET /parceiros/:nome": {
response: {
parceiroId?: number
marketPlaceId?: number
nome?: string
tabelaPrecoId?: number
portfolioId?: number
tipoEscopo?: string
ativo?: boolean
isMarketPlace?: boolean
origem?: string
}
}
/**
 * Seta status do produto variante como ativo ou inativo
 */
"PUT /produtos/:identificador/situacao": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
body: {
/**
 * Define se o produto variante informado será ativo ou inativo
 */
status?: boolean
}
}
/**
 * Lista de Grupos de Personalização
 */
"GET /grupospersonalizacao": {
response: {
grupoPersonalizacaoId?: number
nome?: string
ativo?: boolean
obrigatorio?: boolean
}[]
}
/**
 * Retorna o saldo de um usuário
 */
"GET /contascorrentes/:email": {

}
/**
 * Realiza um novo lançamento na conta corrente do cliente
 */
"POST /contascorrentes/:email": {
body: {
/**
 * Valor da conta corrente (optional)
 */
valor?: number
/**
 * Tipo de Lançamento (optional)
 */
tipoLancamento?: ("Credito" | "Debito")
/**
 * Observação (optional)
 */
observacao?: string
/**
 * Se será visível para o cliente (optional)
 */
visivelParaCliente?: boolean
}
}
/**
 * Lista de produtos
 */
"GET /resellers/produtos/:identificador": {
searchParams: {
/**
 * Define se o identificador informado é um id interno da fstore ou a Razão social do Reseller
 */
tipoIdentificador?: ("ResellerId" | "RazaoSocial")
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadeRegistros?: number
/**
 * Se deve retornar apenas produtos válidos (padrão: false)
 */
somenteValidos?: boolean
/**
 * Campos adicionais que se selecionados retornaram junto com o produto: Atacado, Estoque, Atributo, Informacao, TabelaPreo
 */
camposAdicionais?: string[]
}
response: {
produtoVarianteId?: number
produtoId?: number
idPaiExterno?: string
idVinculoExterno?: string
sku?: string
nome?: string
nomeProdutoPai?: string
urlProduto?: string
exibirMatrizAtributos?: string
contraProposta?: boolean
fabricante?: string
autor?: string
editora?: string
colecao?: string
genero?: string
precoCusto?: number
precoDe?: number
precoPor?: number
fatorMultiplicadorPreco?: number
prazoEntrega?: number
valido?: boolean
exibirSite?: boolean
freteGratis?: string
trocaGratis?: boolean
peso?: number
altura?: number
comprimento?: number
largura?: number
garantia?: number
isTelevendas?: boolean
ean?: string
localizacaoEstoque?: string
listaAtacado?: {
precoPor?: number
quantidade?: number
}[]
estoque?: {
estoqueFisico?: number
estoqueReservado?: number
centroDistribuicaoId?: number
alertaEstoque?: number
}[]
atributos?: {
tipoAtributo?: string
isFiltro?: boolean
nome?: string
valor?: string
exibir?: boolean
}[]
quantidadeMaximaCompraUnidade?: number
quantidadeMinimaCompraUnidade?: number
condicao?: string
informacoes?: {
informacaoId?: number
titulo?: string
texto?: string
tipoInformacao?: string
}[]
tabelasPreco?: {
tabelaPrecoId?: number
nome?: string
precoDe?: number
precoPor?: number
}[]
dataCriacao?: string
dataAtualizacao?: string
urlVideo?: string
spot?: boolean
paginaProduto?: boolean
marketplace?: boolean
somenteParceiros?: boolean
reseller?: {
resellerId?: number
razaoSocial?: string
centroDistribuicaoId?: number
ativo?: boolean
ativacaoAutomaticaProdutos?: boolean
autonomia?: boolean
buyBox?: boolean
nomeMarketPlace?: string
}
buyBox?: boolean
}[]
}
/**
 * Lista de pedidos
 */
"GET /pedidos/formaPagamento/:formasPagamento": {
searchParams: {
/**
 * Data inicial dos pedidos que deverão retornar (aaaa-mm-dd hh:mm:ss)
 */
dataInicial?: string
/**
 * Data final dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss)
 */
dataFinal?: string
/**
 * Tipo de filtro da data (Ordenação "desc" - padrão: DataPedido)
 */
enumTipoFiltroData?: ("DataPedido" | "DataAprovacao" | "DataModificacaoStatus" | "DataAlteracao" | "DataCriacao")
/**
 * Lista de situações que deverão retornar (lista separada por "," ex.: 1,2,3), caso vazio retornará todas as situações
 */
situacoesPedido?: string
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadeRegistros?: number
}
response: {
pedidoId?: number
situacaoPedidoId?: number
tipoRastreamentoPedido?: string
transacaoId?: number
data?: string
dataPagamento?: string
dataUltimaAtualizacao?: string
valorFrete?: number
valorTotalPedido?: number
valorDesconto?: number
valorDebitoCC?: number
cupomDesconto?: string
marketPlacePedidoId?: string
marketPlacePedidoSiteId?: string
canalId?: number
canalNome?: string
canalOrigem?: string
retiradaLojaId?: number
isPedidoEvento?: boolean
usuario?: {
usuarioId?: number
grupoInformacaoCadastral?: {
chave?: string
valor?: string
}[]
tipoPessoa?: string
origemContato?: string
tipoSexo?: string
nome?: string
cpf?: string
email?: string
rg?: string
telefoneResidencial?: string
telefoneCelular?: string
telefoneComercial?: string
dataNascimento?: string
razaoSocial?: string
cnpj?: string
inscricaoEstadual?: string
responsavel?: string
dataCriacao?: string
dataAtualizacao?: string
revendedor?: boolean
listaInformacaoCadastral?: {
chave?: string
valor?: string
}[]
}
pedidoEndereco?: {
tipo?: string
nome?: string
endereco?: string
numero?: string
complemento?: string
referencia?: string
cep?: string
tipoLogradouro?: string
logradouro?: string
bairro?: string
cidade?: string
estado?: string
pais?: string
}[]
frete?: {
freteContratoId?: number
freteContrato?: string
referenciaConector?: string
valorFreteEmpresa?: number
valorFreteCliente?: number
peso?: number
pesoCobrado?: number
volume?: number
volumeCobrado?: number
prazoEnvio?: number
prazoEnvioTexto?: string
retiradaLojaId?: number
centrosDistribuicao?: {
freteContratoId?: number
freteContrato?: string
valorFreteEmpresa?: number
valorFreteCliente?: number
peso?: number
pesoCobrado?: number
volume?: number
volumeCobrado?: number
prazoEnvio?: number
prazoEnvioTexto?: string
centroDistribuicaoId?: number
}[]
servico?: {
servicoId?: number
nome?: string
transportadora?: string
prazo?: number
servicoNome?: string
preco?: number
servicoTransporte?: number
codigo?: number
servicoMeta?: string
custo?: number
token?: string
}
retiradaAgendada?: {
lojaId?: number
retiradaData?: string
retiradaPeriodo?: string
nome?: string
documento?: string
codigoRetirada?: string
}
agendamento?: {
de?: string
ate?: string
}
informacoesAdicionais?: {
chave?: string
valor?: string
}[]
}
itens?: {
produtoVarianteId?: number
sku?: string
nome?: string
quantidade?: number
precoCusto?: number
precoVenda?: number
isBrinde?: boolean
valorAliquota?: number
isMarketPlace?: boolean
precoPor?: number
desconto?: number
totais?: {
precoCusto?: number
precoVenda?: number
precoPor?: number
desconto?: number
}
ajustes?: {
tipo?: string
valor?: number
observacao?: string
nome?: string
}[]
centroDistribuicao?: {
centroDistribuicaoId?: number
quantidade?: number
situacaoProdutoId?: number
valorFreteEmpresa?: number
valorFreteCliente?: number
}[]
valoresAdicionais?: {
tipo?: string
origem?: string
texto?: string
valor?: number
}[]
atributos?: {
produtoVarianteAtributoValor?: string
produtoVarianteAtributoNome?: string
}[]
embalagens?: {
tipoEmbalagemId?: number
nomeTipoEmbalagem?: string
mensagem?: string
valor?: number
descricao?: string
}[]
personalizacoes?: {
nomePersonalizacao?: string
valorPersonalizacao?: string
valor?: number
}[]
frete?: {
quantidade?: number
freteContratoId?: number
freteContrato?: string
valorFreteEmpresa?: number
valorFreteCliente?: number
peso?: number
pesoCobrado?: number
volume?: number
volumeCobrado?: number
prazoEnvio?: number
prazoEnvioTexto?: string
centroDistribuicaoId?: number
}[]
dadosProdutoEvento?: {
tipoPresenteRecebimento?: string
}
formulas?: {
chaveAjuste?: string
valor?: number
nome?: string
expressao?: string
expressaoInterpretada?: string
endPoint?: string
}[]
seller?: {
sellerId?: number
sellerNome?: string
sellerPedidoId?: number
}
}[]
assinatura?: {
assinaturaId?: number
grupoAssinaturaId?: number
tipoPeriodo?: string
tempoPeriodo?: number
percentualDesconto?: number
}[]
pagamento?: {
formaPagamentoId?: number
numeroParcelas?: number
valorParcela?: number
valorDesconto?: number
valorJuros?: number
valorTotal?: number
boleto?: {
urlBoleto?: string
codigoDeBarras?: string
}
cartaoCredito?: {
numeroCartao?: string
nomeTitular?: string
dataValidade?: string
codigoSeguranca?: string
documentoCartaoCredito?: string
token?: string
info?: string
bandeira?: string
}[]
pagamentoStatus?: {
numeroAutorizacao?: string
numeroComprovanteVenda?: string
dataAtualizacao?: string
dataUltimoStatus?: string
adquirente?: string
tid?: string
}[]
informacoesAdicionais?: {
chave?: string
valor?: string
}[]
}[]
observacao?: {
observacao?: string
usuario?: string
data?: string
publica?: boolean
}[]
valorCreditoFidelidade?: number
valido?: boolean
valorSubTotalSemDescontos?: number
pedidoSplit?: number[]
}[]
}
/**
 * Lista de pedidos
 */
"GET /pedidos": {
searchParams: {
/**
 * Data inicial dos pedidos que deverão retornar (aaaa-mm-dd hh:mm:ss)
 */
dataInicial?: string
/**
 * Data final dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss)
 */
dataFinal?: string
/**
 * Tipo de filtro da data (Ordenação "desc" - padrão: DataPedido)
 */
enumTipoFiltroData?: ("DataPedido" | "DataAprovacao" | "DataModificacaoStatus" | "DataAlteracao" | "DataCriacao")
/**
 * Lista de situações que deverão retornar (lista separada por "," ex.: 1,2,3), caso vazio retornará todas as situações
 */
situacoesPedido?: string
/**
 * Lista de formas de pagamento que deverão retornar (lista separada por "," ex.: 1,2,3), caso vazio retornará todas as formas de pagamento
 */
formasPagamento?: string
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadeRegistros?: number
/**
 * Deverá retornar apenas pedidos realizados pelo usuário com o e-mail passado
 */
email?: string
/**
 * Deverá retornar apenas pedidos válidos, inválidos ou todos (caso não seja informado)
 */
valido?: boolean
/**
 * Deverá retornar apenas pedidos que o produto de determinado sku foi comprado
 */
sku?: string
/**
 * Quando passado o valor true, deverá retornar apenas pedidos de assinatura. Quando falso, deverá retornar todos os pedidos.
 */
apenasAssinaturas?: boolean
}
response: {
pedidoId?: number
situacaoPedidoId?: number
tipoRastreamentoPedido?: string
transacaoId?: number
data?: string
dataPagamento?: string
dataUltimaAtualizacao?: string
valorFrete?: number
valorTotalPedido?: number
valorDesconto?: number
valorDebitoCC?: number
cupomDesconto?: string
marketPlacePedidoId?: string
marketPlacePedidoSiteId?: string
canalId?: number
canalNome?: string
canalOrigem?: string
retiradaLojaId?: number
isPedidoEvento?: boolean
usuario?: {
usuarioId?: number
grupoInformacaoCadastral?: {
chave?: string
valor?: string
}[]
tipoPessoa?: string
origemContato?: string
tipoSexo?: string
nome?: string
cpf?: string
email?: string
rg?: string
telefoneResidencial?: string
telefoneCelular?: string
telefoneComercial?: string
dataNascimento?: string
razaoSocial?: string
cnpj?: string
inscricaoEstadual?: string
responsavel?: string
dataCriacao?: string
dataAtualizacao?: string
revendedor?: boolean
listaInformacaoCadastral?: {
chave?: string
valor?: string
}[]
}
pedidoEndereco?: {
tipo?: string
nome?: string
endereco?: string
numero?: string
complemento?: string
referencia?: string
cep?: string
tipoLogradouro?: string
logradouro?: string
bairro?: string
cidade?: string
estado?: string
pais?: string
}[]
frete?: {
freteContratoId?: number
freteContrato?: string
referenciaConector?: string
valorFreteEmpresa?: number
valorFreteCliente?: number
peso?: number
pesoCobrado?: number
volume?: number
volumeCobrado?: number
prazoEnvio?: number
prazoEnvioTexto?: string
retiradaLojaId?: number
centrosDistribuicao?: {
freteContratoId?: number
freteContrato?: string
valorFreteEmpresa?: number
valorFreteCliente?: number
peso?: number
pesoCobrado?: number
volume?: number
volumeCobrado?: number
prazoEnvio?: number
prazoEnvioTexto?: string
centroDistribuicaoId?: number
}[]
servico?: {
servicoId?: number
nome?: string
transportadora?: string
prazo?: number
servicoNome?: string
preco?: number
servicoTransporte?: number
codigo?: number
servicoMeta?: string
custo?: number
token?: string
}
retiradaAgendada?: {
lojaId?: number
retiradaData?: string
retiradaPeriodo?: string
nome?: string
documento?: string
codigoRetirada?: string
}
agendamento?: {
de?: string
ate?: string
}
informacoesAdicionais?: {
chave?: string
valor?: string
}[]
}
itens?: {
produtoVarianteId?: number
sku?: string
nome?: string
quantidade?: number
precoCusto?: number
precoVenda?: number
isBrinde?: boolean
valorAliquota?: number
isMarketPlace?: boolean
precoPor?: number
desconto?: number
totais?: {
precoCusto?: number
precoVenda?: number
precoPor?: number
desconto?: number
}
ajustes?: {
tipo?: string
valor?: number
observacao?: string
nome?: string
}[]
centroDistribuicao?: {
centroDistribuicaoId?: number
quantidade?: number
situacaoProdutoId?: number
valorFreteEmpresa?: number
valorFreteCliente?: number
}[]
valoresAdicionais?: {
tipo?: string
origem?: string
texto?: string
valor?: number
}[]
atributos?: {
produtoVarianteAtributoValor?: string
produtoVarianteAtributoNome?: string
}[]
embalagens?: {
tipoEmbalagemId?: number
nomeTipoEmbalagem?: string
mensagem?: string
valor?: number
descricao?: string
}[]
personalizacoes?: {
nomePersonalizacao?: string
valorPersonalizacao?: string
valor?: number
}[]
frete?: {
quantidade?: number
freteContratoId?: number
freteContrato?: string
valorFreteEmpresa?: number
valorFreteCliente?: number
peso?: number
pesoCobrado?: number
volume?: number
volumeCobrado?: number
prazoEnvio?: number
prazoEnvioTexto?: string
centroDistribuicaoId?: number
}[]
dadosProdutoEvento?: {
tipoPresenteRecebimento?: string
}
formulas?: {
chaveAjuste?: string
valor?: number
nome?: string
expressao?: string
expressaoInterpretada?: string
endPoint?: string
}[]
seller?: {
sellerId?: number
sellerNome?: string
sellerPedidoId?: number
}
}[]
assinatura?: {
assinaturaId?: number
grupoAssinaturaId?: number
tipoPeriodo?: string
tempoPeriodo?: number
percentualDesconto?: number
}[]
pagamento?: {
formaPagamentoId?: number
numeroParcelas?: number
valorParcela?: number
valorDesconto?: number
valorJuros?: number
valorTotal?: number
boleto?: {
urlBoleto?: string
codigoDeBarras?: string
}
cartaoCredito?: {
numeroCartao?: string
nomeTitular?: string
dataValidade?: string
codigoSeguranca?: string
documentoCartaoCredito?: string
token?: string
info?: string
bandeira?: string
}[]
pagamentoStatus?: {
numeroAutorizacao?: string
numeroComprovanteVenda?: string
dataAtualizacao?: string
dataUltimoStatus?: string
adquirente?: string
tid?: string
}[]
informacoesAdicionais?: {
chave?: string
valor?: string
}[]
}[]
observacao?: {
observacao?: string
usuario?: string
data?: string
publica?: boolean
}[]
valorCreditoFidelidade?: number
valido?: boolean
valorSubTotalSemDescontos?: number
pedidoSplit?: number[]
}[]
}
/**
 * Caso a loja utilize as formas de pagamento do gateway o campo "formaPagamentoId" do objeto "pagamento" deverá conter o valor "200".
 */
"POST /pedidos": {
body: {
/**
 * Id do pedido que está sendo inserido. Caso seja informado deve ser um Id disponível na loja. Caso não seja informado um Id será gerado (optional)
 */
pedidoId?: number
/**
 * Id do carrinho que foi utilizado no pedido (optional)
 */
carrinhoId?: string
/**
 * Define em qual situação está o pedido. A lista completa das possíveis situações se encontra no GET /situacoesPedido
 */
situacaoPedidoId?: number
/**
 * Data em que o pedido foi realizado
 */
data?: string
/**
 * Valor total do pedido. Se informado deve ser igual a soma de todos os valores inclusos no pedido (preços dos produtos, ajustes, frete, etc) (optional)
 */
valorTotal?: number
/**
 * Informação do juros do pedido
 */
valorJuros?: number
/**
 * Informação de desconto do pedido
 */
valorDesconto?: number
/**
 * Id do usuário que realizou a compra. É possível recuperar o Id de um usuário no GET /usuarios
 */
usuarioId?: number
/**
 * Id do endereço do usuário que deve ser utilizado como endereço de entrega. Para buscar os endereços de um usuário utilize o GET /usuarios/{usuarioId}/enderecos
 */
enderecoId?: number
/**
 * Define se o pedido foi feito através de um dispositivo móvel ou não
 */
isMobile?: boolean
/**
 * Id do evento ao qual o pedido está vinculado (opcional)
 */
eventoId?: number
/**
 * Lista contendo os produtos do pedido
 */
produtos?: {
/**
 * Id do produto variante que está vinculado a esse pedido.
 */
produtoVarianteId?: number
/**
 * Define a quantidade do produto, podendo ser dividida por diferentes centros de distribuição
 */
quantidade?: {
/**
 * Quantidade por centro de distribuição
 */
quantidadeTotal?: number
/**
 * Quantidade (optional)
 */
quantidadePorCentroDeDistribuicao?: {
/**
 * Id do centro de distribuição
 */
centroDistribuicaoId?: number
/**
 * Quantidade
 */
quantidade?: number
}[]
}
/**
 * Preço de venda do produto, sem adição ou subtração de valores.
 */
precoVenda?: number
/**
 * Define se esse produto é um brinde ou não
 */
isBrinde?: boolean
/**
 * Lista contendo todos os ajustes de preço do produto
 */
ajustes?: {
/**
 * Define o tipo do ajuste de valor de um produto contido em um pedido. = ['Frete', 'Pricing', 'Atacarejo', 'Personalizacao', 'Embalagem', 'Promocao', 'PromocaoFrete', 'ContaCorrente', 'FormaPagamento', 'PromocaoProduto', 'TipoFreteProduto', 'Formula']stringEnum:"Frete", "Pricing", "Atacarejo", "Personalizacao", "Embalagem", "Promocao", "PromocaoFrete", "ContaCorrente", "FormaPagamento", "PromocaoProduto", "TipoFreteProduto", "Formula"
 */
tipo?: string
/**
 * Define o valor do ajuste a ser aplicado no produto. O valor pode ser positivo ou negativo
 */
valor?: number
/**
 * Observação (optional)
 */
observacao?: string
/**
 * Nome (optional)
 */
nome?: string
}[]
}[]
/**
 * Informações de frete do pedido
 */
fretes?: {
/**
 * Identificador do centro de distribuição de origem
 */
centroDistribuicaoId?: number
/**
 * Identificador do contrato de frete (optional)
 */
freteContratoId?: number
/**
 * Peso em gramas (g) do frete calculado (optional)
 */
peso?: number
/**
 * Peso em gramas cobrado do cliente (optional)
 */
pesoCobrado?: number
/**
 * Volume em metro cúbico (m³) calculado (optional)
 */
volume?: number
/**
 * Volume em metro cúbico (m³) cobrado do cliente (optional)
 */
volumeCobrado?: number
/**
 * Prazo do envio do frete em dias úteis
 */
prazoEnvio?: number
/**
 * Valor do frete (optional)
 */
valorFreteEmpresa?: number
/**
 * Valor do frete cobrado do cliente
 */
valorFreteCliente?: number
/**
 * Data estimada da entrega do produto (optional)
 */
dataEntrega?: string
/**
 * Informações adicionais do frete
 */
informacoesAdicionais?: {
/**
 * Chave
 */
chave?: string
/**
 * Valor
 */
valor?: string
}[]
}[]
/**
 * Informações de pagamento do pedido
 */
pagamento?: {
/**
 * Id da forma de pagamento
 */
formaPagamentoId?: number
/**
 * Número parcelas
 */
numeroParcelas?: number
/**
 * Valor da parcela
 */
valorParcela?: number
/**
 * Informações adicionais de pagamento (optional)
 */
informacaoAdicional?: {
/**
 * Chave
 */
chave?: string
/**
 * Valor
 */
valor?: string
}[]
}
/**
 * ParceiroId vinculado ao pedido (optional)
 */
canalId?: number
/**
 * Dados do pedido no marketplace (optional)
 */
omniChannel?: {
/**
 * Id do pedido que o cliente vê no momento que fecha a compra
 */
pedidoIdPublico?: string
/**
 * Id interno do marketplace
 */
pedidoIdPrivado?: string
/**
 * Dados do pedido no integrador
 */
integrador?: {
/**
 * Nome do parceiro integrador
 */
nome?: string
/**
 * Numero do pedido dentro do integrador
 */
pedidoId?: string
/**
 * Url do pedido dentro painel do integrador
 */
pedidoUrl?: string
}
}
/**
 * Id da transação (optional)
 */
transacaoId?: number
/**
 * Observação do pedido (optional)
 */
observacao?: string
/**
 * Se um pedido é valido (optional)
 */
valido?: boolean
/**
 * Cupom de desconto (optional)
 */
cupomDesconto?: string
/**
 * IP da criação do pedido (optional)
 */
ip?: string
/**
 * ID do usuário master que realizou o pedido, se houver (optional)
 */
usuarioMaster?: number
}
}
/**
 * Lista de portfolios
 */
"GET /portfolios": {
response: {
portfolioId?: number
nome?: string
ativo?: boolean
}[]
}
/**
 * Insere um novo portfolio
 */
"POST /portfolios": {
body: {
/**
 * Nome do portfolio
 */
nome?: string
}
}
/**
 * Lista de imagens vinculadas a um produtos
 */
"GET /produtos/:identificador/imagens": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
produtosIrmaos?: boolean
}
response: {
idImagem?: number
nomeArquivo?: string
url?: string
ordem?: number
estampa?: boolean
exibirMiniatura?: boolean
}[]
}
/**
 * Adiciona uma nova imagem vinculada a um produto
 */
"POST /produtos/:identificador/imagens": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
/**
 * Define o tipo de retorno a ser recebido. ListaIds retorna lista de Ids das imagens inseridas, Booleano retorna true ou false, de acordo com o resultado da operação. Valor padrão Booleano
 */
tipoRetorno?: ("ListaIds" | "Booleano")
}
body: {
/**
 * Lista com as imagens do produto no formato base 64 (optional)
 */
RAW_BODY: {
/**
 * Imagem do produto em base64
 */
base64?: string
/**
 * JPG ou PNG
 */
formato?: string
/**
 * Se a imagem será apresentada como miniatura
 */
exibirMiniatura?: boolean
/**
 * Se a imagem será apresentada como estampa
 */
estampa?: boolean
/**
 * Ordem para apresentação da imagem
 */
ordem?: number
}[]
}
}
/**
 * Limite de crédito de um usuário específico
 */
"GET /usuarios/limiteCreditoPorUsuarioId/:usuarioId": {
response: {
usuarioId?: number
valor?: number
saldo?: number
}
}
/**
 * SEO do produto informado
 */
"GET /produtos/:identificador/seo": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoId" | "ProdutoVarianteId")
}
response: {
tagCanonical?: string
title?: string
metatags?: {
metatagId?: number
content?: string
httpEquiv?: string
name?: string
scheme?: string
}[]
}
}
/**
 * Insere um SEO para um produto específico
 */
"POST /produtos/:identificador/seo": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoId" | "ProdutoVarianteId")
}
body: {
/**
 * Informe a URL a ser inserida na TAG Canonical. Caso nenhum dado seja inserido, a TAG Canonical não será inserida na Página do Produto (optional)
 */
tagCanonical?: string
/**
 * Informe o title da página do produto (optional)
 */
title?: string
/**
 * Informe os dados da Meta Tag (optional)
 */
metaTags?: {
/**
 * Dados da Meta Tag
 */
content?: string
/**
 * Dados da Meta Tag
 */
httpEquiv?: string
/**
 * Dados da Meta Tag
 */
name?: string
/**
 * Dados da Meta Tag
 */
scheme?: string
}[]
}
}
/**
 * Atualiza um SEO de um produto específico
 */
"PUT /produtos/:identificador/seo": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno
 */
tipoIdentificador?: ("Sku" | "ProdutoId" | "ProdutoVarianteId")
}
body: {
/**
 * Informe a URL a ser inserida na TAG Canonical. Caso nenhum dado seja inserido, a TAG Canonical não será inserida na Página do Produto (optional)
 */
tagCanonical?: string
/**
 * Informe o title da página do produto (optional)
 */
title?: string
/**
 * Informe os dados da Meta Tag (optional)
 */
metaTags?: {
/**
 * Dados da Meta Tag
 */
content?: string
/**
 * Dados da Meta Tag
 */
httpEquiv?: string
/**
 * Dados da Meta Tag
 */
name?: string
/**
 * Dados da Meta Tag
 */
scheme?: string
}[]
}
}
/**
 * Deleta o SEO de um produto específico
 */
"DELETE /produtos/:identificador/seo": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoId" | "ProdutoVarianteId")
}
}
/**
 * Adiciona um vínculo entre usuário e parceiro
 */
"POST /usuarios/:email/parceiro": {
body: {
/**
 * Id do parceiro (optional)
 */
parceiroId?: number
/**
 * Vinculo vitalício (optional)
 */
vinculoVitalicio?: boolean
/**
 * Data inicial do vinculo entre usuário e parceiro (optional)
 */
dataInicial?: string
/**
 * Data final do vinculo entre usuário e parceiro (optional)
 */
dataFinal?: string
}
}
/**
 * Atualiza um vínculo entre usuário e parceiro
 */
"PUT /usuarios/:email/parceiro": {
body: {
/**
 * Vinculo vitalício (optional)
 */
vinculoVitalicio?: boolean
/**
 * Data inicial do vinculo entre usuário e parceiro (optional)
 */
dataInicial?: string
/**
 * Data final do vinculo entre usuário e parceiro (optional)
 */
dataFinal?: string
}
}
/**
 * Remove o vínculo entre usuário e parceiro
 */
"DELETE /usuarios/:email/parceiro": {
body: {
/**
 * Número identificador do parceiro (Max Length: 4)
 */
parceiroId?: number
}
}
/**
 * Retorna usuário encontrado
 */
"GET /usuarios/:email/enderecos": {
response: {
enderecoId?: number
nomeEndereco?: string
rua?: string
numero?: string
complemento?: string
referencia?: string
bairro?: string
cidade?: string
estado?: string
cep?: string
utilizadoUltimoPedido?: boolean
pais?: string
}[]
}
/**
 * Insere um endereço para um usuário pelo e-mail
 */
"POST /usuarios/:email/enderecos": {
body: {
/**
 * Nome de identificação do endereço a ser cadastrado (Max Length: 100)
 */
nomeEndereco?: string
/**
 * Nome da rua (Max Length: 500)
 */
rua?: string
/**
 * Número do local (Max Length: 50)
 */
numero?: string
/**
 * Complemento (Max Length: 250) (optional)
 */
complemento?: string
/**
 * Referência para a localização do endereço (Max Length: 500) (optional)
 */
referencia?: string
/**
 * Bairro do endereço (Max Length: 100)
 */
bairro?: string
/**
 * Cidade em que se localiza o endereço (Max Length: 100)
 */
cidade?: string
/**
 * O estado (Max Length: 100)
 */
estado?: string
/**
 * Código do cep (Max Length: 50)
 */
cep?: string
}
}
/**
 * Atualiza um script existente
 */
"PUT /gestorscripts/scripts/:scriptId": {
body: {
/**
 * Nome do script
 */
nome?: string
/**
 * Data inicial do script
 */
dataInicial?: string
/**
 * Data final do script
 */
dataFinal?: string
/**
 * Informe se o script está ativo ou não
 */
ativo?: boolean
/**
 * Prioridade do script
 */
prioridade?: number
/**
 * Posição do script
 */
posicao?: ("HeaderPrimeiraLinha" | "HeaderUltimaLinha" | "BodyPrimeiraLinha" | "BodyUltimaLinha" | "FooterPrimeiraLinha" | "FooterUltimeLinha")
/**
 * Tipo da página do script
 */
tipoPagina?: ("Todas" | "Home" | "Busca" | "Categoria" | "Fabricante" | "Estaticas" | "Produto" | "Carrinho")
/**
 * Identificador da página
 */
identificadorPagina?: string
/**
 * Conteúdo do script
 */
conteudo?: string
/**
 * Status do script
 */
publicado?: boolean
}
}
/**
 * Exclui um Script
 */
"DELETE /gestorscripts/scripts/:scriptId": {

}
/**
 * Ativa ou desativa um endereço de um usuário com base no id do usuário
 */
"PUT /usuarios/:usuarioId/enderecos/:enderecoId/ativar": {
body: {
/**
 * Status do endereço
 */
status?: boolean
}
}
/**
 * Ativa ou desativa um Seller
 */
"PUT /resellers/:resellerId/status": {
body: {
/**
 * Status do seller (ativo / inativo)
 */
ativo?: boolean
}
}
/**
 * Atacarejo
 */
"GET /produtos/:identificador/atacarejo/:produtoVarianteAtacadoId": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
response: {
produtoVarianteAtacadoId?: number
precoAtacado?: number
quantidade?: number
}
}
/**
 * Atualiza um Atacarejo
 */
"PUT /produtos/:identificador/atacarejo/:produtoVarianteAtacadoId": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
body: {
/**
 * Preço atacado (optional)
 */
precoAtacado?: number
/**
 * Quantidade do produto (optional)
 */
quantidade?: number
}
}
/**
 * Remove um Atacarejo
 */
"DELETE /produtos/:identificador/atacarejo/:produtoVarianteAtacadoId": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
}
/**
 * Buscar todos os autores
 */
"GET /autores": {

}
/**
 * Inserir autor
 */
"POST /autores": {
body: {
/**
 * Nome do Autor
 */
nome?: string
/**
 * Status do autor
 */
ativo?: boolean
}
}
/**
 * Lista dos estados
 */
"GET /lojasFisicas/estados": {
response: {
estadoId?: number
nome?: string
sigla?: string
regiao?: string
}[]
}
/**
 * Método responsável por retornar um produto específico buscando pelo seu identificador, que pode ser um sku ou produto variante. O tipo do identificador pode ser definido no campo tipoIdentificador. Também é possível informar quais informações adicionais devem ser retornadas na consulta utilizando o campo campos adicionais.
 */
"GET /produtos/:identificador": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId" | "ProdutoId")
/**
 * Campo opcional que define quais dados extras devem ser retornados em conjunto com os dados básicos do produto, valores aceitos: Atacado, Estoque,  Atributo ,  Informacao,  TabelaPreco
 */
camposAdicionais?: string[]
}
response: {
produtoVarianteId?: number
produtoId?: number
idPaiExterno?: string
idVinculoExterno?: string
sku?: string
nome?: string
nomeProdutoPai?: string
urlProduto?: string
exibirMatrizAtributos?: string
contraProposta?: boolean
fabricante?: string
autor?: string
editora?: string
colecao?: string
genero?: string
precoCusto?: number
precoDe?: number
precoPor?: number
fatorMultiplicadorPreco?: number
prazoEntrega?: number
valido?: boolean
exibirSite?: boolean
freteGratis?: string
trocaGratis?: boolean
peso?: number
altura?: number
comprimento?: number
largura?: number
garantia?: number
isTelevendas?: boolean
ean?: string
localizacaoEstoque?: string
listaAtacado?: {
precoPor?: number
quantidade?: number
}[]
estoque?: {
estoqueFisico?: number
estoqueReservado?: number
centroDistribuicaoId?: number
alertaEstoque?: number
}[]
atributos?: {
tipoAtributo?: string
isFiltro?: boolean
nome?: string
valor?: string
exibir?: boolean
}[]
quantidadeMaximaCompraUnidade?: number
quantidadeMinimaCompraUnidade?: number
condicao?: string
informacoes?: {
informacaoId?: number
titulo?: string
texto?: string
tipoInformacao?: string
}[]
tabelasPreco?: {
tabelaPrecoId?: number
nome?: string
precoDe?: number
precoPor?: number
}[]
dataCriacao?: string
dataAtualizacao?: string
urlVideo?: string
spot?: boolean
paginaProduto?: boolean
marketplace?: boolean
somenteParceiros?: boolean
reseller?: {
resellerId?: number
razaoSocial?: string
centroDistribuicaoId?: number
ativo?: boolean
ativacaoAutomaticaProdutos?: boolean
autonomia?: boolean
buyBox?: boolean
nomeMarketPlace?: string
}
buyBox?: boolean
consumo?: {
quantidadeDias?: number
enviarEmail?: boolean
}
prazoValidade?: number
}
}
/**
 * Atualiza um produto com base nos dados enviados
 */
"PUT /produtos/:identificador": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
body: {
/**
 * Representa o ProdutoId agrupador por variante (optional)
 */
idPaiExterno?: string
/**
 * Representa o ParentId agrupador por parent (optional)
 */
idVinculoExterno?: string
/**
 * (Max Length: 50) Sku do produto
 */
sku?: string
/**
 * (Max Length: 300) Nome do produto variante
 */
nome?: string
/**
 * Nome do produto (pai do variante) (optional)
 */
nomeProdutoPai?: string
/**
 * Tipo de exibição da matriz de atributos (optional)
 */
exibirMatrizAtributos?: ("Sim" | "Nao" | "Neutro")
/**
 * Se o produto aceita contra proposta (optional)
 */
contraProposta?: boolean
/**
 * (Max Length: 100) Nome do fabricante
 */
fabricante?: string
/**
 * (Max Length: 500) Nome do autor (optional)
 */
autor?: string
/**
 * (Max Length: 100) Nome da editora (optional)
 */
editora?: string
/**
 * (Max Length: 100) Nome da coleção (optional)
 */
colecao?: string
/**
 * (Max Length: 100) Nome do gênero (optional)
 */
genero?: string
/**
 * Max Length: 8, "0000.0000,00") Preço de custo do produto variante (optional)
 */
precoCusto?: number
/**
 * (Max Length: 8, "0000.0000,00") "Preço De" do produto variante (optional)
 */
precoDe?: number
/**
 * (Max Length: 8, "0000.0000,00") "Preço Por" de venda do produto variante
 */
precoPor?: number
/**
 * (Max Length: 8, "0000.0000,00") Fator multiplicador que gera o preço de exibição do produto.Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa no "PrecoPor". (1 por padrão) (optional)
 */
fatorMultiplicadorPreco?: number
/**
 * Prazo de entrega do produto variante (optional)
 */
prazoEntrega?: number
/**
 * Define se um produto variante é valido ou não (optional)
 */
valido?: boolean
/**
 * Define se um produto deve ser exibido no site (optional)
 */
exibirSite?: boolean
/**
 * Define a qual regra de calculo de frete o produto vai pertencer
 */
freteGratis?: ("Sempre" | "Nunca" | "Neutro" | "Desconsiderar_Regras")
/**
 * Define se o produto variante tem troca grátis (optional)
 */
trocaGratis?: boolean
/**
 * (Max Length: 8, "0000.0000,00") Peso do produto variante, em gramas (g)
 */
peso?: number
/**
 * (Max Length: 8, "0000.0000,00") Altura do produto variante, em centímetros (cm).
 */
altura?: number
/**
 * (Max Length: 8, "0000.0000,00") Comprimento do produto variante, em centímetros (cm).
 */
comprimento?: number
/**
 * (Max Length: 8, "0000.0000,00") Largura do produto variante, em centímetros (cm).
 */
largura?: number
/**
 * Define se o produto variante tem garantia (optional)
 */
garantia?: number
/**
 * Define se o produto contém televendas (optional)
 */
isTelevendas?: boolean
/**
 * (Max Length: 25) EAN do produto variante (optional)
 */
ean?: string
/**
 * (Max Length: 255) Localização no estoque do produto variante (optional)
 */
localizacaoEstoque?: string
/**
 * Dados de atacado do produto variante (optional)
 */
listaAtacado?: {
/**
 * (Max Length: 8, "0000.0000,00") - Preco Por do item por atacado
 */
precoPor?: number
/**
 * Quantidade para compra de atacado
 */
quantidade?: number
}[]
/**
 * Lista de estoque/centro de distribuição do produto. Obrigatório se valido for true (optional)
 */
estoque?: {
/**
 * Estoque físico do produto
 */
estoqueFisico?: number
/**
 * Estoque reservado do produto
 */
estoqueReservado?: number
/**
 * Id do centro de distribuição do estoque do produto
 */
centroDistribuicaoId?: number
/**
 * Quantidade para ativar o alerta de estoque
 */
alertaEstoque?: number
}[]
/**
 * Lista de atributos do produto
 */
listaAtributos?: {
/**
 * (Max Length: 100) - Define o nome do atributo
 */
nome?: string
/**
 * (Max Length: 8, "0000.0000,00") - Define o valor do atributo
 */
valor?: string
/**
 * Define se o atributo deverá ser exibido
 */
exibir?: boolean
}[]
/**
 * Quantidade máxima de compra do produto variante (optional)
 */
quantidadeMaximaCompraUnidade?: number
/**
 * Quantidade mínima de compra do produto variante (optional)
 */
quantidadeMinimaCompraUnidade?: number
/**
 * Condição do produto variante (optional)
 */
condicao?: ("Novo" | "Usado" | "Renovado" | "Danificado")
/**
 * Url do vídeo do Produto (optional)
 */
urlVideo?: string
/**
 * Se o produto aparece no Spot (optional)
 */
spot?: boolean
/**
 * Se o produto aparece na Url (optional)
 */
paginaProduto?: boolean
/**
 * Se o produto aparece no Marketplace (optional)
 */
marketplace?: boolean
/**
 * Se o produto aparece somente nos Parceiros
 */
somenteParceiros?: boolean
/**
 * Se o produto deve ser agrupado pelo EAN (optional)
 */
buyBox?: boolean
/**
 * Prazo de validade ou consumo do produto (optional)
 */
prazoValidade?: number
/**
 * Dados de consumo de produto e se deve enviar os dias de consumo por e-mail (optional)
 */
consumo?: {
/**
 * Quantidade de Dias (optional)
 */
quantidadeDias?: number
/**
 * Enviar e-mail (optional)
 */
enviarEmail?: boolean
}
}
}
/**
 * Lista de versões
 */
"GET /gestorscripts/scripts/:scriptId/versoes": {
response: {
versaoId?: number
scriptId?: number
dataCadastro?: string
identificadorPagina?: string
publicado?: boolean
usuario?: string
}[]
}
/**
 * Insere uma versão para um script existente
 */
"POST /gestorscripts/scripts/:scriptId/versoes": {
body: {
/**
 * Identificador da página
 */
identificadorPagina?: string
/**
 * Conteúdo do script
 */
conteudo?: string
/**
 * Status do script
 */
publicado?: boolean
}
}
/**
 * Reseller específico
 */
"GET /resellers/token": {
response: {
resellerId?: number
razaoSocial?: string
centroDistribuicaoId?: number
ativo?: boolean
ativacaoAutomaticaProdutos?: boolean
autonomia?: boolean
buyBox?: boolean
nomeMarketPlace?: string
}
}
/**
 * Categoria encontrada
 */
"GET /categorias/erp/:id": {
searchParams: {
/**
 * Hierarquia da categoria
 */
hierarquia?: boolean
/**
 * Se será apresentado somente categorias filhas
 */
somenteFilhos?: boolean
}
response: {
id?: number
nome?: string
categoriaPaiId?: number
categoriaERPId?: string
ativo?: boolean
isReseller?: boolean
exibirMatrizAtributos?: string
quantidadeMaximaCompraUnidade?: number
valorMinimoCompra?: number
exibeMenu?: boolean
urlHotSite?: string
}
}
/**
 * Atualiza uma categoria utilizando o id do erp como identificador
 */
"PUT /categorias/erp/:id": {
body: {
/**
 * Nome da categoria (optional)
 */
nome?: string
/**
 * Id da categoria pai (optional)
 */
categoriaPaiId?: number
/**
 * Id da categoria ERP (optional)
 */
categoriaERPId?: string
/**
 * Categoria ativo/inativo (optional)
 */
ativo?: boolean
/**
 * Categoria de reseller (optional)
 */
isReseller?: boolean
/**
 * Exibir Matriz de Atributos (optional)
 */
exibirMatrizAtributos?: ("Sim" | "Nao" | "Neutro")
/**
 * Informe a quantidade máxima permitida para compra por produtos desta categoria. Informe zero para assumir a configuração geral da loja (optional)
 */
quantidadeMaximaCompraUnidade?: number
/**
 * Informe o valor mínimo para compra em produtos desta categoria (optional)
 */
valorMinimoCompra?: number
/**
 * Informe se será exibida no menu (optional)
 */
exibeMenu?: boolean
}
}
/**
 * Categoria excluída com sucesso
 */
"DELETE /categorias/erp/:id": {

}
/**
 * Templates
 */
"GET /templates": {

}
/**
 * Lista de usuários
 */
"GET /usuarios": {
searchParams: {
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadeRegistros?: number
/**
 * Data inicial da data de criação do usuário que deverão retornar (aaaa-mm-dd hh:mm:ss)
 */
dataInicial?: string
/**
 * Data final da data de criação do usuário que deverão retornar (aaaa-mm-dd hh:mm:ss)
 */
dataFinal?: string
/**
 * Tipo de filtro de data
 */
enumTipoFiltroData?: ("DataAlteracao" | "DataCriacao")
/**
 * Status de aprovação
 */
aprovado?: boolean
}
response: {
usuarioId?: number
bloqueado?: boolean
grupoInformacaoCadastral?: {
chave?: string
valor?: string
}[]
tipoPessoa?: string
origemContato?: string
tipoSexo?: string
nome?: string
cpf?: string
email?: string
rg?: string
telefoneResidencial?: string
telefoneCelular?: string
telefoneComercial?: string
dataNascimento?: string
razaoSocial?: string
cnpj?: string
inscricaoEstadual?: string
responsavel?: string
dataCriacao?: string
dataAtualizacao?: string
revendedor?: boolean
listaInformacaoCadastral?: {
chave?: string
valor?: string
}[]
avatar?: string
ip?: string
aprovado?: boolean
}[]
}
/**
 * Insere um novo usuário
 */
"POST /usuarios": {
body: {
/**
 * Tipo de pessoa
 */
tipoPessoa?: ("Fisica" | "Juridica")
/**
 * Origem do contato
 */
origemContato?: ("Google" | "Bing" | "Jornal" | "PatrocinioEsportivo" | "RecomendacaoAlguem" | "Revista" | "SiteInternet" | "Televisao" | "Outro" | "UsuarioImportadoViaAdmin" | "PayPalExpress")
/**
 * Tipo Sexo (optional)
 */
tipoSexo?: ("Undefined" | "Masculino" | "Feminino")
/**
 * Nome do usuário (Max Length: 100)
 */
nome?: string
/**
 * CPF do usuário caso seja pessoa física (Max Length: 50) (optional)
 */
cpf?: string
/**
 * E-mail do usuário (Max Length: 100)
 */
email?: string
/**
 * RG do usuário caso seja pessoa física (Max Length: 50) (optional)
 */
rg?: string
/**
 * Telefone residencial do usuário. Deve ser informado o DDD junto ao número(Max Length: 50)
 */
telefoneResidencial?: string
/**
 * Telefone celular do usuário. Deve ser informado o DDD junto ao número (Max Length: 50) (optional)
 */
telefoneCelular?: string
/**
 * Telefone comercial do usuário. Deve ser informado o DDD junto ao número(Max Length: 50) (optional)
 */
telefoneComercial?: string
/**
 * Data de nascimento (optional)
 */
dataNascimento?: string
/**
 * Razão social do usuário, caso seja uma pessoa jurídica(Max Length: 100) (optional)
 */
razaoSocial?: string
/**
 * CNPJ do usuário, caso seja uma pessoa jurídica(Max Length: 50) (optional)
 */
cnpj?: string
/**
 * Inscrição estadual do usuário, caso seja uma pessoa jurídica(Max Length: 50) (optional)
 */
inscricaoEstadual?: string
/**
 * Responsável(Max Length: 100) (optional)
 */
responsavel?: string
/**
 * Data de criação do cadastro (optional)
 */
dataCriacao?: string
/**
 * Data de atualização do cadastro (optional)
 */
dataAtualizacao?: string
/**
 * Se o usuário é revendedor (optional)
 */
revendedor?: boolean
/**
 * Informação cadastral (optional)
 */
listaInformacaoCadastral?: {
/**
 * Chave
 */
chave?: string
/**
 * Valor
 */
valor?: string
}[]
/**
 * Avatar (Max Length: 50) (optional)
 */
avatar?: string
/**
 * IP do usuário (Max Length: 20) (optional)
 */
ip?: string
/**
 * Seta ou retorna o valor de Aprovado (optional)
 */
aprovado?: boolean
}
}
/**
 * Dados da loja
 */
"GET /loja": {
response: {
nome?: string
urlSite?: string
urlCarrinho?: string
}
}
/**
 * Indicadores de Faturamento
 */
"GET /dashboard/faturamento": {
searchParams: {
/**
 * Data inicial dos indicadores que deverão retonar (aaaa-mm-dd)
 */
dataInicial?: string
/**
 * Data final dos indicadores que deverão retonar (aaaa-mm-dd)
 */
dataFinal?: string
/**
 * Data inicial do comparativo dos indicadores que deverão retonar (aaaa-mm-dd)
 */
dataInicialComparativo?: string
/**
 * Data final do comparativo dos indicadores que deverão retonar (aaaa-mm-dd)
 */
dataFinalComparativo?: string
}
response: {
indicadorReceita?: number
indicadorPedido?: number
indicadorTicketMedio?: number
indicadorReceitaComparativo?: number
indicadorPedidoComparativo?: number
indicadorTicketMedioComparativo?: number
indicadorReceitaFormatado?: string
indicadorPedidoFormatado?: string
indicadorTicketMedioFormatado?: string
indicadorReceitaComparativoFormatado?: string
indicadorPedidoComparativoFormatado?: string
indicadorTicketMedioComparativoFormatado?: string
indicadorReceitaPorcentagem?: string
indicadorPedidoPorcentagem?: string
indicadorTicketMedioPorcentagem?: string
}
}
/**
 * Grupo de assinatura
 */
"GET /assinaturas/grupoassinatura": {
response: {
grupoAssinaturaId?: number
nome?: string
recorrencias?: {
recorrenciaId?: number
nome?: string
dias?: number
}[]
}[]
}
/**
 * Lista de pedidos
 */
"GET /pedidos/:pedidoId/rastreamento": {
response: {
pedidoRastreamentoId?: number
dataAtualizacao?: string
notaFiscal?: string
serieNF?: string
cfop?: number
dataEnviado?: string
urlNFE?: string
chaveAcessoNFE?: string
rastreamento?: string
urlRastreamento?: string
transportadora?: string
dataEntrega?: string
}
}
/**
 * Insere um rastreamento e status a um pedido
 */
"POST /pedidos/:pedidoId/rastreamento": {
body: {
/**
 * Id da situação do pedido
 */
situacaoPedidoId?: number
/**
 * Id do centro de distribuição
 */
centroDistribuicaoId?: number
/**
 * Rastreamento (optional)
 */
rastreamento?: string
/**
 * Data do pedido (optional)
 */
dataEvento?: string
/**
 * Número da nota fiscal (optional)
 */
numeroNotaFiscal?: string
/**
 * Chave acesso NFE (optional)
 */
chaveAcessoNFE?: string
/**
 * URL NFE (optional)
 */
urlNFE?: string
/**
 * Serie NFE (optional)
 */
serieNFE?: string
/**
 * CFOP (optional)
 */
cfop?: string
/**
 * URL Rastreamento (optional)
 */
urlRastreamento?: string
}
}
/**
 * Atualiza a data de entrega do pedido
 */
"PUT /pedidos/:pedidoId/rastreamento": {
body: {
/**
 * Objeto com os dados do rastreamento
 */
RAW_BODY: {
/**
 * Código de verificação do transporte do produto
 */
rastreamento?: string
/**
 * Data que a entrega foi realizada
 */
dataEntrega?: string
}
}
}
/**
 * Rastreamento de produto encontrado
 */
"GET /pedidos/:pedidoId/produtos/:produtoVarianteId/rastreamento/:pedidoRastreamentoProdutoId": {
response: {
pedidoRastreamentoProdutoId?: number
pedidoId?: number
produtoVarianteId?: number
pedidoProdutoId?: number
dataInclusao?: string
dataAlteracao?: string
notaFiscal?: string
cfop?: number
dataEnviado?: string
chaveAcessoNFE?: string
rastreamento?: string
urlRastreamento?: string
quantidade?: number
urlNFE?: string
serieNFE?: string
tipoPostagem?: string
centroDistribuicao?: string
transportadora?: string
dataEntrega?: string
}
}
/**
 * Atualiza rastreamento de produto completo (com os dados da N.F.)
 */
"PUT /pedidos/:pedidoId/produtos/:produtoVarianteId/rastreamento/:pedidoRastreamentoProdutoId": {
body: {
/**
 * Nota Fiscal
 */
notaFiscal?: string
/**
 * CFOP
 */
cfop?: number
/**
 * Data Enviado
 */
dataEnviado?: string
/**
 * Chave de acesso NFE
 */
chaveAcessoNFE?: string
/**
 * Rastreamento (optional)
 */
rastreamento?: string
/**
 * URL de rastreamento (optional)
 */
urlRastreamento?: string
/**
 * Transportadora (optional)
 */
transportadora?: string
/**
 * Data da entrega (optional)
 */
dataEntrega?: string
}
}
/**
 * Lista de detalhes de frete
 */
"GET /fretes/:freteId/detalhes": {
response: {
freteId?: number
cepInicial?: number
cepFinal?: number
variacoesFreteDetalhe?: {
pesoInicial?: number
pesoFinal?: number
valorFrete?: number
prazoEntrega?: number
valorPreco?: number
valorPeso?: number
}[]
}[]
}
/**
 * Insere um novo detalhe de frete vinculado a um contrato de frete
 */
"POST /fretes/:freteId/detalhes": {
body: {
/**
 * Informe o cep inicial (optional)
 */
cepInicial?: number
/**
 * Informe o cep final (optional)
 */
cepFinal?: number
/**
 * Variações de detalhe do frete (optional)
 */
variacoesFreteDetalhe?: {
/**
 * Informe o peso inicial
 */
pesoInicial?: number
/**
 * Informe o peso final
 */
pesoFinal?: number
/**
 * Informe o valor do frete
 */
valorFrete?: number
/**
 * Informe o prazo de entrega
 */
prazoEntrega?: number
/**
 * Informe o valor preço
 */
valorPreco?: number
/**
 * Informe o valor peso
 */
valorPeso?: number
}[]
}
}
/**
 * Exclui os detalhes de um contrato de frete
 */
"DELETE /fretes/:freteId/detalhes": {

}
/**
 * Pedido encontrado
 */
"GET /pedidos/:pedidoId": {
response: {
pedidoId?: number
situacaoPedidoId?: number
tipoRastreamentoPedido?: string
transacaoId?: number
data?: string
dataPagamento?: string
dataUltimaAtualizacao?: string
valorFrete?: number
valorTotalPedido?: number
valorDesconto?: number
valorDebitoCC?: number
cupomDesconto?: string
marketPlacePedidoId?: string
marketPlacePedidoSiteId?: string
canalId?: number
canalNome?: string
canalOrigem?: string
retiradaLojaId?: number
isPedidoEvento?: boolean
usuario?: {
usuarioId?: number
grupoInformacaoCadastral?: {
chave?: string
valor?: string
}[]
tipoPessoa?: string
origemContato?: string
tipoSexo?: string
nome?: string
cpf?: string
email?: string
rg?: string
telefoneResidencial?: string
telefoneCelular?: string
telefoneComercial?: string
dataNascimento?: string
razaoSocial?: string
cnpj?: string
inscricaoEstadual?: string
responsavel?: string
dataCriacao?: string
dataAtualizacao?: string
revendedor?: boolean
listaInformacaoCadastral?: {
chave?: string
valor?: string
}[]
}
pedidoEndereco?: {
tipo?: string
nome?: string
endereco?: string
numero?: string
complemento?: string
referencia?: string
cep?: string
tipoLogradouro?: string
logradouro?: string
bairro?: string
cidade?: string
estado?: string
pais?: string
}[]
frete?: {
freteContratoId?: number
freteContrato?: string
referenciaConector?: string
valorFreteEmpresa?: number
valorFreteCliente?: number
peso?: number
pesoCobrado?: number
volume?: number
volumeCobrado?: number
prazoEnvio?: number
prazoEnvioTexto?: string
retiradaLojaId?: number
centrosDistribuicao?: {
freteContratoId?: number
freteContrato?: string
valorFreteEmpresa?: number
valorFreteCliente?: number
peso?: number
pesoCobrado?: number
volume?: number
volumeCobrado?: number
prazoEnvio?: number
prazoEnvioTexto?: string
centroDistribuicaoId?: number
}[]
servico?: {
servicoId?: number
nome?: string
transportadora?: string
prazo?: number
servicoNome?: string
preco?: number
servicoTransporte?: number
codigo?: number
servicoMeta?: string
custo?: number
token?: string
}
retiradaAgendada?: {
lojaId?: number
retiradaData?: string
retiradaPeriodo?: string
nome?: string
documento?: string
codigoRetirada?: string
}
agendamento?: {
de?: string
ate?: string
}
informacoesAdicionais?: {
chave?: string
valor?: string
}[]
}
itens?: {
produtoVarianteId?: number
sku?: string
nome?: string
quantidade?: number
precoCusto?: number
precoVenda?: number
isBrinde?: boolean
valorAliquota?: number
isMarketPlace?: boolean
precoPor?: number
desconto?: number
totais?: {
precoCusto?: number
precoVenda?: number
precoPor?: number
desconto?: number
}
ajustes?: {
tipo?: string
valor?: number
observacao?: string
nome?: string
}[]
centroDistribuicao?: {
centroDistribuicaoId?: number
quantidade?: number
situacaoProdutoId?: number
valorFreteEmpresa?: number
valorFreteCliente?: number
}[]
valoresAdicionais?: {
tipo?: string
origem?: string
texto?: string
valor?: number
}[]
atributos?: {
produtoVarianteAtributoValor?: string
produtoVarianteAtributoNome?: string
}[]
embalagens?: {
tipoEmbalagemId?: number
nomeTipoEmbalagem?: string
mensagem?: string
valor?: number
descricao?: string
}[]
personalizacoes?: {
nomePersonalizacao?: string
valorPersonalizacao?: string
valor?: number
}[]
frete?: {
quantidade?: number
freteContratoId?: number
freteContrato?: string
valorFreteEmpresa?: number
valorFreteCliente?: number
peso?: number
pesoCobrado?: number
volume?: number
volumeCobrado?: number
prazoEnvio?: number
prazoEnvioTexto?: string
centroDistribuicaoId?: number
}[]
dadosProdutoEvento?: {
tipoPresenteRecebimento?: string
}
formulas?: {
chaveAjuste?: string
valor?: number
nome?: string
expressao?: string
expressaoInterpretada?: string
endPoint?: string
}[]
seller?: {
sellerId?: number
sellerNome?: string
sellerPedidoId?: number
}
}[]
assinatura?: {
assinaturaId?: number
grupoAssinaturaId?: number
tipoPeriodo?: string
tempoPeriodo?: number
percentualDesconto?: number
}[]
pagamento?: {
formaPagamentoId?: number
numeroParcelas?: number
valorParcela?: number
valorDesconto?: number
valorJuros?: number
valorTotal?: number
boleto?: {
urlBoleto?: string
codigoDeBarras?: string
}
cartaoCredito?: {
numeroCartao?: string
nomeTitular?: string
dataValidade?: string
codigoSeguranca?: string
documentoCartaoCredito?: string
token?: string
info?: string
bandeira?: string
}[]
pagamentoStatus?: {
numeroAutorizacao?: string
numeroComprovanteVenda?: string
dataAtualizacao?: string
dataUltimoStatus?: string
adquirente?: string
tid?: string
}[]
informacoesAdicionais?: {
chave?: string
valor?: string
}[]
}[]
observacao?: {
observacao?: string
usuario?: string
data?: string
publica?: boolean
}[]
valorCreditoFidelidade?: number
valido?: boolean
valorSubTotalSemDescontos?: number
pedidoSplit?: number[]
}
}
/**
 * Lista de identificadores de conteúdos vinculados ao hotsite
 */
"GET /hotsites/:hotsiteId/conteudos": {
response: {
conteudoId?: number
}[]
}
/**
 * Vincula um ou mais conteúdos a um hotsite específico
 */
"POST /hotsites/:hotsiteId/conteudos": {
body: {
/**
 * Lista de identificadores de conteúdos a serem vinculados
 */
RAW_BODY: {
/**
 * Identificador do conteúdo
 */
conteudoId?: number
}[]
}
}
/**
 * Desvincula um ou mais conteúdos de um hotsite específico
 */
"DELETE /hotsites/:hotsiteId/conteudos": {
body: {
/**
 * Lista de identificadores de conteúdos a serem desvinculados
 */
conteudos?: {
/**
 * Identificador do conteúdo
 */
conteudoId?: number
}[]
}
}
/**
 * Atualiza um campo de cadastro personalizado pelo id
 */
"PUT /usuarios/camposcadastropersonalizado/:camposcadastropersonalizadoId": {
body: {
/**
 * Nome do campo (optional)
 */
nome?: string
/**
 * Se o campo será obrigatório (optional)
 */
obrigatorio?: boolean
/**
 * Ordem (optional)
 */
ordem?: number
}
}
/**
 * Remove um campo de cadastro personalizado
 */
"DELETE /usuarios/camposcadastropersonalizado/:camposcadastropersonalizadoId": {

}
/**
 * Dados do serviço de frete do pedido
 */
"GET /pedidos/:pedidoId/frete": {

}
/**
 * Tabela de preços específica
 */
"GET /tabelaPrecos/:tabelaPrecoId": {
response: {
tabelaPrecoId?: number
nome?: string
dataInicial?: string
dataFinal?: string
ativo?: boolean
isSite?: boolean
}
}
/**
 * Atualiza uma tabela de preços
 */
"PUT /tabelaPrecos/:tabelaPrecoId": {
body: {
/**
 * Nome da tabela de preço
 */
nome?: string
/**
 * Data que inicia a tabela de preço
 */
dataInicial?: string
/**
 * Data de término da tabela de preço
 */
dataFinal?: string
/**
 * Status da tabela de preço
 */
ativo?: boolean
}
}
/**
 * Exclui uma tabela de preços
 */
"DELETE /tabelaPrecos/:tabelaPrecoId": {

}
/**
 * Último status do pedido
 */
"GET /pedidos/:pedidoId/status": {
response: {
situacaoPedidoId?: number
dataAtualizacao?: string
notaFiscal?: string
cfop?: number
dataEnviado?: string
chaveAcessoNFE?: string
rastreamento?: string
urlRastreamento?: string
nomeTransportadora?: string
produtos?: {
produtoVarianteId?: number
situacaoProdutoId?: number
quantidade?: number
centroDistribuicaoId?: number
}[]
}
}
/**
 * Atualiza a situação do status do pedido
 */
"PUT /pedidos/:pedidoId/status": {
body: {
/**
 * Id da situação do pedido
 */
RAW_BODY: {
/**
 * Id da situação do pedido
 */
id?: number
}
}
}
/**
 * Lista de Tópicos
 */
"GET /webhook/Topicos": {
response: {
nome?: string
descricao?: string
payload?: string
}[]
}
/**
 * Seta o pedido como integrado
 */
"POST /pedidos/complete": {
body: {
/**
 * Pedido que se deseja inserir o "complete"
 */
RAW_BODY: {
/**
 * Id do pedido
 */
pedidoId?: number
}
}
}
/**
 * Portfolio encontrado
 */
"GET /portfolios/:portfolioId": {
response: {
portfolioId?: number
nome?: string
ativo?: boolean
}
}
/**
 * Atualiza um portfolio
 */
"PUT /portfolios/:portfolioId": {
body: {
/**
 * Nome do portfolio
 */
nome?: string
}
}
/**
 * Deleta um portfolio
 */
"DELETE /portfolios/:portfolioId": {

}
/**
 * Retorna se o produto variante está disponível ou não
 */
"GET /produtos/:identificador/disponibilidade": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
}
/**
 * Lista de formas de pagamento
 */
"GET /formasPagamento": {
response: {
formaPagamentoId?: number
nome?: string
nomeExibicao?: string
descricao?: string
}[]
}
/**
 * Lista de pedidos
 */
"GET /pedidos/:pedidoId/rastreamento/produtos": {
response: {
produtoVarianteId?: number
rastreamentos?: {
pedidoRastreamentoProdutoId?: number
quantidade?: number
dataAtualizacao?: string
notaFiscal?: string
cfop?: number
dataEnviado?: string
chaveAcessoNFE?: string
rastreamento?: string
urlRastreamento?: string
transportadora?: string
centroDistribuicaoId?: number
dataEntrega?: string
}[]
}[]
}
/**
 * Altera o status de um portfolio
 */
"PUT /portfolios/:portfolioId/status": {
body: {
/**
 * Status do portfolio: true ou false
 */
RAW_BODY?: {
/**
 * Novo status do portfolio
 */
ativo?: boolean
}
}
}
/**
 * Limite de crédito que estão vinculados aos usuários
 */
"GET /usuarios/limiteCredito": {
response: {
usuarioId?: number
valor?: number
saldo?: number
}[]
}
/**
 * Exclui uma imagem de um produto
 */
"DELETE /produtos/:identificador/imagens/:id": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
}
/**
 * Extrato retornado com sucesso
 */
"GET /contascorrentes/:email/extrato": {
searchParams: {
/**
 * Data Inicial para verificar extrato
 */
dataInicial?: string
/**
 * Data Final para verificar extrato
 */
dataFinal?: string
}
response: {
data?: string
historico?: string
valor?: number
tipoLancamento?: string
observacao?: string
visivelParaCliente?: boolean
}[]
}
/**
 * Lista de observações de um pedido
 */
"GET /pedidos/:pedidoId/observacao": {
response: {
observacao?: string
usuario?: string
publica?: boolean
data?: string
}[]
}
/**
 * Insere uma observação a um pedido
 */
"POST /pedidos/:pedidoId/observacao": {
body: {
/**
 * Objeto com os dados da observação (optional)
 */
RAW_BODY: {
/**
 * Texto da observação
 */
observacao?: string
/**
 * Nome do usuário que está inserindo a observação
 */
usuario?: string
/**
 * Se a observação é publica ou privada
 */
publica?: boolean
}
}
}
/**
 * Lista de centros de distribuição
 */
"GET /centrosdistribuicao": {
response: {
id?: number
nome?: string
cep?: number
padrao?: boolean
}[]
}
/**
 * Lista de avaliações de produtos
 */
"GET /produtoavaliacao": {
searchParams: {
/**
 * Referente ao status que libera a visualização da avaliação no site
 */
status?: ("Pendente" | "NaoAprovado" | "Aprovado")
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadeRegistros?: number
}
response: {
produtoVarianteId?: number
sku?: string
produtoAvaliacaoId?: number
comentario?: string
avaliacao?: number
usuarioId?: number
dataAvaliacao?: string
nome?: string
email?: string
status?: string
}[]
}
/**
 * Conteúdo encontrado
 */
"GET /conteudos/:conteudoId": {

}
/**
 * Atualiza um conteúdo
 */
"PUT /conteudos/:conteudoId": {
body: {
/**
 * Titulo do conteúdo
 */
titulo?: string
/**
 * Conteúdo ativo/inativo
 */
ativo?: boolean
/**
 * Data de inicio de exibição do conteúdo (optional)
 */
dataInicio?: string
/**
 * Data de final de exibição do conteúdo (optional)
 */
dataFim?: string
/**
 * Posicionamento do conteúdo
 */
posicionamento?: ("Topo" | "Centro" | "Rodape" | "LateralDireita" | "LateralEsquerda" | "MobileTopo" | "MobileRodape")
/**
 * Informações do conteúdo
 */
conteudo?: string
/**
 * Insira em qual Termo de Busca o Conteúdo será exibido (optional)
 */
termoBusca?: string
/**
 * Exibição do conteúdo nas buscas
 */
exibeTodasBuscas?: boolean
/**
 * Não exibição do conteúdo nas buscas
 */
naoExibeBuscas?: boolean
/**
 * Exibição do conteúdo nos hotsites
 */
exibeTodosHotsites?: boolean
/**
 * Insira quais Hotsites que o Conteúdo será exibido (optional)
 */
hotsiteId?: number[]
}
}
/**
 * Atualiza o status do tipo de evento, ativando-o ou inativando-o
 */
"PUT /tiposEvento/:tipoEventoId/AlterarStatus": {

}
/**
 * Lista de produtos variantes vinculados aos tipo de evento
 */
"GET /tiposEvento/:tipoEventoId/produtos": {
response: {
tipoEventoId?: number
produtoVariantePrincipalId?: number
}[]
}
/**
 * Lista de resposta para cada produto vinculado
 */
"POST /tiposEvento/:tipoEventoId/produtos": {
body: {
/**
 * Identificadores dos produtos variantes a serem vinculados ao tipo evento desejado
 */
produtos?: {
/**
 * Identificador do produto variante
 */
produtoVarianteId?: number
}[]
}
response: {
sugestaoProdutosInseridos?: {
tipoEventoId?: number
produtoVarianteId?: number
detalhes?: string
}[]
produtosNaoInseridos?: {
tipoEventoId?: number
produtoVarianteId?: number
detalhes?: string
}[]
}
}
/**
 * Atualiza os produtos sugeridos de um tipo de evento
 */
"PUT /tiposEvento/:tipoEventoId/produtos": {
body: {
/**
 * Identificadores dos produtos variantes a serem vinculados ao tipo evento desejado
 */
produtos?: {
/**
 * Identificador do produto variante
 */
produtoVarianteId?: number
}[]
}
}
/**
 * Atualiza a ativação automática de produtos de um Seller
 */
"PUT /resellers/:resellerId/ativacaoAutomaticaProdutos": {
body: {
/**
 * Status da ativação automática de produtos
 */
ativo?: boolean
}
}
/**
 * Gráfico Forma de Pagamento
 */
"GET /dashboard/graficoformapagamento": {
searchParams: {
/**
 * Data inicial dos pedidos com as formas de pagamento que deverão retonar (aaaa-mm-dd)
 */
dataInicial?: string
/**
 * Data final dos pedidos com as formas de pagamento que deverão retonar (aaaa-mm-dd)
 */
dataFinal?: string
/**
 * Id do parceiro
 */
parceiroId?: number
}
response: {
nome?: string
quantidade?: number
cor?: string
}[]
}
/**
 * Lista de números de pedidos ainda não integrados
 */
"GET /pedidos/naoIntegrados": {
response: {
pedidoId?: number
}[]
}
/**
 * Dados da lista de desejos de um usuário
 */
"GET /usuarios/:usuarioId/listaDesejos": {
response: {
produtoId?: number
produtoVarianteId?: number
quantidade?: number
dataAdicao?: string
}[]
}
/**
 * Usuários encontrados
 */
"GET /parceiros/:nome/usuarios": {
response: {
usuarioId?: number
email?: string
ativo?: boolean
dataInicial?: string
dataFinal?: string
vinculoVitalicio?: boolean
}[]
}
/**
 * Indicador dos Novos Compradores
 */
"GET /dashboard/novoscompradores": {
searchParams: {
/**
 * Data inicial dos novos compradores que deverão retonar (aaaa-mm-dd)
 */
dataInicial?: string
/**
 * Data final dos novos compradores que deverão retonar (aaaa-mm-dd)
 */
dataFinal?: string
}
response: {
indicadorComprador?: string
}
}
/**
 * Lista de produtos variantes vinculados aos tipo de evento
 */
"GET /eventos": {
searchParams: {
/**
 * Data de inicio do evento
 */
dataInicial?: string
/**
 * Data do termino do evento
 */
dataFinal?: string
/**
 * Status do evento
 */
disponivel?: boolean
/**
 * Titulo do evento
 */
titulo?: string
/**
 * Email do Usuário
 */
usuarioEmail?: string
/**
 * Identificador do Tipo de Evento
 */
tipoEventoId?: number
}
response: {
eventoId?: number
tipoEventoId?: number
userId?: number
enderecoEntregaId?: number
data?: string
dataCriacao?: string
titulo?: string
url?: string
disponivel?: boolean
diasDepoisEvento?: number
diasAntesEvento?: number
urlLogoEvento?: string
urlCapaEvento?: string
proprietarioEvento?: string
abaInfo01Habilitado?: boolean
textoInfo01?: string
conteudoInfo01?: string
abaInfo02Habilitado?: boolean
textoInfo02?: string
conteudoInfo02?: string
abaMensagemHabilitado?: boolean
fotos?: string
enumTipoListaPresenteId?: string
enumTipoEntregaId?: string
eventoProdutoSelecionado?: {
eventoId?: number
produtoVarianteId?: number
recebidoForaLista?: boolean
removido?: boolean
}[]
enderecoEvento?: {
enderecoEventoId?: number
eventoId?: number
nome?: string
cep?: string
endereco?: string
numero?: string
bairro?: string
cidade?: string
estado?: string
}[]
}[]
}
/**
 * Cria um Novo Evento
 */
"POST /eventos": {
body: {
/**
 * Identificador do tipo de evento
 */
tipoEventoId?: number
/**
 * Identificador do endereço de entrega
 */
enderecoEntregaId?: number
/**
 * Titulo do evento
 */
titulo?: string
/**
 * URL do evento
 */
url?: string
/**
 * Data do Evento
 */
data?: string
/**
 * Email do usuário
 */
usuarioEmail?: string
/**
 * Disponibilidade do evento (optional)
 */
disponivel?: boolean
/**
 * Quantos dias antes do evento ele será exibido (optional)
 */
diasAntesEvento?: number
/**
 * Até quantos dias depois do evento ele será exibido (optional)
 */
diasDepoisEvento?: number
/**
 * Url do Logo. (Base64)
 */
urlLogo?: string
/**
 * Url da Capa. (Base64)
 */
urlCapa?: string
/**
 * Quem é o proprietário
 */
proprietario?: string
/**
 * Se a aba de informação 01 será habilitada
 */
abaInfo01Habilitado?: boolean
/**
 * Texto para o campo informação 01 (optional)
 */
textoInfo01?: string
/**
 * Conteúdo para o campo informação 01 (optional)
 */
conteudoInfo01?: string
/**
 * Se a aba de informação 02 será habilitada
 */
abaInfo02Habilitado?: boolean
/**
 * Texto para o campo informação 02 (optional)
 */
textoInfo02?: string
/**
 * Conteúdo para o campo informação 02 (optional)
 */
conteudoInfo02?: string
/**
 * Se a aba de mensagem será habilitada (optional)
 */
abaMensagemHabilitado?: boolean
/**
 * Tipo de lista de presente
 */
enumTipoListaPresenteId?: ("ListaPronta" | "ListaManual")
/**
 * Tipo de entrega
 */
enumTipoEntregaId?: ("EntregaAgendada" | "EntregaConformeCompraRealizada" | "Todos" | "Nenhum")
/**
 * Seleção de produto no evento
 */
eventoProdutoSelecionado?: {
/**
 * Id do produto variante
 */
produtoVarianteId?: number
/**
 * Se produto recebido fora da lista (optional)
 */
recebidoForaLista?: boolean
/**
 * Se produto removido (optional)
 */
removido?: boolean
}[]
/**
 * Endereço do Evento
 */
enderecoEvento?: {
/**
 * Nome para identificação do endereço
 */
nome?: string
/**
 * Endereço
 */
endereco?: string
/**
 * Cep do endereço
 */
cep?: string
/**
 * Numero do endereço
 */
numero?: string
/**
 * Bairro do endereço
 */
bairro?: string
/**
 * Cidade do endereço
 */
cidade?: string
/**
 * Estado do endereço
 */
estado?: string
}[]
}
}
/**
 * Retorna todas as informações de um produto específico
 */
"GET /produtos/:identificador/informacoes": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId" | "ProdutoId")
}
response: {
informacaoId?: number
titulo?: string
texto?: string
tipoInformacao?: string
}[]
}
/**
 * Adiciona uma nova informação
 */
"POST /produtos/:identificador/informacoes": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
/**
 * Define o tipo de retorno a ser recebido. Id retorna o InformacaoProdutoId da informação inserida, Booleano retorna true ou false, de acordo com o resultado da operação. Valor padrão Booleano
 */
tipoRetorno?: ("Id" | "Booleano")
}
body: {
/**
 * Titulo da informação (optional)
 */
titulo?: string
/**
 * Texto da informação (optional)
 */
texto?: string
/**
 * Informação se o produto variante está visível no site.
 */
exibirSite?: boolean
/**
 * Tipo de informação do produto (optional)
 */
tipoInformacao?: ("Informacoes" | "Beneficios" | "Especificacoes" | "DadosTecnicos" | "Composicao" | "ModoDeUsar" | "Cuidados" | "ItensInclusos" | "Dicas" | "Video" | "Descricao" | "ValorReferente" | "PopUpReferente" | "Prescricao" | "TabelaDeMedidas" | "Spot" | "Sinopse" | "Carrinho")
}
}
/**
 * Indicador do Carrinho Abandonado
 */
"GET /dashboard/carrinhoabandonado": {
searchParams: {
/**
 * Data inicial dos carrinhos abandonados que deverão retonar (aaaa-mm-dd)
 */
dataInicial?: string
/**
 * Data final dos carrinhos abandonados que deverão retonar (aaaa-mm-dd)
 */
dataFinal?: string
}
response: {
indicadorCarrinhoAbandonado?: string
}
}
/**
 * Lista de Metatags do produto informado
 */
"GET /produtos/:identificador/seo/metaTag": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno
 */
tipoIdentificador?: ("Sku" | "ProdutoId" | "ProdutoVarianteId")
}
response: {
metatagId?: number
content?: string
httpEquiv?: string
name?: string
scheme?: string
}[]
}
/**
 * Insere um ou mais metatags para um produto
 */
"POST /produtos/:identificador/seo/metaTag": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno da fstore
 */
tipoIdentificador?: ("Sku" | "ProdutoId" | "ProdutoVarianteId")
}
body: {
/**
 * Lista de metatags (optional)
 */
metas?: {
/**
 * Dados da Meta Tag
 */
content?: string
/**
 * Dados da Meta Tag
 */
httpEquiv?: string
/**
 * Dados da Meta Tag
 */
name?: string
/**
 * Dados da Meta Tag
 */
scheme?: string
}[]
}
response: {
metatagId?: number
content?: string
httpEquiv?: string
name?: string
scheme?: string
}[]
}
/**
 * Deleta um ou mais Metatags de produto
 */
"DELETE /produtos/:identificador/seo/metaTag": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno
 */
tipoIdentificador?: ("Sku" | "ProdutoId" | "ProdutoVarianteId")
}
body: {
/**
 * Lista de identificadores de metatags (optional)
 */
metatags?: {
/**
 * Identificador do MetaTag
 */
metatagId?: number
}[]
}
}
/**
 * Frete encontrado
 */
"GET /fretes/:freteId": {
response: {
freteId?: number
nome?: string
ativo?: boolean
volumeMaximo?: number
pesoCubado?: number
entregaAgendadaConfiguracaoId?: number
linkRastreamento?: string
ehAssinatura?: boolean
larguraMaxima?: number
alturaMaxima?: number
comprimentoMaximo?: number
limiteMaximoDimensoes?: number
limitePesoCubado?: number
tempoMinimoDespacho?: number
centroDistribuicaoId?: number
valorMinimoProdutos?: number
}
}
/**
 * Frete atualizado com sucesso
 */
"PUT /fretes/:freteId": {
body: {
/**
 * Nome do contrato de frete (optional)
 */
nome?: string
/**
 * Status do contrato de frete (optional)
 */
ativo?: boolean
/**
 * Volume máximo permitido, em metro cúbico (m³). (optional)
 */
volumeMaximo?: number
/**
 * Informe o peso cubado. Altura x largura x profundidade x fator de cubagem. (optional)
 */
pesoCubado?: number
/**
 * Id da configuração entrega agendada (optional)
 */
entregaAgendadaConfiguracaoId?: number
/**
 * URL rastreamento (optional)
 */
linkRastreamento?: string
/**
 * Contrato é exclusivo assinatura (optional)
 */
ehAssinatura?: boolean
/**
 * Informe a largura máxima, em centímetros (cm). (optional)
 */
larguraMaxima?: number
/**
 * Informe a altura máxima, em centímetros (cm). (optional)
 */
alturaMaxima?: number
/**
 * Informe o comprimento máximo, em centímetros (cm). (optional)
 */
comprimentoMaximo?: number
/**
 * Informe a soma das três dimensões (Largura + Altura + Comprimento), em centímetros (cm). (optional)
 */
limiteMaximoDimensoes?: number
/**
 * Informe o limite de peso cubado, em gramas (g). (optional)
 */
limitePesoCubado?: number
/**
 * Informe quantos dias no mínimo esse contrato de frete leva para ser enviado ao cliente (optional)
 */
tempoMinimoDespacho?: number
/**
 * Informe o Id do centro de distribuição (optional)
 */
centroDistribuicaoId?: number
/**
 * Informe o valor mínimo em produtos necessário para disponibilidade da tabela de frete (optional)
 */
valorMinimoProdutos?: number
}
}
/**
 * Relatório de transações de um determinado período
 */
"GET /dashboard/transacoes": {
searchParams: {
/**
 * Data inicial dos pedidos que deverão retornar (aaaa-mm-dd)
 */
dataInicial?: string
/**
 * Data final dos pedidos que deverão retornar (aaaa-mm-dd)
 */
dataFinal?: string
/**
 * Tipo de agrupamento dos pedidos (hora, dia, semana, mês, ano)
 */
tipoAgrupamento?: ("Hora" | "Dia" | "Semana" | "Mes" | "Ano")
}
response: {
tipoAgrupamento?: string
dados?: {
data?: string
pedidosCaptados?: number
pedidosPagos?: number
pedidosEnviados?: number
pedidosCancelados?: number
}[]
}
}
/**
 * Lista de produtos de uma tabela de preços
 */
"GET /tabelaPrecos/:tabelaPrecoId/produtos": {
searchParams: {
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadeRegistros?: number
}
response: {
tabelaPrecoProdutoVarianteId?: number
tabelaPrecoId?: number
sku?: string
produtoVarianteId?: number
precoDe?: number
precoPor?: number
}[]
}
/**
 * Inseri uma lista de produto variantes em uma tabela de preços
 */
"POST /tabelaPrecos/:tabelaPrecoId/produtos": {
body: {
/**
 * Lista de produtos variantes
 */
RAW_BODY: {
/**
 * SKU do produto
 */
sku?: string
/**
 * Preço De do produto
 */
precoDe?: number
/**
 * Preço Por do produto
 */
precoPor?: number
}[]
}
response: {
sucesso?: {
sku?: string
resultado?: boolean
detalhes?: string
}[]
erro?: {
sku?: string
resultado?: boolean
detalhes?: string
}[]
}
}
/**
 * Lista com o retorno do processamento dos produtos enviados
 */
"PUT /tabelaPrecos/:tabelaPrecoId/produtos": {
body: {
/**
 * Lista de produtos variantes
 */
RAW_BODY: {
/**
 * SKU do produto
 */
sku?: string
/**
 * Preço De do produto
 */
precoDe?: number
/**
 * Preço Por do produto
 */
precoPor?: number
}[]
}
response: {
sucesso?: {
sku?: string
resultado?: boolean
detalhes?: string
}[]
erro?: {
sku?: string
resultado?: boolean
detalhes?: string
}[]
}
}
/**
 * Lista de scripts
 */
"GET /gestorscripts/scripts": {
response: {
scriptId?: number
nome?: string
posicao?: string
tipoPagina?: string
dataInicial?: string
datafinal?: string
ativo?: boolean
prioridade?: number
}[]
}
/**
 * Insere um novo script
 */
"POST /gestorscripts/scripts": {
body: {
/**
 * Nome do script
 */
nome?: string
/**
 * Data inicial do script
 */
dataInicial?: string
/**
 * Data final do script
 */
dataFinal?: string
/**
 * Informe se o script está ativo ou não
 */
ativo?: boolean
/**
 * Prioridade do script
 */
prioridade?: number
/**
 * Posição do script
 */
posicao?: ("HeaderPrimeiraLinha" | "HeaderUltimaLinha" | "BodyPrimeiraLinha" | "BodyUltimaLinha" | "FooterPrimeiraLinha" | "FooterUltimeLinha")
/**
 * Tipo da página do script
 */
tipoPagina?: ("Todas" | "Home" | "Busca" | "Categoria" | "Fabricante" | "Estaticas" | "Produto" | "Carrinho")
/**
 * Identificador da página
 */
identificadorPagina?: string
/**
 * Conteúdo do script
 */
conteudo?: string
/**
 * Status do script
 */
publicado?: boolean
}
}
/**
 * Assinaturas com erro na loja
 */
"GET /assinaturas/erros": {
searchParams: {
/**
 * Data inicial para buscas por periodo de tempo (aaaa-mm-dd hh:mm:ss)
 */
dataInicial?: string
/**
 * Data final para buscas por periodo de tempo (aaaa-mm-dd hh:mm:ss)
 */
dataFinal?: string
/**
 * Erros já resolvidos ou não
 */
resolvidos?: boolean
}
}
/**
 * Método que realiza uma cotação de frete
 */
"POST /fretes/cotacoes": {
searchParams: {
/**
 * Cep de entrega
 */
cep?: string
/**
 * Define se o identificador informado é um sku ou um id interno da fstore
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
/**
 * Define se deve retornar as opções de retirada em loja ("False" por padrão) (optional)
 */
retiradaLoja?: boolean
}
body: {
/**
 * Valor total do pedido (optional)
 */
valorTotal?: number
/**
 * Lista de produtos da cotação
 */
produtos?: {
/**
 * Id do produto variante
 */
identificador?: string
/**
 * Quantidade do produto
 */
quantidade?: number
}[]
}
response: {
id?: string
nome?: string
prazo?: number
tabelaFreteId?: string
tipo?: string
valor?: number
produtos?: {
produtoVarianteId?: number
valor?: number
}[]
}[]
}
/**
 * Lista de Ranges de Ceps de uma Loja Física
 */
"GET /lojasFisicas/:lojaFisicaId/rangeCep": {
response: {
rangeCepId?: number
nome?: string
cepInicial?: string
cepFinal?: string
}[]
}
/**
 * Insere um range de cep em uma Loja Física
 */
"POST /lojasFisicas/:lojaFisicaId/rangeCep": {
body: {
/**
 * Nome do range de cep
 */
nome?: string
/**
 * Cep inicial do range. Formato: 00.000-000
 */
cepInicial?: string
/**
 * Cep final do range. Formato: 00.000-000
 */
cepFinal?: string
}
}
/**
 * Remove uma lista de range de cep de uma Loja Física
 */
"DELETE /lojasFisicas/:lojaFisicaId/rangeCep": {
body: {
/**
 * Lista de range de cep a serem excluídos da loja física
 */
RAW_BODY: {
/**
 * Id da faixa de cep a ser deletado
 */
rangeCepId?: number
}[]
}
}
/**
 * Retorna usuário encontrado
 */
"GET /usuarios/:usuarioId/enderecos": {
response: {
enderecoId?: number
nomeEndereco?: string
rua?: string
numero?: string
complemento?: string
referencia?: string
bairro?: string
cidade?: string
estado?: string
cep?: string
utilizadoUltimoPedido?: boolean
pais?: string
}[]
}
/**
 * Insere um endereço para um usuário pelo id do usuário
 */
"POST /usuarios/:usuarioId/enderecos": {
body: {
/**
 * Nome de identificação do endereço a ser cadastrado (Max Length: 100)
 */
nomeEndereco?: string
/**
 * Nome da rua (Max Length: 500)
 */
rua?: string
/**
 * Número do local (Max Length: 50)
 */
numero?: string
/**
 * Complemento (Max Length: 250) (optional)
 */
complemento?: string
/**
 * Referência para a localização do endereço (Max Length: 500) (optional)
 */
referencia?: string
/**
 * Bairro do endereço (Max Length: 100)
 */
bairro?: string
/**
 * Cidade em que se localiza o endereço (Max Length: 100)
 */
cidade?: string
/**
 * O estado (Max Length: 100)
 */
estado?: string
/**
 * Código do cep (Max Length: 50)
 */
cep?: string
}
}
/**
 * Retorna uma lista de vínculos entre usuário e parceiro
 */
"GET /usuarios/:email/parceiros": {

}
/**
 * Atualiza o preço de vários produtos com base na lista enviada. Limite de 50 produtos por requisição
 */
"PUT /produtos/precos": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
body: {
/**
 * Lista com os dados da atualização do preço (optional)
 */
RAW_BODY: {
/**
 * Identificador do produto (ProdutoVarianteId ou SKU)
 */
identificador?: string
/**
 * Preço de custo do produto variante
 */
precoCusto?: number
/**
 * "PrecoDe" do produto variante
 */
precoDe?: number
/**
 * "PrecoPor" do produto variante
 */
precoPor?: number
/**
 * Fator multiplicador que gera o preço de exibição do produto. Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa no "PrecoPor". (1 por padrão)
 */
fatorMultiplicadorPreco?: number
}[]
}
response: {
produtosNaoAtualizados?: {
produtoVarianteId?: number
sku?: string
resultado?: boolean
detalhes?: string
}[]
produtosAtualizados?: {
produtoVarianteId?: number
sku?: string
resultado?: boolean
detalhes?: string
}[]
}
}
/**
 * Usuário encontrado
 */
"GET /usuarios/email/:email": {
response: {
usuarioId?: number
bloqueado?: boolean
grupoInformacaoCadastral?: {
chave?: string
valor?: string
}[]
tipoPessoa?: string
origemContato?: string
tipoSexo?: string
nome?: string
cpf?: string
email?: string
rg?: string
telefoneResidencial?: string
telefoneCelular?: string
telefoneComercial?: string
dataNascimento?: string
razaoSocial?: string
cnpj?: string
inscricaoEstadual?: string
responsavel?: string
dataCriacao?: string
dataAtualizacao?: string
revendedor?: boolean
listaInformacaoCadastral?: {
chave?: string
valor?: string
}[]
avatar?: string
ip?: string
aprovado?: boolean
}
}
/**
 * Novo token gerado com sucesso
 */
"POST /autenticacao/trocarLoja/:novaLoja": {
response: {
lojas?: string[]
accessToken?: string
dataExpiracaoAccessTokenUTC?: string
}
}
/**
 * Campos de cadastro personalizado encontrados
 */
"GET /usuarios/camposcadastropersonalizado": {
response: {
grupoInformacaoCadastralId?: number
nome?: string
tipo?: string
obrigatorio?: boolean
ordem?: number
valorPreDefinido?: {
valoresDefinidosCampoGrupoInformacaoId?: number
valor?: string
ordem?: number
}[]
}[]
}
/**
 * Objeto do hotsite
 */
"GET /hotsites/:hotsiteId": {
response: {
hotsiteId?: number
nome?: string
ativo?: boolean
template?: string
dataCriacao?: string
dataInicio?: string
dataFinal?: string
url?: string
tamanhoPagina?: number
templateId?: number
ordenacao?: string
listaProdutos?: {
expressao?: string
produtos?: {
produtoId?: number
ordem?: number
}[]
}
seo?: {
seoHotsiteId?: number
hotsiteId?: number
titulo?: string
metas?: {
conteudo?: string
nome?: string
httpEquiv?: string
scheme?: string
}[]
}
banners?: {
bannerId?: number
}[]
conteudos?: {
conteudoId?: number
}[]
}
}
/**
 * Atualiza os dados de um hotsite existente
 */
"PUT /hotsites/:hotsiteId": {
body: {
/**
 * Nome do hotsite
 */
nome?: string
/**
 * Data/hora em que o hotsite começará a ser exibido (optional)
 */
dataInicio?: string
/**
 * Data/Hora (último dia) em que o hotsite não será mais exibido (optional)
 */
dataFinal?: string
/**
 * Informe a url do hotsite. Por exemplo, se o site for 'busca.meusite.com.br', e o hotsite desejado for 'busca.meusite.com.br/hotsite/natal' informe neste campo somente a url 'hotsite/natal', sem a barra '/' no início
 */
url?: string
/**
 * Informe o número de produtos que deve ser exibido por página
 */
tamanhoPagina?: number
/**
 * Informe o identificador do template que será utilizado. Caso não saiba o identificador do template desejado, o mesmo pode ser buscado no endpoint GET/Templates
 */
templateId?: number
/**
 * Informe qual será a ordenação dos Produtos no Hotsite (optional)
 */
ordenacao?: ("Nenhuma" | "NomeCrescente" | "NomeDecrescente" | "Lancamento" | "MenorPreco" | "MaiorPreco" | "MaisVendidos" | "MaioresDescontos" | "Aleatorio" | "MenorEstoque" | "MaiorEstoque")
/**
 * Produtos que devem aparecer no hotsite
 */
listaProdutos?: {
/**
 * você pode utilizar essa opção para gerar um hotsite utilizando uma expressão de busca. Ao utilizá-la, os produtos adicionados nos outros modos de criação de hotsite serão ignorados (optional)
 */
expressao?: string
/**
 * Id dos produtos
 */
produtos?: {
/**
 * Identificador do produto a ser mostrado no hotsite
 */
produtoId?: number
/**
 * Ordem para apresentação do produto (optional)
 */
ordem?: number
}[]
}
/**
 * Dados de seo
 */
seo?: {
/**
 * Informe o Título que será exibido quando o Hotsite for acessado (optional)
 */
titulo?: string
/**
 * Não se esqueça! Além do texto livre, você pode utilizar as tags [Nome.Hotsite] e [Fbits.NomeLoja] para o cadastro das MetaTags e Title! (optional)
 */
metas?: {
/**
 * Informe os dados da Metatag
 */
conteudo?: string
/**
 * Informe os dados da Metatag
 */
nome?: string
/**
 * Informe os dados da Metatag
 */
httpEquiv?: string
/**
 * Informe os dados da Metatag
 */
scheme?: string
}[]
}
/**
 * Lista de identificadores de banners a serem vinculados ao hotsite
 */
banners?: {
/**
 * Identificador do banner (optional)
 */
bannerId?: number
}[]
/**
 * Lista de identificadores de conteúdos a serem vinculados ao hotsite
 */
conteudos?: {
/**
 * Identificador do conteúdo
 */
conteudoId?: number
}[]
/**
 * Status do hotsite (optional)
 */
ativo?: boolean
}
}
/**
 * Deleta um hotsite que foi inserido manualmente, hotsites gerados automaticamente não podem ser deletados
 */
"DELETE /hotsites/:hotsiteId": {

}
/**
 * Lista com assinaturas
 */
"GET /assinaturas": {
searchParams: {
/**
 * Situação da assinatura
 */
situacaoAssinatura?: ("Ativa" | "Pausada" | "Cancelada")
/**
 * Período de recorrência
 */
periodoRecorrencia?: string
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadeRegistros?: number
/**
 * Data inicial da próxima recorrência
 */
dataInicialProximaRecorrencia?: string
/**
 * Data final da próxima recorrencia
 */
dataFinalProximaRecorrencia?: string
/**
 * Data inicial de cancelamento
 */
dataInicialCancelamento?: string
/**
 * Data final de cancelamento
 */
dataFinalCancelamento?: string
}
response: {
assinaturaId?: number
usuarioId?: number
dataProximoPedido?: string
periodoRecorrencia?: string
situacaoAssinatura?: string
dataAssinatura?: string
grupoAssinatura?: string
enderecoId?: number
usuarioCartaoCreditoId?: number
cupom?: string
}[]
}
/**
 * Lista de categorias
 */
"GET /categorias": {
searchParams: {
/**
 * Hierarquia da categoria
 */
hierarquia?: boolean
/**
 * Se será apresentado apenas Reseller
 */
apenasReseller?: boolean
/**
 * Se será apresentado apenas o último nível das categorias
 */
apenasUltimoNivel?: boolean
/**
 * Se será apresentado somente categorias filhas
 */
somenteFilhos?: boolean
}
response: {
id?: number
nome?: string
categoriaPaiId?: number
categoriaERPId?: string
ativo?: boolean
isReseller?: boolean
exibirMatrizAtributos?: string
quantidadeMaximaCompraUnidade?: number
valorMinimoCompra?: number
exibeMenu?: boolean
urlHotSite?: string
}[]
}
/**
 * Insere uma nova categoria
 */
"POST /categorias": {
body: {
/**
 * Nome da categoria (optional)
 */
nome?: string
/**
 * Id da categoria pai (optional)
 */
categoriaPaiId?: number
/**
 * Id da categoria ERP (optional)
 */
categoriaERPId?: string
/**
 * Categoria ativo/inativo (optional)
 */
ativo?: boolean
/**
 * Categoria de reseller (optional)
 */
isReseller?: boolean
/**
 * Exibir Matriz de Atributos (optional)
 */
exibirMatrizAtributos?: ("Sim" | "Nao" | "Neutro")
/**
 * Informe a quantidade máxima permitida para compra por produtos desta categoria. Informe zero para assumir a configuração geral da loja (optional)
 */
quantidadeMaximaCompraUnidade?: number
/**
 * Informe o valor mínimo para compra em produtos desta categoria (optional)
 */
valorMinimoCompra?: number
/**
 * Informe se será exibida no menu (optional)
 */
exibeMenu?: boolean
}
}
/**
 * Lista de fabricantes
 */
"GET /fabricantes": {
response: {
fabricanteId?: number
ativo?: boolean
nome?: string
urlLogoTipo?: string
urlLink?: string
urlCarrossel?: string
}[]
}
/**
 * Insere um novo fabricante
 */
"POST /fabricantes": {
body: {
/**
 * Nome do fabricante (optional)
 */
nome?: string
/**
 * URL tipo logo (optional)
 */
urlLogoTipo?: string
/**
 * Insira neste campo uma URL para redirecionamento. A URL deve ser inserida por completa (optional)
 */
urlLink?: string
/**
 * Insira nesse campo a URL do Carrossel  da Marca (optional)
 */
urlCarrossel?: string
}
}
/**
 * Atualiza o campo Recebido de um produto vinculado a um evento
 */
"PUT /eventos/:eventoId/produtos/recebido": {
body: {
/**
 * Id do produto variante (optional)
 */
produtoVarianteId?: number
/**
 * Se o produto foi recebido fora da lista (optional)
 */
recebidoForaLista?: boolean
}
}
/**
 * Tipo evento buscado
 */
"GET /tiposEvento/:tipoEventoId": {
response: {
tipoEventoId?: number
nome?: string
tipoEntrega?: string
tipoDisponibilizacao?: string
permitirRemocaoAutomaticaProdutos?: boolean
corHexTituloInformacoes?: string
corHexCorpoInformacoes?: string
numeroAbasInformacoes?: number
quantidadeDiasParaEventoExpirar?: number
numeroLocaisEvento?: number
ativo?: boolean
disponivel?: boolean
tipoBeneficiarioFrete?: string
caminhoLogoEvento?: string
caminhoSubTemplate?: string
sugestaoProdutos?: {
tipoEventoId?: number
produtoVarianteId?: number
}[]
}
}
/**
 * Atualiza o tipo evento
 */
"PUT /tiposEvento/:tipoEventoId": {
body: {
/**
 * Nome do Tipo de Evento
 */
nome?: string
/**
 * Tipo de entrega
 */
tipoEntrega?: ("EntregaAgendada" | "EntregaConformeCompraRealizada" | "Todos" | "Nenhum")
/**
 * Disponibilização do Tipo de Evento
 */
tipoDisponibilizacao?: ("DisponibilizacaoDeCreditos" | "DisponibilizacaoDeProdutos" | "Todos")
/**
 * Permissão para remoção automática de produtos
 */
permitirRemocaoAutomaticaProdutos?: boolean
/**
 * Cor em hexadecimal para o titulo de informações
 */
corHexTituloInformacoes?: string
/**
 * Cor em hexadecimal para o corpo de informações
 */
corHexCorpoInformacoes?: string
/**
 * Número de abas de informações, podendo ser de 1 a 2
 */
numeroAbasInformacoes?: number
/**
 * Quantidade de dias para que o evento expire
 */
quantidadeDiasParaEventoExpirar?: number
/**
 * Quantidade de locais do evento
 */
numeroLocaisEvento?: number
/**
 * Informa se o evento está ativo ou inativo
 */
ativo?: boolean
/**
 * Informa a disponibilidade do evento
 */
disponivel?: boolean
/**
 * O beneficiário do frete
 */
tipoBeneficiarioFrete?: ("DonodaLista" | "Convidado")
/**
 * Imagem da logo do evento em base64
 */
imagemLogoEvento?: string
/**
 * Produtos Sugeridos para este evento (optional)
 */
sugestaoProdutos?: {
/**
 * Id do tipo de evento
 */
tipoEventoId?: number
/**
 * Identificador do produto variante
 */
produtoVarianteId?: number
}[]
}
}
/**
 * Produtos de uma assinatura
 */
"GET /assinaturas/:email": {
response: {
assinaturaId?: number
usuarioId?: number
dataProximoPedido?: string
periodoRecorrencia?: string
situacaoAssinatura?: string
dataAssinatura?: string
grupoAssinatura?: string
enderecoId?: number
usuarioCartaoCreditoId?: number
cupom?: string
produtos?: {
assinaturaProdutoId?: number
assinaturaId?: number
produtoId?: number
produtoVarianteId?: number
quantidade?: number
valor?: number
removido?: boolean
}[]
}[]
}
/**
 * Lista de produtos variantes vinculados aos tipo de evento
 */
"GET /eventos/:eventoId": {
response: {
eventoId?: number
tipoEventoId?: number
userId?: number
enderecoEntregaId?: number
data?: string
dataCriacao?: string
titulo?: string
url?: string
disponivel?: boolean
diasDepoisEvento?: number
diasAntesEvento?: number
urlLogoEvento?: string
urlCapaEvento?: string
proprietarioEvento?: string
abaInfo01Habilitado?: boolean
textoInfo01?: string
conteudoInfo01?: string
abaInfo02Habilitado?: boolean
textoInfo02?: string
conteudoInfo02?: string
abaMensagemHabilitado?: boolean
fotos?: string
enumTipoListaPresenteId?: string
enumTipoEntregaId?: string
eventoProdutoSelecionado?: {
eventoId?: number
produtoVarianteId?: number
recebidoForaLista?: boolean
removido?: boolean
}[]
enderecoEvento?: {
enderecoEventoId?: number
eventoId?: number
nome?: string
cep?: string
endereco?: string
numero?: string
bairro?: string
cidade?: string
estado?: string
}[]
}[]
}
/**
 * Atualiza um evento
 */
"PUT /eventos/:eventoId": {
body: {
/**
 * Identificador do tipo de evento
 */
tipoEventoId?: number
/**
 * Identificador do endereço de entrega
 */
enderecoEntregaId?: number
/**
 * Titulo do evento
 */
titulo?: string
/**
 * Atributo obsoleto - (optional)
 */
url?: string
/**
 * Data do Evento
 */
data?: string
/**
 * Email do usuário
 */
usuarioEmail?: string
/**
 * Disponibilidade do evento (optional)
 */
disponivel?: boolean
/**
 * Quantos dias antes do evento ele será exibido (optional)
 */
diasAntesEvento?: number
/**
 * Até quantos dias depois do evento ele será exibido (optional)
 */
diasDepoisEvento?: number
/**
 * Url do Logo. (Base64)
 */
urlLogo?: string
/**
 * Url da Capa. (Base64)
 */
urlCapa?: string
/**
 * Quem é o proprietário
 */
proprietario?: string
/**
 * Se a aba de informação 01 será habilitada
 */
abaInfo01Habilitado?: boolean
/**
 * Texto para o campo informação 01 (optional)
 */
textoInfo01?: string
/**
 * Conteúdo para o campo informação 01 (optional)
 */
conteudoInfo01?: string
/**
 * Se a aba de informação 02 será habilitada
 */
abaInfo02Habilitado?: boolean
/**
 * Texto para o campo informação 02 (optional)
 */
textoInfo02?: string
/**
 * Conteúdo para o campo informação 02 (optional)
 */
conteudoInfo02?: string
/**
 * Se a aba de mensagem será habilitada (optional)
 */
abaMensagemHabilitado?: boolean
/**
 * Tipo de lista de presente
 */
enumTipoListaPresenteId?: ("ListaPronta" | "ListaManual")
/**
 * Tipo de entrega
 */
enumTipoEntregaId?: ("EntregaAgendada" | "EntregaConformeCompraRealizada" | "Todos" | "Nenhum")
/**
 * Seleção de produto no evento
 */
eventoProdutoSelecionado?: {
/**
 * Id do produto variante
 */
produtoVarianteId?: number
/**
 * Se produto recebido fora da lista (optional)
 */
recebidoForaLista?: boolean
/**
 * Se produto removido (optional)
 */
removido?: boolean
}[]
/**
 * Endereço do Evento
 */
enderecoEvento?: {
/**
 * Nome para identificação do endereço
 */
nome?: string
/**
 * Endereço
 */
endereco?: string
/**
 * Cep do endereço
 */
cep?: string
/**
 * Numero do endereço
 */
numero?: string
/**
 * Bairro do endereço
 */
bairro?: string
/**
 * Cidade do endereço
 */
cidade?: string
/**
 * Estado do endereço
 */
estado?: string
}[]
}
}
/**
 * Lista de identificadores de banners vinculados ao hotsite
 */
"GET /hotsites/:hotsiteId/banners": {
response: {
bannerId?: number
}[]
}
/**
 * Vincula um ou mais banners a um hotsite específico
 */
"POST /hotsites/:hotsiteId/banners": {
body: {
/**
 * Lista de identificadores de banners para vincular ao hotsite
 */
banners?: {
/**
 * Identificador do banner (optional)
 */
bannerId?: number
}[]
}
}
/**
 * Desvincula um ou mais banners de um hotsite específico
 */
"DELETE /hotsites/:hotsiteId/banners": {
body: {
/**
 * Lista de identificadores de banners a serem desvinculados
 */
banners?: {
/**
 * Identificador do banner (optional)
 */
bannerId?: number
}[]
}
}
/**
 * Estorna um valor menor ou igual ao total do pedido "Pago"
 */
"POST /pedidos/estorno/:pedidoId": {
body: {
/**
 * Valor a ser estornado do pedido. Total ou parcial.
 */
Valor?: number
}
}
/**
 * Pedidos que terão vínculo com o grupo de assinatura informado.
 */
"POST /assinaturas/grupoassinatura/assinatura": {
body: {
/**
 * Lista de pedidos a serem vinculados a assinatura
 */
pedidos?: {
/**
 * Id do pedido
 */
pedidoId?: number
}[]
/**
 * ID da recorrência vinculada ao grupo, disponível em GET /assinaturas/grupoassinatura
 */
recorrenciaId?: number
/**
 * ID do grupo de assinatura, disponível em GET /assinaturas/grupoassinatura
 */
grupoAssinaturaId?: number
}
}
/**
 * Lista de situações de pedido
 */
"GET /situacoesPedido": {
response: {
situacaoPedidoId?: number
nome?: string
descricao?: string
observacao?: string
}[]
}
/**
 * Lista de Lojas Físicas
 */
"GET /lojasFisicas": {
searchParams: {
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadeRegistros?: number
}
response: {
lojaId?: number
nome?: string
ddd?: number
telefone?: string
email?: string
cep?: string
logradouro?: string
numero?: string
complemento?: string
bairro?: string
cidade?: string
estadoId?: number
prazoEntrega?: number
prazoMaximoRetirada?: number
ativo?: boolean
valido?: boolean
textoComplementar?: string
retirarNaLoja?: boolean
latitude?: number
longitude?: number
centroDistribuicaoId?: number
centroDistribuicao?: {
centroDistribuicaoId?: number
prazoEntrega?: number
}[]
}[]
}
/**
 * Insere uma Loja Física
 */
"POST /lojasFisicas": {
body: {
/**
 * Id da loja (optional)
 */
lojaId?: number
/**
 * Nome da loja (optional)
 */
nome?: string
/**
 * DDD da localidade de destino da loja (optional)
 */
ddd?: number
/**
 * Telefone da loja (optional)
 */
telefone?: string
/**
 * E-mail de contato da loja (optional)
 */
email?: string
/**
 * CEP do endereço da loja (optional)
 */
cep?: string
/**
 * Logradouro do endereço da loja (optional)
 */
logradouro?: string
/**
 * Número de localização do endereço da loja (optional)
 */
numero?: string
/**
 * Complemento para localização da loja (optional)
 */
complemento?: string
/**
 * Bairro do endereço do loja (optional)
 */
bairro?: string
/**
 * Cidade em que a loja se encontra (optional)
 */
cidade?: string
/**
 * Id do estado em que a loja se encontra (optional)
 */
estadoId?: number
/**
 * Prazo de entrega (optional)
 */
prazoEntrega?: number
/**
 * Prazo máximo para retirada (optional)
 */
prazoMaximoRetirada?: number
/**
 * Status da loja (optional)
 */
ativo?: boolean
/**
 * Valido (optional)
 */
valido?: boolean
/**
 * Informações complementares da loja (optional)
 */
textoComplementar?: string
/**
 * Se a retirada na loja será ativada (optional)
 */
retirarNaLoja?: boolean
/**
 * Latitude (optional)
 */
latitude?: number
/**
 * Longitude (optional)
 */
longitude?: number
/**
 * Lista com os Identificadores dos centros de distribuição que serão vinculados a loja física (optional)
 */
centroDistribuicao?: {
/**
 * Id do centro de distribuição
 */
centroDistribuicaoId?: number
/**
 * Prazo de entrega
 */
prazoEntrega?: number
}[]
}
}
/**
 * Atualiza um usuário pelo email
 */
"PUT /usuarios/:email": {
body: {
/**
 * Tipo de pessoa
 */
tipoPessoa?: ("Fisica" | "Juridica")
/**
 * Origem do contato
 */
origemContato?: ("Google" | "Bing" | "Jornal" | "PatrocinioEsportivo" | "RecomendacaoAlguem" | "Revista" | "SiteInternet" | "Televisao" | "Outro" | "UsuarioImportadoViaAdmin" | "PayPalExpress")
/**
 * Tipo Sexo (optional)
 */
tipoSexo?: ("Undefined" | "Masculino" | "Feminino")
/**
 * Nome do usuário (Max Length: 100)
 */
nome?: string
/**
 * CPF do usuário caso seja pessoa física (Max Length: 50) (optional)
 */
cpf?: string
/**
 * E-mail do usuário (Max Length: 100)
 */
email?: string
/**
 * RG do usuário caso seja pessoa física (Max Length: 50) (optional)
 */
rg?: string
/**
 * Telefone residencial do usuário. Deve ser informado o DDD junto ao número(Max Length: 50)
 */
telefoneResidencial?: string
/**
 * Telefone celular do usuário. Deve ser informado o DDD junto ao número (Max Length: 50) (optional)
 */
telefoneCelular?: string
/**
 * Telefone comercial do usuário. Deve ser informado o DDD junto ao número(Max Length: 50) (optional)
 */
telefoneComercial?: string
/**
 * Data de nascimento (optional)
 */
dataNascimento?: string
/**
 * Razão social do usuário, caso seja uma pessoa jurídica(Max Length: 100) (optional)
 */
razaoSocial?: string
/**
 * CNPJ do usuário, caso seja uma pessoa jurídica(Max Length: 50) (optional)
 */
cnpj?: string
/**
 * Inscrição estadual do usuário, caso seja uma pessoa jurídica(Max Length: 50) (optional)
 */
inscricaoEstadual?: string
/**
 * Responsável(Max Length: 100) (optional)
 */
responsavel?: string
/**
 * Data de criação do cadastro (optional)
 */
dataCriacao?: string
/**
 * Data de atualização do cadastro (optional)
 */
dataAtualizacao?: string
/**
 * Se o usuário é revendedor (optional)
 */
revendedor?: boolean
/**
 * Informação cadastral (optional)
 */
listaInformacaoCadastral?: {
/**
 * Chave
 */
chave?: string
/**
 * Valor
 */
valor?: string
}[]
/**
 * Avatar (Max Length: 50) (optional)
 */
avatar?: string
/**
 * IP do usuário (Max Length: 20) (optional)
 */
ip?: string
/**
 * Seta ou retorna o valor de Aprovado (optional)
 */
aprovado?: boolean
}
}
/**
 * Insere um novo campo de cadastro personalizado
 */
"POST /usuarios/CadastroPersonalizado": {
body: {
/**
 * Nome do campo
 */
nome?: string
/**
 * Tipo do campo
 */
tipo?: ("TextoLivre" | "ValoresPredefinidos" | "RadioButton")
/**
 * Se o campo será obrigatório
 */
obrigatorio?: boolean
/**
 * Ordem
 */
ordem?: number
/**
 * Informação para os campos (optional)
 */
valorPreDefinido?: {
/**
 * Valor
 */
valor?: string
/**
 * Ordem
 */
ordem?: number
}[]
}
}
/**
 * Seta identificador como variante principal
 */
"PUT /produtos/:identificador/principal": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
}
/**
 * Lista de inscrições
 */
"GET /webhook/inscricao": {
response: {
inscricaoId?: number
nome?: string
appUrl?: string
ativo?: boolean
emailResponsavel?: string
topico?: string[]
usuario?: string
header?: {
headerId?: number
chave?: string
valor?: string
}[]
}[]
}
/**
 * Insere uma inscrição
 */
"POST /webhook/inscricao": {
body: {
/**
 * Nome da inscrição
 */
nome?: string
/**
 * Url para qual deve ser enviada as notificações
 */
appUrl?: string
/**
 * Tópicos em que deseja se inscrever
 */
topicos: string[]
/**
 * Usuário que está realizando a inscrição
 */
usuario?: string
/**
 * Status da inscrição, se ativada ou desativada
 */
ativo?: boolean
/**
 * E-mail do responsável para notificá-lo quando não seja possível notificá-lo pelo AppUrl informado
 */
emailResponsavel?: string
/**
 * Headers que devam ser adicionados ao realizar a requisição para o AppUrl. Headers de Conteúdo como 'ContentType' não são necessário. As requisições realizada sempre serão no formato 'application/json' (optional)
 */
headers?: {
/**
 * Chave do header, por exemplo: 'Authorization'
 */
chave?: string
/**
 * Valor / Conteúdo do header, por exemplo: 'Basic 0G3EQWD-W324F-234SD-2421OFSD'
 */
valor?: string
}[]
}
}
/**
 * Lista de produtos de um Grupo de Personalização
 */
"GET /grupospersonalizacao/:grupoPersonalizacaoId/produtos": {
response: {
produtoId?: number
nome?: string
alias?: string
}[]
}
/**
 * Vincula produtos a um Grupo de Personalização
 */
"POST /grupospersonalizacao/:grupoPersonalizacaoId/produtos": {
body: {
/**
 * Lista de Id dos produtos
 */
RAW_BODY: {
/**
 * Id do produto
 */
produtoId?: number
}[]
}
}
/**
 * Remove o vinculo de produtos de um Grupo de Personalização
 */
"DELETE /grupospersonalizacao/:grupoPersonalizacaoId/produtos": {
body: {
/**
 * Lista de Id dos produtos
 */
RAW_BODY: {
/**
 * Id do produto
 */
produtoId?: number
}[]
}
}
/**
 * Gráfico do Faturamento
 */
"GET /dashboard/graficofaturamento": {
searchParams: {
/**
 * Data inicial do faturamento que deverão retonar (aaaa-mm-dd)
 */
dataInicial?: string
/**
 * Data final do faturamento que deverão retonar (aaaa-mm-dd)
 */
dataFinal?: string
/**
 * Se o faturamento é somente da loja
 */
isLoja?: number
/**
 * Id do parceiro
 */
parceiroId?: number
}
response: {
parceiroId?: number
parceiro?: string
receitaPagos?: number
transacoesPagos?: number
valorMedioPagos?: number
usuarioEnderecoEstado?: string
}[]
}
/**
 * Atualiza uma informação de um produto específico
 */
"PUT /produtos/:identificador/informacoes/:informacaoId": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
body: {
/**
 * Titulo da informação (optional)
 */
titulo?: string
/**
 * Texto da informação (optional)
 */
texto?: string
/**
 * Informação se o produto variante está visível no site.
 */
exibirSite?: boolean
/**
 * Tipo de informação do produto (optional)
 */
tipoInformacao?: ("Informacoes" | "Beneficios" | "Especificacoes" | "DadosTecnicos" | "Composicao" | "ModoDeUsar" | "Cuidados" | "ItensInclusos" | "Dicas" | "Video" | "Descricao" | "ValorReferente" | "PopUpReferente" | "Prescricao" | "TabelaDeMedidas" | "Spot" | "Sinopse" | "Carrinho")
}
}
/**
 * Exclui uma informação de um produto
 */
"DELETE /produtos/:identificador/informacoes/:informacaoId": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
response: {
informacaoId?: number
titulo?: string
texto?: string
tipoInformacao?: string
}[]
}
/**
 * Assinatura de um determinado pedido
 */
"GET /assinaturas/pedido/:pedidoId": {
response: {
assinaturaPedidoId?: number
assinaturaId?: number
grupoAssinaturaId?: number
tipoPeriodo?: string
tempoPeriodo?: number
pedidoId?: number
valor?: number
data?: string
origemPedidoEnumId?: number
produtoVarianteId?: number
}[]
}
/**
 * Atualiza rastreamento parcial (Rastreamento e UrlRastreamento)
 */
"PUT /pedidos/:pedidoId/rastreamento/:pedidoRastreamentoId/parcial": {
body: {
/**
 * Objeto Pedido Rastreamento
 */
RAW_BODY: {
/**
 * Rastreamento (optional)
 */
rastreamento?: string
/**
 * URL de Rastreamento (optional)
 */
urlRastreamento?: string
}
}
}
/**
 * Access token atualizado com sucesso
 */
"POST /autenticacao/refresh": {
response: {
lojas?: string[]
accessToken?: string
dataExpiracaoAccessTokenUTC?: string
}
}
/**
 * Ativa ou inativa uma inscrição
 */
"PUT /webhook/inscricao/:inscricaoId/Ativar": {
body: {
/**
 * Status que deseja atualizar a inscrição. True (Ativada) ou False (desativada)
 */
ativo?: boolean
/**
 * Usuário que está realizando a atualização
 */
usuario?: string
/**
 * Observação que deseje fazer com relação a ativação/desativação da inscrição (optional)
 */
observacao?: string
}
}
/**
 * Assinatura com erro na loja
 */
"GET /assinaturas/erros/:assinaturaId": {
response: {
assinaturaErroId?: number
assinaturaId?: number
usuarioId?: string
visualizado?: boolean
dataErro?: string
resolvido?: boolean
codigoAssinaturaErro?: number
assinaturaErroNome?: string
assinaturaErroDescricao?: string
}[]
}
/**
 * Limite de crédito de um usuário específico
 */
"GET /usuarios/limiteCreditoPorEmail/:email": {
response: {
usuarioId?: number
valor?: number
saldo?: number
}
}
/**
 * Retorna o histórico de situações de um pedido
 */
"GET /pedidos/:pedidoId/historicoSituacao": {
response: {
situacoes?: {
situacaoPedidoId?: number
nome?: string
dataAtualizacao?: string
}[]
}
}
/**
 * Atualiza o limite de crédito para um usuário
 */
"PUT /usuarios/limiteCredito/:usuarioId": {
searchParams: {
/**
 * CPF ou CNPJ do usuário
 */
cpf_cnpj?: string
/**
 * Valor do limite de crédito
 */
valor?: number
}
}
/**
 * Retorna a lista de produtos de um portfolio
 */
"GET /portfolios/:portfolioId/produtos": {
response: {
produtoId?: number
}[]
}
/**
 * Vinculo de produtos ao portfolio
 */
"PUT /portfolios/:portfolioId/produtos": {
body: {
/**
 * Lista dos Id's dos produtos
 */
RAW_BODY: {
/**
 * Id do produto
 */
produtoId?: number
}[]
}
}
/**
 * Insere um rastreamento e status a um produto variante
 */
"POST /pedidos/:pedidoId/produtos/:produtoVarianteId/rastreamento": {
body: {
/**
 * Id da situação do pedido
 */
situacaoPedidoId?: number
/**
 * Quantidade (optional)
 */
quantidade?: number
/**
 * Id do centro de distribuição
 */
centroDistribuicaoId?: number
/**
 * Rastreamento (optional)
 */
rastreamento?: string
/**
 * Data (optional)
 */
dataEvento?: string
/**
 * Número da nota fiscal (optional)
 */
numeroNotaFiscal?: string
/**
 * Chave de acesso NFE (optional)
 */
chaveAcessoNFE?: string
/**
 * URL NFE (optional)
 */
urlNFE?: string
/**
 * Serie NFE (optional)
 */
serieNFE?: string
/**
 * CFOP (optional)
 */
cfop?: number
/**
 * URL de rastreamento (optional)
 */
urlRastreamento?: string
}
}
/**
 * Usuários encontrados
 */
"GET /parceiros/:parceiroId/usuarios": {
response: {
usuarioId?: number
email?: string
ativo?: boolean
dataInicial?: string
dataFinal?: string
vinculoVitalicio?: boolean
}[]
}
/**
 * Dados de transação do pedido
 */
"GET /pedidos/transacoes/:transacaoId": {

}
/**
 * Operação realizada com ou sem sucesso para os usuários
 */
"PUT /usuarios/autorizar": {
searchParams: {
/**
 * Tipo de Identificador
 */
tipoIdentificador?: ("UsuarioId" | "Email")
}
body: {
/**
 * Usuários
 */
RAW_BODY?: {
/**
 * Identificador
 */
identificador?: string
/**
 * Status de aprovação
 */
aprovado?: boolean
}[]
}
response: {
usuariosAtualizados?: string[]
usuariosNaoAtualizados?: string[]
}
}
/**
 * Atualiza a data de cadastro um produto com base nos dados enviados
 */
"PUT /produtos/:identificador/DataCadastro": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
body: {
/**
 * Data de cadastro de um produto - Formato: aaaa-mm-dd hh:mm:ss
 */
dataCadastro?: string
}
response: {
produtoVarianteId?: number
produtoId?: number
idPaiExterno?: string
idVinculoExterno?: string
sku?: string
nome?: string
nomeProdutoPai?: string
urlProduto?: string
exibirMatrizAtributos?: string
contraProposta?: boolean
fabricante?: string
autor?: string
editora?: string
colecao?: string
genero?: string
precoCusto?: number
precoDe?: number
precoPor?: number
fatorMultiplicadorPreco?: number
prazoEntrega?: number
valido?: boolean
exibirSite?: boolean
freteGratis?: string
trocaGratis?: boolean
peso?: number
altura?: number
comprimento?: number
largura?: number
garantia?: number
isTelevendas?: boolean
ean?: string
localizacaoEstoque?: string
listaAtacado?: {
precoPor?: number
quantidade?: number
}[]
estoque?: {
estoqueFisico?: number
estoqueReservado?: number
centroDistribuicaoId?: number
alertaEstoque?: number
}[]
atributos?: {
tipoAtributo?: string
isFiltro?: boolean
nome?: string
valor?: string
exibir?: boolean
}[]
quantidadeMaximaCompraUnidade?: number
quantidadeMinimaCompraUnidade?: number
condicao?: string
informacoes?: {
informacaoId?: number
titulo?: string
texto?: string
tipoInformacao?: string
}[]
tabelasPreco?: {
tabelaPrecoId?: number
nome?: string
precoDe?: number
precoPor?: number
}[]
dataCriacao?: string
dataAtualizacao?: string
urlVideo?: string
spot?: boolean
paginaProduto?: boolean
marketplace?: boolean
somenteParceiros?: boolean
reseller?: {
resellerId?: number
razaoSocial?: string
centroDistribuicaoId?: number
ativo?: boolean
ativacaoAutomaticaProdutos?: boolean
autonomia?: boolean
buyBox?: boolean
nomeMarketPlace?: string
}
buyBox?: boolean
}
}
/**
 * Atualiza a situação do status de um produto do pedido
 */
"PUT /pedidos/:pedidoId/:produtoVarianteId/status": {
body: {
/**
 * Dados da situação do produto (optional)
 */
RAW_BODY: {
/**
 * Id do centro de distribuição do produto
 */
centroDistribuicaoId?: number
/**
 * Quantidade de produtos do centro de distribuição
 */
quantidade?: number
/**
 * Novo status da situação do produto (são os mesmo status do pedido)
 */
situacaoPedidoProdutoId?: number
}
}
}
/**
 * Indicadores dos Produtos no Estoque
 */
"GET /dashboard/produtoestoque": {
searchParams: {
/**
 * Data inicial dos produtos no estoque que deverão retonar (aaaa-mm-dd)
 */
dataInicial?: string
/**
 * Data final dos produtos no estoque que deverão retonar (aaaa-mm-dd)
 */
dataFinal?: string
}
response: {
indicadorProdutoComEstoque?: string
indicadorProdutoSemEstoque?: string
}
}
/**
 * Atualiza um endereço de um usuário pelo e-mail do usuário
 */
"PUT /usuarios/:email/enderecos/:enderecoId": {
body: {
/**
 * Nome de identificação do endereço a ser cadastrado (Max Length: 100)
 */
nomeEndereco?: string
/**
 * Nome da rua (Max Length: 500)
 */
rua?: string
/**
 * Número do local (Max Length: 50)
 */
numero?: string
/**
 * Complemento (Max Length: 250) (optional)
 */
complemento?: string
/**
 * Referência para a localização do endereço (Max Length: 500) (optional)
 */
referencia?: string
/**
 * Bairro do endereço (Max Length: 100)
 */
bairro?: string
/**
 * Cidade em que se localiza o endereço (Max Length: 100)
 */
cidade?: string
/**
 * O estado (Max Length: 100)
 */
estado?: string
/**
 * Código do cep (Max Length: 50)
 */
cep?: string
}
}
/**
 * Atualiza o status de uma avaliação de um produto variante
 */
"PUT /produtoavaliacao/:produtoAvaliacaoId/status": {
body: {
/**
 * Status para a avaliação
 */
status?: ("Pendente" | "NaoAprovado" | "Aprovado")
}
}
/**
 * Fabricante encontrado
 */
"GET /fabricantes/:nome": {
response: {
fabricanteId?: number
ativo?: boolean
nome?: string
urlLogoTipo?: string
urlLink?: string
urlCarrossel?: string
}
}
/**
 * Lista de parceiros vinculados ao banner
 */
"GET /banners/:bannerId/parceiros": {

}
/**
 * Vincula parceiros com um banner específico
 */
"POST /banners/:bannerId/parceiros": {
body: {
/**
 * Lista de Id dos parceiros
 */
RAW_BODY: {
/**
 * Id do parceiro (optional)
 */
parceiroId?: number
}[]
}
}
/**
 * Deleta o vinculo de um ou mais parceiros com um banner específico
 */
"DELETE /banners/:bannerId/parceiros": {
body: {
/**
 * Lista de identificadores de parceiros para desvincular do banner
 */
listaParceiros?: {
/**
 * Id do parceiro (optional)
 */
parceiroId?: number
}[]
}
}
/**
 * Lista de tabelas de preços
 */
"GET /tabelaPrecos": {
response: {
tabelaPrecoId?: number
nome?: string
dataInicial?: string
dataFinal?: string
ativo?: boolean
isSite?: boolean
}[]
}
/**
 * Insere uma nova tabela de preços
 */
"POST /tabelaPrecos": {
body: {
/**
 * Nome da tabela de preço
 */
nome?: string
/**
 * Data que inicia a tabela de preço
 */
dataInicial?: string
/**
 * Data de término da tabela de preço
 */
dataFinal?: string
/**
 * Status da tabela de preço
 */
ativo?: boolean
}
}
/**
 * Atualiza a imagem do banner
 */
"PUT /banners/:bannerId/Imagem": {
body: {
/**
 * URL da Imagem (optional)
 */
urlImagem?: string
/**
 * Informações para atualizar a imagem (optional)
 */
Imagem?: {
/**
 * string da imagem em base 64
 */
base64?: string
/**
 * formato da imagem
 */
formato?: ("PNG" | "JPG" | "JPEG")
/**
 * nome da imagem
 */
nome?: string
}
}
}
/**
 * Exclui o vínculo entre uma categoria e um produto
 */
"DELETE /produtos/:identificador/categorias/:id": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
}
/**
 * Xml com os dados de uma mídia específicas entre duas datas
 */
"GET /midias/:identificador": {
searchParams: {
/**
 * Data inicial (aaaa-mm-dd)
 */
dataInicial?: string
/**
 * Data final (aaaa-mm-dd)
 */
dataFinal?: string
}
response: {
dias?: {
diaMidiaApiModel?: {
dia?: string
investimento?: {
meta?: number
realizado?: number
}
pedidos?: {
meta?: number
realizado?: number
}
roi?: {
meta?: number
realizado?: number
}
receita?: {
meta?: number
realizado?: number
}
visitas?: {
meta?: number
realizado?: number
}
}[]
}
id?: number
nome?: string
tipo?: string
}
}
/**
 * Lista de hotsites
 */
"GET /hotsites": {
searchParams: {
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadePorPagina?: number
}
response: {
hotsiteId?: number
nome?: string
ativo?: boolean
template?: string
dataCriacao?: string
dataInicio?: string
dataFinal?: string
url?: string
tamanhoPagina?: number
templateId?: number
ordenacao?: string
listaProdutos?: {
expressao?: string
produtos?: {
produtoId?: number
ordem?: number
}[]
}
seo?: {
seoHotsiteId?: number
hotsiteId?: number
titulo?: string
metas?: {
conteudo?: string
nome?: string
httpEquiv?: string
scheme?: string
}[]
}
banners?: {
bannerId?: number
}[]
conteudos?: {
conteudoId?: number
}[]
}[]
}
/**
 * A lista de produtos para serem exibidos no hotsite está limitada a 1024 itens, tanto por expressão como por produtos.
 */
"POST /hotsites": {
body: {
/**
 * Nome do hotsite
 */
nome?: string
/**
 * Data/hora em que o hotsite começará a ser exibido (optional)
 */
dataInicio?: string
/**
 * Data/Hora (último dia) em que o hotsite não será mais exibido (optional)
 */
dataFinal?: string
/**
 * Informe a url do hotsite. Por exemplo, se o site for 'busca.meusite.com.br', e o hotsite desejado for 'busca.meusite.com.br/hotsite/natal' informe neste campo somente a url 'hotsite/natal', sem a barra '/' no início
 */
url?: string
/**
 * Informe o número de produtos que deve ser exibido por página
 */
tamanhoPagina?: number
/**
 * Informe o identificador do template que será utilizado. Caso não saiba o identificador do template desejado, o mesmo pode ser buscado no endpoint GET/Templates
 */
templateId?: number
/**
 * Informe qual será a ordenação dos Produtos no Hotsite (optional)
 */
ordenacao?: ("Nenhuma" | "NomeCrescente" | "NomeDecrescente" | "Lancamento" | "MenorPreco" | "MaiorPreco" | "MaisVendidos" | "MaioresDescontos" | "Aleatorio" | "MenorEstoque" | "MaiorEstoque")
/**
 * Produtos que devem aparecer no hotsite
 */
listaProdutos?: {
/**
 * você pode utilizar essa opção para gerar um hotsite utilizando uma expressão de busca. Ao utilizá-la, os produtos adicionados nos outros modos de criação de hotsite serão ignorados (optional)
 */
expressao?: string
/**
 * Id dos produtos
 */
produtos?: {
/**
 * Identificador do produto a ser mostrado no hotsite
 */
produtoId?: number
/**
 * Ordem para apresentação do produto (optional)
 */
ordem?: number
}[]
}
/**
 * Dados de seo (optional)
 */
seo?: {
/**
 * Informe o Título que será exibido quando o Hotsite for acessado (optional)
 */
titulo?: string
/**
 * Não se esqueça! Além do texto livre, você pode utilizar as tags [Nome.Hotsite] e [Fbits.NomeLoja] para o cadastro das MetaTags e Title! (optional)
 */
metas?: {
/**
 * Informe os dados da Metatag
 */
conteudo?: string
/**
 * Informe os dados da Metatag
 */
nome?: string
/**
 * Informe os dados da Metatag
 */
httpEquiv?: string
/**
 * Informe os dados da Metatag
 */
scheme?: string
}[]
}
/**
 * Lista de identificadores de banners a serem vinculados ao hotsite (optional)
 */
banners?: {
/**
 * Identificador do banner (optional)
 */
bannerId?: number
}[]
/**
 * Lista de identificadores de conteúdos a serem vinculados ao hotsite
 */
conteudos?: {
/**
 * Identificador do conteúdo
 */
conteudoId?: number
}[]
/**
 * Status do hotsite (optional)
 */
ativo?: boolean
}
}
/**
 * Lista de pedidos
 */
"GET /pedidos/situacaoPedido/:situacoesPedido": {
searchParams: {
/**
 * Data inicial dos pedidos que deverão retornar (aaaa-mm-dd hh:mm:ss)
 */
dataInicial?: string
/**
 * Data final dos pedidos que deverão retonar (aaaa-mm-dd hh:mm:ss)
 */
dataFinal?: string
/**
 * Tipo de filtro da data (Ordenação "desc" - padrão: DataPedido)
 */
enumTipoFiltroData?: ("DataPedido" | "DataAprovacao" | "DataModificacaoStatus" | "DataAlteracao" | "DataCriacao")
/**
 * Lista de formas de pagamento que deverão retornar (lista separada por "," ex.: 1,2,3), caso vazio retornará todas as formas de pagamento
 */
formasPagamento?: string
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadeRegistros?: number
/**
 * Quando passado o valor true, deverá retornar apenas pedidos de assinatura. Quando falso, deverá retornar todos os pedidos.
 */
apenasAssinaturas?: boolean
}
response: {
pedidoId?: number
situacaoPedidoId?: number
tipoRastreamentoPedido?: string
transacaoId?: number
data?: string
dataPagamento?: string
dataUltimaAtualizacao?: string
valorFrete?: number
valorTotalPedido?: number
valorDesconto?: number
valorDebitoCC?: number
cupomDesconto?: string
marketPlacePedidoId?: string
marketPlacePedidoSiteId?: string
canalId?: number
canalNome?: string
canalOrigem?: string
retiradaLojaId?: number
isPedidoEvento?: boolean
usuario?: {
usuarioId?: number
grupoInformacaoCadastral?: {
chave?: string
valor?: string
}[]
tipoPessoa?: string
origemContato?: string
tipoSexo?: string
nome?: string
cpf?: string
email?: string
rg?: string
telefoneResidencial?: string
telefoneCelular?: string
telefoneComercial?: string
dataNascimento?: string
razaoSocial?: string
cnpj?: string
inscricaoEstadual?: string
responsavel?: string
dataCriacao?: string
dataAtualizacao?: string
revendedor?: boolean
listaInformacaoCadastral?: {
chave?: string
valor?: string
}[]
}
pedidoEndereco?: {
tipo?: string
nome?: string
endereco?: string
numero?: string
complemento?: string
referencia?: string
cep?: string
tipoLogradouro?: string
logradouro?: string
bairro?: string
cidade?: string
estado?: string
pais?: string
}[]
frete?: {
freteContratoId?: number
freteContrato?: string
referenciaConector?: string
valorFreteEmpresa?: number
valorFreteCliente?: number
peso?: number
pesoCobrado?: number
volume?: number
volumeCobrado?: number
prazoEnvio?: number
prazoEnvioTexto?: string
retiradaLojaId?: number
centrosDistribuicao?: {
freteContratoId?: number
freteContrato?: string
valorFreteEmpresa?: number
valorFreteCliente?: number
peso?: number
pesoCobrado?: number
volume?: number
volumeCobrado?: number
prazoEnvio?: number
prazoEnvioTexto?: string
centroDistribuicaoId?: number
}[]
servico?: {
servicoId?: number
nome?: string
transportadora?: string
prazo?: number
servicoNome?: string
preco?: number
servicoTransporte?: number
codigo?: number
servicoMeta?: string
custo?: number
token?: string
}
retiradaAgendada?: {
lojaId?: number
retiradaData?: string
retiradaPeriodo?: string
nome?: string
documento?: string
codigoRetirada?: string
}
agendamento?: {
de?: string
ate?: string
}
informacoesAdicionais?: {
chave?: string
valor?: string
}[]
}
itens?: {
produtoVarianteId?: number
sku?: string
nome?: string
quantidade?: number
precoCusto?: number
precoVenda?: number
isBrinde?: boolean
valorAliquota?: number
isMarketPlace?: boolean
precoPor?: number
desconto?: number
totais?: {
precoCusto?: number
precoVenda?: number
precoPor?: number
desconto?: number
}
ajustes?: {
tipo?: string
valor?: number
observacao?: string
nome?: string
}[]
centroDistribuicao?: {
centroDistribuicaoId?: number
quantidade?: number
situacaoProdutoId?: number
valorFreteEmpresa?: number
valorFreteCliente?: number
}[]
valoresAdicionais?: {
tipo?: string
origem?: string
texto?: string
valor?: number
}[]
atributos?: {
produtoVarianteAtributoValor?: string
produtoVarianteAtributoNome?: string
}[]
embalagens?: {
tipoEmbalagemId?: number
nomeTipoEmbalagem?: string
mensagem?: string
valor?: number
descricao?: string
}[]
personalizacoes?: {
nomePersonalizacao?: string
valorPersonalizacao?: string
valor?: number
}[]
frete?: {
quantidade?: number
freteContratoId?: number
freteContrato?: string
valorFreteEmpresa?: number
valorFreteCliente?: number
peso?: number
pesoCobrado?: number
volume?: number
volumeCobrado?: number
prazoEnvio?: number
prazoEnvioTexto?: string
centroDistribuicaoId?: number
}[]
dadosProdutoEvento?: {
tipoPresenteRecebimento?: string
}
formulas?: {
chaveAjuste?: string
valor?: number
nome?: string
expressao?: string
expressaoInterpretada?: string
endPoint?: string
}[]
seller?: {
sellerId?: number
sellerNome?: string
sellerPedidoId?: number
}
}[]
assinatura?: {
assinaturaId?: number
grupoAssinaturaId?: number
tipoPeriodo?: string
tempoPeriodo?: number
percentualDesconto?: number
}[]
pagamento?: {
formaPagamentoId?: number
numeroParcelas?: number
valorParcela?: number
valorDesconto?: number
valorJuros?: number
valorTotal?: number
boleto?: {
urlBoleto?: string
codigoDeBarras?: string
}
cartaoCredito?: {
numeroCartao?: string
nomeTitular?: string
dataValidade?: string
codigoSeguranca?: string
documentoCartaoCredito?: string
token?: string
info?: string
bandeira?: string
}[]
pagamentoStatus?: {
numeroAutorizacao?: string
numeroComprovanteVenda?: string
dataAtualizacao?: string
dataUltimoStatus?: string
adquirente?: string
tid?: string
}[]
informacoesAdicionais?: {
chave?: string
valor?: string
}[]
}[]
observacao?: {
observacao?: string
usuario?: string
data?: string
publica?: boolean
}[]
valorCreditoFidelidade?: number
valido?: boolean
valorSubTotalSemDescontos?: number
pedidoSplit?: number[]
}[]
}
/**
 * Portfolio encontrado
 */
"GET /portfolios/:nome": {
response: {
portfolioId?: number
nome?: string
ativo?: boolean
}
}
/**
 * Lista de categorias de um produto
 */
"GET /produtos/:identificador/categorias": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId" | "ProdutoId")
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadRegistros?: number
}
response: {
id?: number
nome?: string
categoriaPaiId?: number
categoriaERPId?: string
ativo?: boolean
isReseller?: boolean
exibirMatrizAtributos?: string
quantidadeMaximaCompraUnidade?: number
valorMinimoCompra?: number
exibeMenu?: boolean
urlHotSite?: string
caminhoHierarquia?: string
categoriaPrincipal?: boolean
}[]
}
/**
 * Adiciona o vínculo entre um produto e uma categoria com base na lista enviada
 */
"POST /produtos/:identificador/categorias": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
body: {
/**
 * Id da Categoria Principal (optional)
 */
categoriaPrincipalId?: number
/**
 * Id da categoria a qual o produto deverá ser vinculado (optional)
 */
listaCategoriaId?: number[]
}
}
/**
 * Lista de Atacarejos
 */
"GET /produtos/:identificador/atacarejo": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
response: {
produtoVarianteAtacadoId?: number
precoAtacado?: number
quantidade?: number
}[]
}
/**
 * Adiciona novos Atacarejos
 */
"POST /produtos/:identificador/atacarejo": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
body: {
/**
 * Lista de Atacarejos (optional)
 */
RAW_BODY: {
/**
 * Preço atacado
 */
precoAtacado?: number
/**
 * Quantidade do produto
 */
quantidade?: number
}[]
}
response: {
produtoVarianteAtacadoId?: number
precoAtacado?: number
quantidade?: number
}[]
}
/**
 * Recorrências cadastradas na loja
 */
"GET /assinaturas/recorrencias": {
response: {
recorrencias?: string[]
}
}
/**
 * Atualiza rastreamento completo (com os dados da N.F.)
 */
"PUT /pedidos/:pedidoId/rastreamento/:pedidoRastreamentoId": {
body: {
/**
 * Objeto Pedido Rastreamento
 */
RAW_BODY: {
/**
 * Número da nota fiscal
 */
notaFiscal?: string
/**
 * Código Fiscal de Operações e Prestações
 */
cfop?: number
/**
 * Data Envio
 */
dataEnviado?: string
/**
 * Chave de Acesso NFE
 */
chaveAcessoNFE?: string
/**
 * Rastreamento (optional)
 */
rastreamento?: string
/**
 * URL de rastreamento (optional)
 */
urlRastreamento?: string
/**
 * Transportadora (optional)
 */
transportadora?: string
/**
 * Data da entrega (optional)
 */
dataEntrega?: string
}
}
}
/**
 * Atualiza a prioridade de um centro de distribuição
 */
"PUT /centrosdistribuicao/:centroDistribuicaoId/prioridade": {
body: {
/**
 * (optional)
 */
incrementoOrdem?: number
/**
 * (optional)
 */
desativarPriorizacao?: boolean
}
response: {

}
}
/**
 * Conteúdos encontrados
 */
"GET /conteudos": {
searchParams: {
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadePorPagina?: number
}
response: {
conteudoId?: number
titulo?: string
ativo?: boolean
dataInicio?: string
dataFim?: string
posicionamento?: string
codigoFonte?: string
termoBusca?: string
exibeTodasBuscas?: boolean
naoExibeBuscas?: boolean
exibeTodosHotsites?: boolean
hotsitesId?: number[]
}[]
}
/**
 * Insere um novo conteúdo na loja
 */
"POST /conteudos": {
body: {
/**
 * Titulo do conteúdo
 */
titulo?: string
/**
 * Conteúdo ativo/inativo
 */
ativo?: boolean
/**
 * Data de inicio de exibição do conteúdo (optional)
 */
dataInicio?: string
/**
 * Data final de exibição do conteúdo (optional)
 */
dataFim?: string
/**
 * Posicionamento do conteúdo
 */
posicionamento?: ("Topo" | "Centro" | "Rodape" | "LateralDireita" | "LateralEsquerda" | "MobileTopo" | "MobileRodape")
/**
 * Informações do conteúdo
 */
conteudo?: string
/**
 * Insira em qual Termo de Busca o Conteúdo será exibido (optional)
 */
termoBusca?: string
/**
 * Exibição do conteúdo nas buscas
 */
exibeTodasBuscas?: boolean
/**
 * Não exibição do conteúdo nas buscas
 */
naoExibeBuscas?: boolean
/**
 * Exibição do conteúdo nos hotsites
 */
exibeTodosHotsites?: boolean
/**
 * Insira quais Hotsites que o Conteúdo será exibido (optional)
 */
hotsitesId?: number[]
}
}
/**
 * Atualiza a imagem de estampa do produto
 */
"PUT /produtos/:identificador/imagens/estampa": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
body: {
/**
 * Id da imagem que será marcada como estampa
 */
idImagem?: number
}
}
/**
 * Retorna lista de usuários cadastrados/descadastrados na newsletter (50 por página)
 */
"GET /usuarios/newsletter": {
searchParams: {
/**
 * Tipo de ordenação
 */
ordenarPor?: ("DataCadastro" | "DataAtualizacao")
/**
 * Data inicial dos cadastros que deverão retornar (aaaa-mm-dd hh:mm:ss)
 */
dataInicial?: string
/**
 * Data final dos cadastros que deverão retornar (aaaa-mm-dd hh:mm:ss)
 */
dataFinal?: string
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Status do usuário
 */
status?: boolean
/**
 * DoubleOptIn aceito (verificar estado da configuração)
 */
doubleOptIn?: boolean
}
response: {
nome?: string
email?: string
sexo?: string
status?: boolean
grupoInformacao?: {
nome?: string
valor?: string
}[]
}[]
}
/**
 * Ativa ou desativa um endereço de um usuário com base no e-mail do usuário
 */
"PUT /usuarios/:email/enderecos/:enderecoId/ativar": {
body: {
/**
 * Status do endereço
 */
status?: boolean
}
}
/**
 * Insere uma avaliação para um produto variante
 */
"POST /produtoavaliacao/:identificador": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno da fstore
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
body: {
/**
 * Texto referente a avaliação do produto
 */
comentario?: string
/**
 * Escala de 1 a 5 para avaliar o produto
 */
avaliacao?: number
/**
 * Identificado do usuário
 */
usuarioId?: number
/**
 * Referente a data que a avaliação foi criada
 */
dataAvaliacao?: string
/**
 * Nome do usuário que avaliou
 */
nome?: string
/**
 * Email do usuário que avaliou
 */
email?: string
/**
 * Referente ao status que libera a visualização da avaliação no site
 */
status?: ("Pendente" | "NaoAprovado" | "Aprovado")
}
}
/**
 * Relatório de receitas de um determinado período
 */
"GET /dashboard/receita": {
searchParams: {
/**
 * Data inicial dos pedidos que deverão retornar (aaaa-mm-dd)
 */
dataInicial?: string
/**
 * Data final dos pedidos que deverão retornar (aaaa-mm-dd)
 */
dataFinal?: string
/**
 * Tipo de agrupamento dos pedidos (hora, dia, semana, mês, ano)
 */
tipoAgrupamento?: ("Hora" | "Dia" | "Semana" | "Mes" | "Ano")
}
response: {
tipoAgrupamento?: string
dados?: {
data?: string
pedidosCaptados?: number
pedidosPagos?: number
pedidosEnviados?: number
pedidosCancelados?: number
}[]
}
}
/**
 * Lista de fretes
 */
"GET /fretes": {
response: {
freteId?: number
nome?: string
ativo?: boolean
volumeMaximo?: number
pesoCubado?: number
entregaAgendadaConfiguracaoId?: number
linkRastreamento?: string
ehAssinatura?: boolean
larguraMaxima?: number
alturaMaxima?: number
comprimentoMaximo?: number
limiteMaximoDimensoes?: number
limitePesoCubado?: number
tempoMinimoDespacho?: number
centroDistribuicaoId?: number
valorMinimoProdutos?: number
}[]
}
/**
 * Insere um novo contrato de frete
 */
"POST /fretes": {
body: {
/**
 * Nome do contrato de frete (optional)
 */
nome?: string
/**
 * Status do contrato de frete (optional)
 */
ativo?: boolean
/**
 * Volume máximo permitido , em metro cúbico (m³). (optional)
 */
volumeMaximo?: number
/**
 * Informe o peso cubado. Altura x largura x profundidade x fator de cubagem. (optional)
 */
pesoCubado?: number
/**
 * Id da configuração entrega agendada (optional)
 */
entregaAgendadaConfiguracaoId?: number
/**
 * URL rastreamento (optional)
 */
linkRastreamento?: string
/**
 * Contrato é exclusivo assinatura (optional)
 */
ehAssinatura?: boolean
/**
 * Informe a largura máxima, em centímetros (cm). (optional)
 */
larguraMaxima?: number
/**
 * Informe a altura máxima, em centímetros (cm). (optional)
 */
alturaMaxima?: number
/**
 * Informe o comprimento máximo, em centímetros (cm). (optional)
 */
comprimentoMaximo?: number
/**
 * Informe a soma das três dimensões (Largura + Altura + Comprimento), em centímetros (cm). (optional)
 */
limiteMaximoDimensoes?: number
/**
 * Informe o limite de peso cubado, em gramas (g). (optional)
 */
limitePesoCubado?: number
/**
 * Informe quantos dias no mínimo esse contrato de frete leva para ser enviado ao cliente (optional)
 */
tempoMinimoDespacho?: number
/**
 * Informe o Id do centro de distribuição (optional)
 */
centroDistribuicaoId?: number
/**
 * Informe o valor mínimo em produtos necessário para disponibilidade da tabela de frete (optional)
 */
valorMinimoProdutos?: number
}
}
/**
 * Detalhes de uma assinatura
 */
"GET /assinaturas/:assinaturaId": {
response: {
assinaturaId?: number
usuarioId?: number
dataProximoPedido?: string
periodoRecorrencia?: string
situacaoAssinatura?: string
dataAssinatura?: string
grupoAssinatura?: string
enderecoId?: number
usuarioCartaoCreditoId?: number
cupom?: string
produtos?: {
assinaturaProdutoId?: number
assinaturaId?: number
produtoId?: number
produtoVarianteId?: number
quantidade?: number
valor?: number
removido?: boolean
}[]
}
}
/**
 * Atualiza a situação de uma assinatura específica
 */
"PUT /assinaturas/:assinaturaId": {
body: {
/**
 * Id do endereço (optional)
 */
enderecoId?: number
/**
 * Id do cartão de crédito do usuário (optional)
 */
usuarioCartaoCreditoId?: number
/**
 * Período Recorrência (optional)
 */
periodoRecorrencia?: string
/**
 * Situação da Assinatura (optional)
 */
situacaoAssinatura?: ("Ativa" | "Pausada" | "Cancelada")
/**
 * Cupom (optional)
 */
cupom?: string
}
}
/**
 * Buscar autor pelo nome
 */
"GET /autores/:nomeAutor": {

}
/**
 * Lista o conteúdo de uma versão
 */
"GET /gestorscripts/scripts/:scriptId/versao/:versaoId/conteudo": {
response: {
scriptId?: number
versaoId?: number
conteudo?: string
}[]
}
/**
 * Altera a data de recorrência de uma assinatura
 */
"PUT /assinaturas/:assinaturaId/proximaRecorrencia": {
body: {
/**
 * Data da próxima recorrência (Será considerado apenas o dia, mês e ano. Hora e minutos não serão considerados)
 */
proximaRecorrencia?: string
}
}
/**
 * Lista de parceiros com pedidos
 */
"GET /parceiros/comPedidos": {
searchParams: {
/**
 * Data inicial dos pedidos (aaaa-mm-dd hh:mm:ss)
 */
dataInicial?: string
/**
 * Data final dos pedidos (aaaa-mm-dd hh:mm:ss)
 */
dataFinal?: string
}
response: {
parceiroId?: number
marketPlaceId?: number
nome?: string
tabelaPrecoId?: number
portfolioId?: number
tipoEscopo?: string
ativo?: boolean
isMarketPlace?: boolean
origem?: string
}[]
}
/**
 * Usuário encontrado
 */
"GET /usuarios/cnpj/:cnpj": {
response: {
usuarioId?: number
bloqueado?: boolean
grupoInformacaoCadastral?: {
chave?: string
valor?: string
}[]
tipoPessoa?: string
origemContato?: string
tipoSexo?: string
nome?: string
cpf?: string
email?: string
rg?: string
telefoneResidencial?: string
telefoneCelular?: string
telefoneComercial?: string
dataNascimento?: string
razaoSocial?: string
cnpj?: string
inscricaoEstadual?: string
responsavel?: string
dataCriacao?: string
dataAtualizacao?: string
revendedor?: boolean
listaInformacaoCadastral?: {
chave?: string
valor?: string
}[]
avatar?: string
ip?: string
aprovado?: boolean
}
}
/**
 * Deleta um produto da lista de sugestões de produtos de um tipo de evento
 */
"DELETE /tiposEvento/:tipoEventoId/produto/:produtoVarianteId": {

}
/**
 * Deleta o vinculo de um produto a um evento
 */
"DELETE /eventos/:eventoId/produto/:produtoVarianteId": {
response: string
}
/**
 * Define uma categoria de um produto como principal
 */
"PUT /produtos/:identificador/categoriaPrincipal": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
body: {
/**
 * Id da categoria
 */
categoriaId?: number
}
}
/**
 * Atualiza o estoque de vários produtos com base na lista enviada. Limite de 50 produtos por requisição
 */
"PUT /produtos/estoques": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
body: {
/**
 * Lista com os dados da atualização do estoque (optional)
 */
RAW_BODY: {
/**
 * Valor único utilizado para identificar o produto
 */
identificador?: string
/**
 * Prazo de entrega do produto
 */
prazoEntrega?: number
/**
 * Lista com os dados da atualização do estoque
 */
listaEstoque?: {
/**
 * Estoque físico do produto
 */
estoqueFisico?: number
/**
 * Estoque reservado do produto
 */
estoqueReservado?: number
/**
 * Id do centro de distribuição do estoque do produto
 */
centroDistribuicaoId?: number
/**
 * Id do produto variante
 */
produtoVarianteId?: number
/**
 * Quantidade para ativar o alerta de estoque
 */
alertaEstoque?: number
}[]
}[]
}
response: {
produtosNaoAtualizados?: {
produtoVarianteId?: number
sku?: string
centroDistribuicaoId?: number
resultado?: boolean
detalhes?: string
}[]
produtosAtualizados?: {
produtoVarianteId?: number
sku?: string
centroDistribuicaoId?: number
resultado?: boolean
detalhes?: string
}[]
}
}
/**
 * Objeto com o estoque total e o estoque por centro de distribuição de um produto variante
 */
"GET /produtos/:identificador/estoque": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
response: {
estoqueFisico?: number
estoqueReservado?: number
listProdutoVarianteCentroDistribuicaoEstoque?: {
centroDistribuicaoId?: number
nome?: string
estoqueFisico?: number
estoqueReservado?: number
}[]
}
}
/**
 * Usuário encontrado
 */
"GET /usuarios/usuarioId/:usuarioId": {
response: {
usuarioId?: number
bloqueado?: boolean
grupoInformacaoCadastral?: {
chave?: string
valor?: string
}[]
tipoPessoa?: string
origemContato?: string
tipoSexo?: string
nome?: string
cpf?: string
email?: string
rg?: string
telefoneResidencial?: string
telefoneCelular?: string
telefoneComercial?: string
dataNascimento?: string
razaoSocial?: string
cnpj?: string
inscricaoEstadual?: string
responsavel?: string
dataCriacao?: string
dataAtualizacao?: string
revendedor?: boolean
listaInformacaoCadastral?: {
chave?: string
valor?: string
}[]
avatar?: string
ip?: string
aprovado?: boolean
}
}
/**
 * Produtos Mais Vendidos
 */
"GET /dashboard/produtos": {
searchParams: {
/**
 * Data inicial dos produtos mais vendidos que deverão retonar (aaaa-mm-dd)
 */
dataInicial?: string
/**
 * Data final dos produtos mais vendidos que deverão retonar (aaaa-mm-dd)
 */
dataFinal?: string
/**
 * Id do parceiro
 */
parceiroId?: number
}
response: {
produtoVarianteId?: number
nomeProduto?: string
sku?: string
quantidade?: number
receita?: string
}[]
}
/**
 * Atualiza rastreamento parcial (Rastreamento e UrlRastreamento)
 */
"PUT /pedidos/:pedidoId/produtos/:produtoVarianteId/rastreamento/:pedidoRastreamentoProdutoId/parcial": {
body: {
/**
 * Objeto Pedido Rastreamento Produto
 */
RAW_BODY: {
/**
 * Rastreamento (optional)
 */
rastreamento?: string
/**
 * URL de Rastreamento (optional)
 */
urlRastreamento?: string
}
}
}
/**
 * Atualiza o status do banner pelo id
 */
"PUT /banners/:bannerId/status": {
body: {
/**
 * Status para qual deve ir o baner: Ativo (true) ou Inativo (false)
 */
status?: boolean
}
}
/**
 * Atualiza um endereço de um usuário pelo id do usuário
 */
"PUT /usuarios/:usuarioId/enderecos/:enderecoId": {
body: {
/**
 * Nome de identificação do endereço a ser cadastrado (Max Length: 100)
 */
nomeEndereco?: string
/**
 * Nome da rua (Max Length: 500)
 */
rua?: string
/**
 * Número do local (Max Length: 50)
 */
numero?: string
/**
 * Complemento (Max Length: 250) (optional)
 */
complemento?: string
/**
 * Referência para a localização do endereço (Max Length: 500) (optional)
 */
referencia?: string
/**
 * Bairro do endereço (Max Length: 100)
 */
bairro?: string
/**
 * Cidade em que se localiza o endereço (Max Length: 100)
 */
cidade?: string
/**
 * O estado (Max Length: 100)
 */
estado?: string
/**
 * Código do cep (Max Length: 50)
 */
cep?: string
}
}
/**
 * Lista de avaliações de produtos
 */
"GET /produtos/:identificador/avaliacoes": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
/**
 * Referente ao status que libera a visualização da avaliação no site = ['Pendente', 'NaoAprovado', 'Aprovado']
 */
status?: ("Pendente" | "NaoAprovado" | "Aprovado")
/**
 * Página da lista (padrão: 1)
 */
pagina?: number
/**
 * Quantidade de registros que deverão retornar (max: 50)
 */
quantidadeRegistros?: number
}
response: {
produtoVarianteId?: number
sku?: string
produtoAvaliacaoId?: number
comentario?: string
avaliacao?: number
usuarioId?: number
dataAvaliacao?: string
nome?: string
email?: string
status?: string
}[]
}
/**
 * Atualiza um usuário pelo id
 */
"PUT /usuarios/:usuarioId": {
body: {
/**
 * Tipo de pessoa
 */
tipoPessoa?: ("Fisica" | "Juridica")
/**
 * Origem do contato
 */
origemContato?: ("Google" | "Bing" | "Jornal" | "PatrocinioEsportivo" | "RecomendacaoAlguem" | "Revista" | "SiteInternet" | "Televisao" | "Outro" | "UsuarioImportadoViaAdmin" | "PayPalExpress")
/**
 * Tipo Sexo (optional)
 */
tipoSexo?: ("Undefined" | "Masculino" | "Feminino")
/**
 * Nome do usuário (Max Length: 100)
 */
nome?: string
/**
 * CPF do usuário caso seja pessoa física (Max Length: 50) (optional)
 */
cpf?: string
/**
 * E-mail do usuário (Max Length: 100)
 */
email?: string
/**
 * RG do usuário caso seja pessoa física (Max Length: 50) (optional)
 */
rg?: string
/**
 * Telefone residencial do usuário. Deve ser informado o DDD junto ao número(Max Length: 50)
 */
telefoneResidencial?: string
/**
 * Telefone celular do usuário. Deve ser informado o DDD junto ao número (Max Length: 50) (optional)
 */
telefoneCelular?: string
/**
 * Telefone comercial do usuário. Deve ser informado o DDD junto ao número(Max Length: 50) (optional)
 */
telefoneComercial?: string
/**
 * Data de nascimento (optional)
 */
dataNascimento?: string
/**
 * Razão social do usuário, caso seja uma pessoa jurídica(Max Length: 100) (optional)
 */
razaoSocial?: string
/**
 * CNPJ do usuário, caso seja uma pessoa jurídica(Max Length: 50) (optional)
 */
cnpj?: string
/**
 * Inscrição estadual do usuário, caso seja uma pessoa jurídica(Max Length: 50) (optional)
 */
inscricaoEstadual?: string
/**
 * Responsável(Max Length: 100) (optional)
 */
responsavel?: string
/**
 * Data de criação do cadastro (optional)
 */
dataCriacao?: string
/**
 * Data de atualização do cadastro (optional)
 */
dataAtualizacao?: string
/**
 * Se o usuário é revendedor (optional)
 */
revendedor?: boolean
/**
 * Informação cadastral (optional)
 */
listaInformacaoCadastral?: {
/**
 * Chave
 */
chave?: string
/**
 * Valor
 */
valor?: string
}[]
/**
 * Avatar (Max Length: 50) (optional)
 */
avatar?: string
/**
 * IP do usuário (Max Length: 20) (optional)
 */
ip?: string
/**
 * Seta ou retorna o valor de Aprovado (optional)
 */
aprovado?: boolean
}
}
/**
 * Liberar reservas de pedidos
 */
"POST /pedidos/liberarReservas": {
body: {
/**
 * Números dos pedidos que se deseja buscar
 */
RAW_BODY: number[]
}
}
/**
 * Atualiza para o mesmo preço, todos os variantes de um produto encontrado com o SKU informado. Limite de 50 produtos por requisição
 */
"PUT /produtos/precos/lote": {
body: {
/**
 * Lista com os dados da atualização do preço por lote
 */
RAW_BODY: {
/**
 * Identificador do produto (SKU)
 */
sku?: string
/**
 * Preço de custo do produto variante. Se passado 0 irá setar os valores para zero, se for NULO, não irá atualizar o preço de custo (optional)
 */
precoCusto?: number
/**
 * "PrecoDe" do produto variante
 */
precoDe?: number
/**
 * "PrecoPor" do produto variante
 */
precoPor?: number
/**
 * Fator multiplicador que gera o preço de exibição do produto. Ex.: produtos que exibem o preço em m² e cadastram o preço da caixa no "PrecoPor". (1 por padrão) (optional)
 */
fatorMultiplicadorPreco?: number
}[]
}
response: {
produtosNaoAtualizados?: {
produtoVarianteId?: number
sku?: string
resultado?: boolean
detalhes?: string
}[]
produtosAtualizados?: {
produtoVarianteId?: number
sku?: string
resultado?: boolean
detalhes?: string
}[]
}
}
/**
 * Atualiza a exibição do banner em parceiros, se deve ser em todos ou não
 */
"PUT /banners/:bannerId/Parceiros": {
body: {
/**
 * Exibição do banner em parceiros
 */
exibirEmTodosParceiros?: boolean
}
}
/**
 * Retorna lista contendo os Id's dos pedidos do usuário
 */
"GET /usuarios/documento/:documento/pedidos": {
searchParams: {
/**
 * Define se o documento informado é um CPF ou um CNPJ
 */
tipoDocumento?: ("Cpf" | "Cnpj")
}
response: {
pedidoId?: number
links?: {
href?: string
rel?: string
method?: string
}[]
}[]
}
/**
 * Objeto com o precoDe e precoPor de um produto variante
 */
"GET /produtos/:identificador/preco": {
searchParams: {
/**
 * Define se o identificador informado é um sku ou um id interno.
 */
tipoIdentificador?: ("Sku" | "ProdutoVarianteId")
}
response: {
precoDe?: number
precoPor?: number
fatorMultiplicadorPreco?: number
}
}
/**
 * Campo atualizado com sucesso
 */
"PUT /usuarios/bloquear": {
body: {
/**
 * Usuários (optional)
 */
RAW_BODY?: {
/**
 * E-mail do usuário
 */
email?: string
/**
 * Status do usuário
 */
bloqueado?: boolean
}[]
}
response: {
usuariosAtualizados?: string[]
usuariosNaoAtualizados?: string[]
}
}
/**
 * Frete atualizado com sucesso
 */
"PUT /fretes/:freteId/Ativo": {
body: {
/**
 * Status para atualização do contrato de frete
 */
ativo?: boolean
}
}
/**
 * Gera um novo pedido para a assinatura
 */
"POST /assinaturas/:assinaturaId/pedido": {

}
/**
 * Xml com os dados das mídias entre duas datas
 */
"GET /midias": {
searchParams: {
/**
 * Data inicial (aaaa-mm-dd)
 */
dataInicial?: string
/**
 * Data final (aaaa-mm-dd)
 */
dataFinal?: string
}
}
/**
 * Relatório de ticket médio de um determinado período
 */
"GET /dashboard/ticketMedio": {
searchParams: {
/**
 * Data inicial dos pedidos que deverão retornar (aaaa-mm-dd)
 */
dataInicial?: string
/**
 * Data final dos pedidos que deverão retornar (aaaa-mm-dd)
 */
dataFinal?: string
/**
 * Tipo de agrupamento dos pedidos (hora, dia, semana, mês, ano)
 */
tipoAgrupamento?: ("Hora" | "Dia" | "Semana" | "Mes" | "Ano")
}
response: {
tipoAgrupamento?: string
dados?: {
data?: string
pedidosCaptados?: number
pedidosPagos?: number
pedidosEnviados?: number
pedidosCancelados?: number
}[]
}
}
/**
 * Objeto com as cotações de frete
 */
"GET /fretes/pedidos/:pedidoId/cotacoes": {
searchParams: {
/**
 * Força cotação de todos os CD's.
 */
forcarCotacaoTodosCDs?: boolean
}
response: {
id?: string
nome?: string
prazo?: number
tabelaFreteId?: string
tipo?: string
valor?: number
centroDistribuicao?: number
produtos?: {
produtoVarianteId?: number
valor?: number
centroDistribuicaoId?: number
}[]
}[]
}
}
