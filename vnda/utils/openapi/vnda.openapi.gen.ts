
// deno-fmt-ignore-file
// deno-lint-ignore-file no-explicit-any ban-types ban-unused-ignore
//
// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// To generate this file: deno task start
//        


export interface OpenAPI {
"GET /api/v2/products/:productId/videos": {
response: {
id?: number
url?: string
embed_url?: string
thumbnail_url?: string
updated_at?: number
variant_ids?: number
}[]
}
"GET /api/v2/seo_data": {
searchParams: {
resource_type?: string
resource_id?: number
type?: string
code?: string
}
response: {
id: number
title?: string
description?: string
resource_type: string
resource_id: number
parent_id: number
}[]
}
/**
 * Permite autorizar operações usando o access_token e a senha do usuário
 */
"POST /api/v2/users/authorize": {
body: {
access_token: string
password: string
}
}
/**
 * Realiza o login do usuário a partir do email e da senha
 */
"POST /api/v2/users/login": {
body: {
email: string
password: string
}
response: User
}
/**
 * Realiza o logout do usuário a partir do access_token do mesmo
 */
"POST /api/v2/users/logout": {
body: {
/**
 * Token de validação de usuário logado
 * 
 * O `access_token` é gerado quando o usuário loga no Admin              
 */
access_token?: string
}
}
/**
 * Retorna os dados de um usuário pelo seu ID
 */
"GET /api/v2/users/:id": {
response: User
}
/**
 * Atualiza um usuário
 */
"PUT /api/v2/users/:id": {
body: {
email?: string
name?: string
role_name?: ("Agente" | "Gestor" | "Local")
password?: string
password_confirmation?: string
external_code?: string
phone_area?: string
phone?: string
tags?: string[]
}
}
/**
 * Retorna as versões da regra de bônus cadastrada
 */
"GET /api/v2/credits/rules/versions": {
response: {
event?: string
author?: string
created_at?: string
ip?: string
user_agent?: string
cart_id?: string
object_changes?: string
}
}
/**
 * Retorna as regras de bônus cadastradas
 */
"GET /api/v2/credits/rules": {
response: {
active: boolean
minimum_subtotal: number
bonus: number
delayed_for: number
valid_for: number
maximum_usage_factor: number
}
}
/**
 * Permite atualizar as regras de bônus
 */
"PUT /api/v2/credits/rules": {
body: {
/**
 * Percentual em cima do total do pedido que vai ser dado de bônus para o cliente
 */
bonus: number
/**
 * Número de dias em que o crédito começa a valer
 */
valid_in: number
/**
 * Número de dias para a expiração do crédito
 */
valid_for: number
/**
 * Valor mínimo do pedido para que o bônus possa ser transferido para o cliente
 */
minimum_subtotal?: number
/**
 * Percentual do subtotal do pedido que pode ser pago com o bônus
 */
maximum_usage_factor?: number
}
}
/**
 * Permite remover as regras de bônus, desativando o recurso
 */
"DELETE /api/v2/credits/rules": {

}
/**
 * Retorna os dados de um pedido usando o `code` ou `token`
 */
"GET /api/v2/orders/:code": {
searchParams: {
/**
 * Retorna as formas de entrega do pedido
 */
include_shipping_address?: boolean
}
response: Order
}
/**
 * Retorna uma lista de pedidos
 */
"GET /api/v2/orders": {
searchParams: {
/**
 * Retorna os resultados a partir desta data, no formato 'yyyy-mm-dd'
 */
start?: string
/**
 * Retorna os resultados até esta data, no formato 'yyyy-mm-dd'
 */
finish?: string
/**
 * Se "true" retorna somente os pedidos que tenham nota fiscal. Se "false" retorna somente os pedidos que não tenham nota fiscal
 */
invoiced?: boolean
/**
 * Número da página atual. Os dados de paginação estarão disponíveis, em formato JSON, no header X-Pagination no response da API, caso exista paginação
 */
page?: number
/**
 * Número máximo de registros que deve ser retornado por página
 */
per_page?: number
/**
 * Array com os códigos de cupons
 */
coupon_codes?: string[]
/**
 * Se "true" inclui o preço dos produtos customizados no total do pedido. Se "false" retorna o total do pedido sem a somatória do preço de produtos customizados.
 */
include_customizations_in_total?: boolean
}
response: Order[]
}
/**
 * Faz a captura do pagamento no adquirente
 * Apenas para pedidos pagos com cartão de crédito
 */
"POST /api/v2/orders/:code/capture": {
response: {

}
}
/**
 * Altera o status do pedido para "confirmado"
 */
"POST /api/v2/orders/:code/confirm": {
body: {
/**
 * Para cartão de crédito deve ser enviado OBRIGATORIAMENTE o retorno da requisição para "/api/v2/orders/{code}/capture"
 */
confirmation_data?: string
}
}
/**
 * Faz o estorno do pagamento no adquirente
 * Apenas para pedidos pagos com cartão de crédito
 */
"POST /api/v2/orders/:code/chargeback": {

}
/**
 * Altera o status do pedido para "cancelado"
 */
"POST /api/v2/orders/:code/cancel": {
body: {
/**
 * Deve ser enviado algo que comprove que o pagamento foi devolvido.
 * Para cartão de crédito deve ser enviado OBRIGATORIAMENTE o retorno da requisição para "/api/v2/orders/{code}/chargeback"
 */
cancelation_data?: string
}
response: {

}
}
/**
 * Altera o status do pacote para "enviado"
 */
"PATCH /api/v2/orders/:orderCode/packages/:packageCode/ship": {

}
/**
 * Altera o pacote para "entregue"
 */
"PATCH /api/v2/orders/:orderCode/packages/:packageCode/deliver": {

}
/**
 * Recebe uma lista JSON com os SKUs que devem ser atualizados. A atualização será executada em segundo plano em aproximadamente 1 minuto 
 */
"POST /api/v2/variants/quantity": {
body: {
sku: string
quantity: number
/**
 * Informe somente para atualizar o estoque de um local específico
 */
place_id?: number
}[]
}
/**
 * Atualiza o estoque de uma variante de um produto
 */
"POST /api/v2/variants/:sku/quantity": {
searchParams: {
quantity: number
}
response: {
status?: string
}
}
/**
 * Atualiza o estoque específico de um local
 */
"PATCH /api/v2/variants/:sku/inventories/:placeId": {
searchParams: {
quantity?: number
}
response: {
status?: string
}
}
/**
 * Permite listar as variantes de um produto
 */
"GET /api/v2/products/:productId/variants": {
response: Variant[]
}
/**
 * Permite criar uma variante
 */
"POST /api/v2/products/:productId/variants": {
body: {
sku: string
name?: string
quantity: number
main?: boolean
/**
 * Largura do produto, em centímetros
 */
width?: number
/**
 * Altura do produto, em centímetros
 */
height?: number
/**
 * Comprimento do produito, em centímetros
 */
length?: number
/**
 * Massa do produto, em gramas
 */
weight?: number
/**
 * Dias de manuseio da variante
 */
handling_days?: number
price: number
/**
 * Customização da variante
 */
custom_attributes?: {

}
min_quantity?: number
norder?: number
property1?: string
property2?: string
property3?: string
barcode?: string
}
response: {
id?: number
main?: boolean
available?: boolean
sku?: string
name?: string
slug?: string
min_quantity?: number
quantity?: number
/**
 * Quantidade de itens disponíveis
 */
stock?: number
/**
 * Customização da variante
 */
custom_attributes?: {

}
properties?: {

}
/**
 * Data e horário da última atualização
 */
updated_at?: string
price?: number
installments?: number[]
available_quantity?: number
/**
 * Massa do produto, em gramas
 */
weight?: number
/**
 * Largura do produto, em centímetros
 */
width?: number
/**
 * Altura do produto, em centímetros
 */
height?: number
/**
 * Comprimento do produito, em centímetros
 */
length?: number
/**
 * Dias de manuseio da variante
 */
handling_days?: number
inventories?: VariantInventory[]
sale_price?: number
image_url?: string
product_id?: number
norder?: number
}
}
/**
 * Permite remover uma variante
 */
"DELETE /api/v2/products/:productId/variants/:id": {

}
/**
 * @deprecated
 * Permite atualizar uma variante
 */
"PATCH /api/v2/products/:productId/variants/:id": {
body: {
sku: string
name?: string
quantity: number
main?: boolean
width?: number
height?: number
length?: number
weight?: number
handling_days?: number
price: number
custom_attributes?: {

}
min_quantity?: number
norder?: number
property1?: string
property2?: string
property3?: string
barcode?: string
quantity_sold?: number
}
}
/**
 * Permite determinar a ordem das variantes dentro de cada produto
 */
"POST /api/v2/variants/reorder": {
body: {
/**
 * A ordem dos elementos será replicada para as variantes
 */
ids: number[]
}
}
/**
 * Retorna um template usando o path dele
 */
"GET /api/v2/templates/:path": {
response: Template
}
/**
 * Remove um template usando o path dele
 */
"DELETE /api/v2/templates/:path": {

}
/**
 * Atualiza o conteúdo de um template usando o path dele
 */
"PATCH /api/v2/templates/:path": {
body: {
body?: string
}
}
/**
 * Retorna uma lista de templates
 */
"GET /api/v2/templates": {
response: Template[]
}
/**
 * Cria um novo template
 */
"POST /api/v2/templates": {
body: {
path: string
body?: string
}
response: Template
}
/**
 * Reativa um usuário que estiver desativado
 */
"POST /api/v2/users/:id/activate": {

}
/**
 * Desativa um usuário
 */
"POST /api/v2/users/:id/deactivate": {

}
/**
 * Lista os usuários
 */
"GET /api/v2/users": {
searchParams: {
/**
 * Incluir usuários desativados?
 */
include_inactive?: boolean
/**
 * Incluir todas as imagens dos produtos?
 */
include_images?: boolean
/**
 * Exibe somente os usuários com o código externo indicado
 */
external_code?: string
/**
 * Exibe somente os usuários com a função indicada
 */
role_name?: ("Agente" | "Gestor" | "Local")
/**
 * Filtra usuários que contenham o valor indicado no nome, telefone, email ou código externo
 */
term?: string
}
response: User1[]
}
/**
 * Cria um usuário
 */
"POST /api/v2/users": {
body: {
email?: string
name?: string
role_name?: ("Agente" | "Gestor" | "Local")
password?: string
password_confirmation?: string
external_code?: string
phone_area?: string
phone?: string
tags?: string[]
}
response: User
}
/**
 * Lista os usuários
 */
"GET /api/v2/users/tags": {
searchParams: {
/**
 * Exibe somente os usuários com a função indicada
 */
role_names?: ("Agente" | "Gestor" | "Local" | "Agente Social Selling")
}
response: {
tags?: string[]
}
}
/**
 * Retorna a lista de carrinhos ativos nos últimos 60 dias
 */
"GET /api/v2/carts": {
searchParams: {
/**
 * Número da página
 */
page?: number
/**
 * Quantidade de produtos por página
 */
per_page?: number
/**
 * Inclui os carrinhos sem telefone (não enviar o campo para não incluir)
 */
without_phones?: boolean
/**
 * Filtra os carrinhos que possuem tentativa de pagamento
 */
with_payments?: boolean
}
response: Cart[]
}
/**
 * Permite criar um carrinho
 */
"POST /api/v2/carts": {
body: ParametrosDeCarrinhoResumido
response: Cart1
}
/**
 * Permite retornar um carrinho
 */
"GET /api/v2/carts/:id": {
response: Cart1
}
/**
 * Permite criar um carrinho
 */
"POST /api/v2/carts/:id": {
body: {
agent?: string
zip?: string
client_id?: number
coupon_code?: string
/**
 * DEPRECATED: enviar o `client_id`
 */
email?: string
rebate_token?: string
}
response: Cart1
}
/**
 * Permite excluir um carrinho
 */
"DELETE /api/v2/carts/:id": {

}
/**
 * Permite atualizar os atributos de um carrinho
 */
"PATCH /api/v2/carts/:id": {
body: {
agent?: string
zip?: string
client_id?: number
/**
 * DEPRECATED: enviar o `client_id`
 */
email?: string
rebate_token?: string
}
}
/**
 * Permite calcular as parcelas referentes ao total do carrinho
 */
"GET /api/v2/carts/:id/installments": {
response: CartInstallment1[]
}
/**
 * Lista os locais
 */
"GET /api/v2/places": {
searchParams: {
/**
 * Filtra os locais for nome
 */
names?: string[]
/**
 * Filtra os locais que são/não são warehouse
 */
warehouse?: boolean
/**
 * Filtra os locais que contenham determinada categoria
 */
category?: string
/**
 * As lojas mais próximas da coordenada informada serão exibidas primeiro
 */
coordinates?: string
/**
 * As lojas mais próximas do CEP informado serão exibidas primeiro
 */
origin_zip_code?: string
}
response: Place[]
}
/**
 * Cria um local
 */
"POST /api/v2/places": {
body: {
name: string
address_line_1: string
address_line_2?: string
city: string
neighborhood?: string
zip?: string
home_page?: string
latitude?: number
longitude?: number
images?: string[]
description?: string
email: string
first_phone?: string
second_phone?: string
mobile_phone?: string
only_cash?: boolean
categories?: string[]
marker_url?: string
state?: string
opening_hours?: string
warehouse?: boolean
legal_name?: string
cnpj?: string
}
response: Place
}
/**
 * Remove um local
 */
"DELETE /api/v2/places/:id": {

}
/**
 * Atualiza um local
 */
"PATCH /api/v2/places/:id": {
body: {
name: string
address_line_1: string
address_line_2?: string
city: string
neighborhood?: string
zip?: string
home_page?: string
latitude?: number
longitude?: number
images?: string[]
description?: string
email: string
first_phone?: string
second_phone?: string
mobile_phone?: string
only_cash?: boolean
categories?: string[]
marker_url?: string
state?: string
opening_hours?: string
warehouse?: boolean
legal_name?: string
cnpj?: string
}
}
/**
 * Lista as notas fiscais
 */
"GET /api/v2/orders/:code/packages/:packageCode/invoices": {
response: Invoice[]
}
/**
 * Cria uma nota fiscal
 */
"POST /api/v2/orders/:code/packages/:packageCode/invoices": {
body: {
number: number
series?: number
issued_at?: string
key?: string
volumes?: number
}
response: Invoice
}
/**
 * Remove uma nota fiscal
 */
"DELETE /api/v2/orders/:code/packages/:packageCode/invoices/:number": {

}
/**
 * Atualiza uma nota fiscal
 */
"PATCH /api/v2/orders/:code/packages/:packageCode/invoices/:number": {
body: {
number: number
series?: number
issued_at?: string
key?: string
volumes?: number
}
}
/**
 * Será enviado por email um link para o cadastro da nova senha
 * O link tem validade de 24 horas
 */
"POST /api/v2/users/reset_password": {
body: {
email: string
}
}
/**
 * Cadastra a nova senha
 */
"PATCH /api/v2/users/reset_password": {
body: {
/**
 * Token pare renovação de senha enviado por email
 */
token: string
/**
 * Nova senha para o usuário
 */
password: string
/**
 * Confirmação da nova senha do usuário
 */
password_confirmation: string
}
}
/**
 * Retorna o endereço de entrega
 */
"GET /api/v2/orders/:code/shipping_address": {
response: {
id?: number
first_name: string
last_name: string
company_name?: string
email: string
/**
 * Serão retornados apenas os campos preenchidos
 */
documents?: {
cpf?: string
cnpj?: string
ie?: string
}
street_name: string
street_number: string
complement?: string
neighborhood: string
/**
 * Somente números
 */
first_phone_area: string
/**
 * Somente números
 */
first_phone: string
/**
 * Somente números
 */
second_phone_area?: string
/**
 * Somente números
 */
second_phone?: string
reference?: string
/**
 * Somente números
 */
zip: string
city: string
state: string
recipient_name?: string
}
}
/**
 * Lista os recebedores
 */
"GET /api/v2/payment_recipients": {
response: PaymentRecipient[]
}
/**
 * Cria um recebedor
 */
"POST /api/v2/payment_recipients": {
body: {
tag_id?: number
recipient_id?: number
percentage: number
active?: boolean
charge_processing_fee?: boolean
liable?: boolean
code?: string
place_id?: number
user_id?: number
/**
 * Indica se o frete deve ser incluído no split do pagamento
 */
include_shipping?: boolean
}
response: PaymentRecipient
}
/**
 * Retorna um recebedor
 */
"GET /api/v2/payment_recipients/:id": {
response: PaymentRecipient
}
/**
 * Remove um recebedor
 */
"DELETE /api/v2/payment_recipients/:id": {

}
/**
 * Atualiza um recebedor
 */
"PATCH /api/v2/payment_recipients/:id": {
body: {
tag_id?: number
recipient_id?: number
percentage?: number
active?: boolean
charge_processing_fee?: boolean
liable?: boolean
code?: string
place_id?: number
user_id?: number
/**
 * Indica se o frete deve ser incluído no split do pagamento
 */
include_shipping?: boolean
}
}
/**
 * Permite a listagem de recebíveis do usuário
 */
"GET /api/v2/users/:userId/payables": {
response: RecebiveisDoUsuario[]
}
/**
 * Lista os membros da audiência
 */
"GET /api/v2/audience_members": {
response: AudienceMember[]
}
/**
 * Permite criar um membro da audiência
 */
"POST /api/v2/audience_members": {
body: {
first_name?: (null | string)
last_name?: (null | string)
email: string
phone_area?: (null | string)
phone?: (null | string)
tags?: string[]
}
response: AudienceMember
}
/**
 * Permite remover um membro da audiência
 */
"DELETE /api/v2/audience_members/:id": {

}
/**
 * Permite alterar um membro da audiência
 */
"PATCH /api/v2/audience_members/:id": {
body: {
first_name?: string
last_name?: string
email?: string
phone_area?: string
phone?: string
tags?: string[]
}
}
/**
 * Lista os rastreios de um pacote de um pedido
 */
"GET /api/v2/orders/:orderCode/packages/:packageCode/trackings": {
response: {
id?: number
/**
 * Código de rastreio do pacote
 */
tracking_code: string
/**
 * Data e horário da última atualização do código de rastreio do pacote
 */
tracked_at?: string
/**
 * URL para rastreio do pedido com a transportadora
 */
url?: string
/**
 * Transportadora do pacote
 */
company?: string
}
}
/**
 * Adiciona um rastreio para um pacote de um pedido
 */
"POST /api/v2/orders/:orderCode/packages/:packageCode/trackings": {
body: {
/**
 * Código de rastreio
 */
code: string
/**
 * Transportadora
 */
company?: string
/**
 * Link de rastreamento
 */
url?: string
}
response: {
/**
 * Código de rastreio do pacote
 */
code: string
/**
 * Transportadora
 */
company?: string
/**
 * URL para rastreio do pacote na transportadora
 */
url?: string
}
}
/**
 * Remove um rastreio
 */
"DELETE /api/v2/orders/:orderCode/packages/:packageCode/trackings/:id": {

}
/**
 * Lista os itens de um carrinho
 */
"GET /api/v2/carts/:cartId/items": {
response: CartItem[]
}
/**
 * Permite criar um item do carrinho
 */
"POST /api/v2/carts/:cartId/items": {
body: Produto
response: CartItem
}
/**
 * Remove um item do carrinho
 */
"DELETE /api/v2/carts/:cartId/items/:id": {

}
/**
 * Atualiza um item do carrinho
 */
"PATCH /api/v2/carts/:cartId/items/:id": {
body: {
quantity?: number
place_id?: number
extra?: {

}
store_coupon_code?: string
}
}
/**
 * Permite adicionar itens em bulk ao carrinho
 */
"POST /api/v2/carts/:cartId/items/bulk": {
body: {
sku: string
quantity: number
extra?: {

}
place_id?: number
/**
 * Itens do carrinho
 */
items?: any[][]
minItems?: 0
}
response: CartItem[]
}
/**
 * Cria uma promoção
 */
"POST /api/v2/discounts": {
body: {
name: string
start_at: string
end_at?: string
valid_to?: ("store" | "cart")
description?: string
enabled?: boolean
email?: string
cpf?: string
tags?: string
}
response: Discount1
}
/**
 * Retorna uma promoção
 */
"GET /api/v2/discounts/:id": {
response: Discount1
}
/**
 * Remove uma promoção
 */
"DELETE /api/v2/discounts/:id": {

}
/**
 * Altera uma promoção
 */
"PATCH /api/v2/discounts/:id": {
body: {
name: string
start_at: string
end_at?: string
valid_to?: ("store" | "cart")
description?: string
enabled?: boolean
email?: string
cpf?: string
tags?: string
}
}
/**
 * Lista as regras de desconto de uma promoção
 */
"GET /api/v2/discounts/:discountId/rules": {
response: DiscountRule[]
}
/**
 * Cria uma regra de desconto
 */
"POST /api/v2/discounts/:discountId/rules": {
body: {
apply_to?: ("product" | "tag" | "subtotal" | "total" | "shipping")
amount_type?: ("R$" | "%")
amount?: number
product_id?: number
tag_name?: string
min_quantity?: number
shipping_method?: string
min_subtotal?: number
gift?: boolean
combinated_product_id?: number
client_tag?: string
shipping_rule?: string
gift_quantity?: number
agent_tag?: string
regions?: string[]
channel?: string[]
}
response: {
id?: number
amount?: number
apply_to?: ("product" | "tag" | "subtotal" | "total" | "shipping")
min_quantity?: number
type?: string
channel?: string[]
}
}
/**
 * Remove uma regra de desconto
 */
"DELETE /api/v2/discounts/:discountId/rules/:id": {

}
/**
 * Altera uma regra de desconto
 */
"PATCH /api/v2/discounts/:discountId/rules/:id": {
body: {
apply_to?: ("product" | "tag" | "subtotal" | "total" | "shipping")
amount_type?: ("R$" | "%")
amount?: number
product_id?: number
tag_id?: number
min_quantity?: number
shipping_method?: string
min_subtotal?: number
gift?: boolean
combinated_product_id?: number
client_tag?: string
shipping_rule?: string
gift_quantity?: number
agent_tag?: string
regions?: string[]
channel?: string[]
}
}
/**
 * Permite listar os cupons de desconto de uma promoção
 */
"GET /api/v2/discounts/:discountId/coupons": {
searchParams: {
/**
 * Filtra os cupons pelo campo uses_per_code
 */
uses_per_code?: number
}
response: Coupon[]
}
/**
 * Cria um cupom de desconto
 */
"POST /api/v2/discounts/:discountId/coupons": {
body: {
code?: string
uses_per_code?: number
uses_per_user?: number
referrer_email?: string
quantity?: number
user_id?: number
}
response: Coupon
}
/**
 * Remove um cupom de desconto
 */
"DELETE /api/v2/discounts/:discountId/coupons:id": {

}
/**
 * Atualiza um cupom de desconto
 */
"PATCH /api/v2/discounts/:discountId/coupons:id": {
body: {
/**
 * Caso deseje um uso ilimitado do cupom, o valor desse campo deverá ser 0
 */
uses_per_code?: number
/**
 * Caso deseje um uso ilimitado do cupom, o valor desse campo deverá ser 0
 */
uses_per_user?: number
}
}
/**
 * Lista os produtos
 */
"GET /api/v2/products": {
searchParams: {
/**
 * Delimita a quantidade de itens retornados
 */
limit?: number
/**
 * Número da página
 */
page?: number
/**
 * Quantidade de produtos por página
 */
per_page?: number
/**
 * Filtra pela referência
 */
reference?: string
/**
 * Filtra pelo ID dos produtos 
 */
ids?: string[]
/**
 * Filtra produtos que coném a tag
 */
tag?: string
/**
 * Filtra produtos alterados depois da data
 */
updated_after?: string
/**
 * Exibe os produtos cadastrados recentemente primeiro
 */
sort?: "newest"
/**
 * Inclui os produtos inativos na listagem
 */
include_inactive?: boolean
/**
 * Inclui na requisição se deseja que venham todas as imagens do produto
 */
include_images?: boolean
}
response: Product[]
}
/**
 * Cria um produto
 */
"POST /api/v2/products": {
body: SimpleProduct
response: {
id?: number
/**
 * Indica se o produto está ativo (`true`) ou inativo (`false`)
 */
active?: (boolean & string)
/**
 * Código de Referência do produto
 */
reference: string
/**
 * Nome do produto
 */
name: string
/**
 * Descrição do produto
 */
description?: string
/**
 * Lista de tags associadas ao produto
 */
tag_list?: string[]
slug?: string
url?: string
updated_at?: string
/**
 * Tipo de produto, entre:
 *   - `sample`: amostra
 *   - `subscription`: assinatura
 *   - `product`: produto em geral
 */
product_type?: ("product" | "sample" | "subscription")
}
}
/**
 * Retorna um produto
 */
"GET /api/v2/products/:id": {
searchParams: {
/**
 * Lista de cupons para calcular o desconto do produto
 */
coupon_codes?: string[]
/**
 * Se "true", inclui o nome do local nos inventários das variantes
 */
include_inventory_place?: string
/**
 * Se "true", inclui todas as imagens do produto
 */
include_images?: string
}
response: Product
}
/**
 * Remove um produto
 */
"DELETE /api/v2/products/:id": {

}
/**
 * Atualiza um produto
 */
"PATCH /api/v2/products/:id": {
body: {
name: string
description?: string
active?: boolean
reference: string
tag_list?: string
}
}
/**
 * Permite atualizar um produto pela referência
 */
"PATCH /api/v2/products/reference/:reference": {
body: {
reference: string
name: string
description?: string
active?: boolean
product_type?: ("product" | "sample" | "subscription")
}
}
/**
 * Recebe uma avaliação e recalcula a pontuação atual
 */
"POST /api/v2/products/:id/rate": {
searchParams: {
/**
 * Avaliação
 */
rate?: number
}
response: {
rating?: string
votes?: string
}
}
/**
 * Busca os produtos de acordo com os parâmetros definidos
 */
"GET /api/v2/products/search": {
searchParams: {
/**
 * Número da página
 */
page?: number
/**
 * Quantidade de produtos por página
 */
per_page?: number
/**
 * Filtra pelo ID dos produtos
 */
"ids[]"?: number[]
/**
 * Filtra produtos que contenham o termo
 */
term?: string
/**
 * Permite que o filtro 'term' realize filtragem de produtos por termo parcial
 */
wildcard?: boolean
/**
 * Filtra pelo nome da tag dentro de um tipo de tag. Exemplo, type_tags[cor]=verde
 */
"type_tags[]"?: {

}
/**
 * Operador lógico para o filtro de tag
 */
type_tags_operator?: ("and" | "or")
/**
 * Filtra pelo valor da propriedade 1
 */
"property1_values[]"?: string[]
/**
 * Operador lógico para o filtro de valor da propriedade 1
 */
property1_operator?: ("and" | "or")
/**
 * Filtra pelo valor da propriedade 2
 */
"property2_values[]"?: string[]
/**
 * Operador lógico para o filtro de valor da propriedade 2
 */
property2_operator?: ("and" | "or")
/**
 * Filtra pelo valor da propriedade 3
 */
"property3_values[]"?: string[]
/**
 * Operador lógico para o filtro de valor da propriedade 3
 */
property3_operator?: ("and" | "or")
/**
 * Filtra pelo preço de venda mínimo do produto
 */
min_price?: number
/**
 * Filtra pelo preço de venda máximo do produto
 */
max_price?: number
/**
 * Filtra pelo nome das tags, independente do tipo
 */
"tags[]"?: string[]
/**
 * Filtra pelo nome das tags, independente do tipo
 */
parent_tags?: string[]
/**
 * Filtra por produtos disponíveis
 */
show_only_available?: boolean
/**
 * Ordena o resultado da busca de produtos conforme a opção escolhida
 */
sort?: ("newest" | "oldest" | "lowest_price" | "highest_price")
}
response: {
results?: ProductSearch[]
aggregations?: {
min_price?: number
max_price?: number
types?: {

}
properties?: {
property1?: {
value?: string
count?: number
}[]
property2?: {
value?: string
count?: number
}[]
property3?: {
value?: string
count?: number
}[]
}
}
}
}
/**
 * Retorna uma variante pelo SKU
 */
"GET /api/v2/variants/:sku": {
response: Variant
}
/**
 * Permite atualizar uma variante pelo SKU
 */
"PATCH /api/v2/variants/:sku": {
body: {
sku: string
name?: string
quantity: number
main?: boolean
/**
 * Largura do produto, em centímetros
 */
width?: number
/**
 * Altura do produto, em centímetros
 */
height?: number
/**
 * Comprimento do produito, em centímetros
 */
length?: number
/**
 * Massa do produto, em gramas
 */
weight?: number
/**
 * Dias de manuseio da variante
 */
handling_days?: number
/**
 * Preço do item
 */
price: number
/**
 * Customização da variante
 */
custom_attributes?: {

}
min_quantity?: number
norder?: number
property1?: VariantProperty1
property2?: VariantProperty1
property3?: VariantProperty1
barcode?: string
/**
 * Quantidade de itens vendidos
 */
quantity_sold?: number
}
}
/**
 * Lista as imagens de uma variante passando o SKU da mesma na URL
 */
"GET /api/v2/products/:productId/variants/:sku/images": {
response: {
url: string
/**
 * Data e horário da última atualização da imagem do produto
 */
updated_at: string
}[]
}
/**
 * Lista as imagens de uma variante passando o SKU da mesma nos parâmetros
 */
"GET /api/v2/products/:productId/variants/images": {
response: {
url: string
/**
 * Data e horário da última atualização da imagem do produto
 */
updated_at: string
}[]
}
/**
 * Calcula o frete para uma determinada variante
 */
"GET /api/v2/variants/:sku/shipping_methods": {
searchParams: {
quantity: number
zip: string
}
response: {
name: string
value: string
price: number
description: string
delivery_days: number
value_needed_to_discount: (null | number)
shipping_method_id: (null | number)
notice: (null | string)
fulfillment_company: (null | string)
countries: (null | {
country?: string
price?: string
}[])
}[]
}
/**
 * Permite listar as tags
 */
"GET /api/v2/tags": {
searchParams: {
/**
 * Indica a quantidade de tags que devem ser listadas (page será ignorado)
 */
limit?: number
/**
 * Número da página
 */
page?: number
/**
 * Quantidade de resultados por página
 */
per_page?: number
/**
 * Exibe somente as tags com o tipo indicado
 */
type?: string
/**
 * Exibe somente as tags com um dos tipos indicados
 */
types?: string[]
/**
 * Exibe somente as tags com um dos nomes indicados
 */
names?: string[]
/**
 * Quando passado qualquer valor filtra as tags que contenham imagens
 */
images?: string
/**
 * Quando passado qualquer valor filtra as tags marcadas para serem exibidas no carrinho
 */
show_in_carts?: string
/**
 * Exibe somente as tags do produto indicado
 */
product_id?: number
/**
 * Texto livre que permite filtrar as tags pelo nome
 */
name?: string
/**
 * String no formato <field>,<direction> que determina o campo a ser ordenado e qual a ordem (asc,desc)
 */
sort?: ("name,asc" | "name,desc" | "type,asc" | "type,desc" | "title,asc" | "title,desc" | "products_count,asc" | "products_count,desc")
}
response: Tag[]
}
/**
 * Cria uma tag
 */
"POST /api/v2/tags": {
body: {
name: string
title?: string
/**
 * Equivalente ao subtítulo
 */
blurb?: string
description?: string
tag_type?: string
show_in_carts?: boolean
}
response: Tag
}
/**
 * Lista os tipos de tags usados em alguma tag
 */
"GET /api/v2/tags/types": {
searchParams: {
/**
 * Número da página
 */
page?: number
/**
 * Quantidade de resultados por página
 */
per_page?: number
}
response: string[]
}
/**
 * Retorna uma tag
 */
"GET /api/v2/tags/:name": {
response: Tag
}
/**
 * Remove uma tag
 */
"DELETE /api/v2/tags/:name": {

}
/**
 * Permite atualizar uma tag
 */
"PATCH /api/v2/tags/:name": {

}
/**
 * Retorna os dados de um cupom usando o seu código
 */
"GET /api/v2/coupon_codes/:code": {
response: {
id: number
code: string
discount_id: number
updated_at: string
}
}
/**
 * Cria um pedido no Paypal para que posteriormente possa receber um pagamento
 */
"POST /api/v2/carts/:cartId/payment/paypal": {
response: {
status?: string
id?: string
links?: {
href?: string
rel?: string
method?: string
}[]
}
}
/**
 * Retorna uma lista de clientes. Caso seja informado o parâmetro "email", então apenas o cliente com esse email será retornado
 */
"GET /api/v2/clients": {
searchParams: {
/**
 * Retorna somente o cliente com o email informado
 */
email?: string
/**
 * Número da página
 */
page?: number
/**
 * Registros por página
 */
per_page?: number
/**
 * Filtra os clientes pela menor data de atualização
 */
min_updated_at?: string
/**
 * Filtra os clientes pela maior data de atualização
 */
max_updated_at?: string
/**
 * Data de inicío da filtragem de clientes pela data de aniversário
 */
birthday_start?: string
/**
 * Data final da filtragem de clientes pela data de aniversário
 */
birthday_end?: string
/**
 * Filtra os clientes que possuem telefone
 */
has_phone?: string
/**
 * Filtra os clientes que possuem first name
 */
has_first_name?: string
/**
 * Filtra os clientes por vendedor
 */
user_id?: number
/**
 * Filtra os clientes que possuem o termo em alguns dos campos
 */
term?: string
/**
 * Ordena o resultado da busca de clientes conforme a opção escolhida
 */
sort?: ("name" | "birthdate")
}
response: Client[]
}
/**
 * Permite criar um cliente
 */
"POST /api/v2/clients": {
body: {
email?: string
first_name?: string
last_name?: string
birthdate?: string
gender?: ("M" | "F")
/**
 * separado por vírgula
 */
tags?: string
lists?: string[]
password?: string
password_confirmation?: string
terms?: boolean
}
response: {
id?: number
first_name?: string
last_name?: string
email?: string
gender?: string
phone_area?: string
phone?: string
cpf?: string
cnpj?: string
ie?: string
tags?: string
lists?: string[]
facebook_uid?: string
liked_facebook_page?: boolean
updated_at?: string
birthdate?: string
recent_address?: {
id?: string
first_name?: string
last_name?: string
company_name?: string
street_name?: string
street_number?: string
neighborhood?: string
complement?: string
reference?: string
city?: string
state?: string
zip?: string
first_phone_area?: string
first_phone?: string
second_phone_area?: string
second_phone?: string
email?: string
documents?: {
cpf?: string
cnpj?: string
}
}[]
}
}
/**
 * Permite retornar as informações do cliente
 * O auth_token do cliente pode ser informado no lugar do ID na URL
 */
"GET /api/v2/clients/:id": {
response: Client
}
/**
 * Permite remover um cliente
 */
"DELETE /api/v2/clients/:id": {

}
/**
 * Permite atualizar as informações do cliente
 */
"PATCH /api/v2/clients/:id": {
body: {
email?: string
first_name?: string
last_name?: string
birthdate?: string
gender?: ("M" | "F")
/**
 * separado por vírgula
 */
tags?: string
lists?: string[]
password?: string
password_confirmation?: string
terms?: boolean
}
}
/**
 * Retorna a lista de pedidos do cliente
 */
"GET /api/v2/clients/:id/orders": {
response: Order[]
}
/**
 * Lista os endereços do cliente utilizados nos pedidos que foram confirmados
 */
"GET /api/v2/clients/:id/addresses": {
searchParams: {
status?: string
}
response: Address
}
/**
 * Lista os endereços cadastrados pelo cliente
 */
"GET /api/v2/clients/:clientId/registered_addresses": {
response: Client1
}
/**
 * Permite criar um endereço do cliente
 */
"POST /api/v2/clients/:clientId/registered_addresses": {
body: {
street_name?: string
street_number?: string
complement?: string
neighborhood?: string
label?: string
zip?: string
reference?: string
}
response: Client1
}
/**
 * Delete o endereço cadastrado pelo cliente
 */
"DELETE /api/v2/clients/:clientId/registered_addresses/:id": {

}
/**
 * Permite atualizar um endereço do cliente
 */
"PATCH /api/v2/clients/:clientId/registered_addresses/:id": {
body: {
street_name?: string
street_number?: string
complement?: string
neighborhood?: string
label?: string
zip?: string
reference?: string
}
response: Client1
}
/**
 * Cria uma senha para o cliente e envia por email
 */
"POST /api/v2/clients/recover_password": {
searchParams: {
/**
 * Email do cliente
 */
email: string
/**
 * Preencher para pular o envio do email de senha para o cliente
 */
no_send?: string
}
response: Client
}
/**
 * Retorna o saldo de crétitos do cliente
 */
"GET /api/v2/clients/:id/credits": {
response: {
balance?: number
}
}
/**
 * Retorna as transfertências de crétidos realizadas
 */
"GET /api/v2/clients/:id/credits/transfers": {
response: {
from?: {
account?: string
amount?: number
}
to?: {
account?: string
amount?: number
}
}[]
}
/**
 * Lista os bônus do cliente que ainda não foram utilizados
 */
"GET /api/v2/clients/:id/bonuses": {
searchParams: {
/**
 * Número da página
 */
page?: string
/**
 * Registros por página
 */
per_page?: string
}
response: Bonus[]
}
/**
 * Solicita a remoção (esquecimento) dos dados pessoais de um cliente, de acordo com a LGPD
 */
"PATCH /api/v2/clients/:id/remove_personal_data": {

}
/**
 * Faz o login do cliente pelo token salvo no campo auth_token
 */
"GET /api/v2/auth/email/:token": {
response: {
id: number
token: string
}
}
/**
 * Faz o login do cliente por usuário e senha
 */
"POST /api/v2/auth/client": {
body: {
email: string
password: string
}
response: {
id: number
auth_token: string
}
}
/**
 * Faz o pagamento do carrinho usando a forma de pagamento informada
 */
"POST /api/v2/carts/:cartId/payment": {
body: {
/**
 * Meio de pagamento
 */
payment_method: "pix"
/**
 * Canal de venda do carrinho
 */
channel?: ("ecommerce" | "direct")
}
}
/**
 * Lista os menus
 */
"GET /api/v2/menus": {
searchParams: {
parent_id?: number
position?: string
}
response: Menu[]
}
/**
 * Cria um menu
 */
"POST /api/v2/menus": {
body: {
label: string
tooltip?: string
description?: string
type: string
url?: string
page_id?: number
parent_id?: number
position: string
new_position?: string
external?: boolean
tag_id?: number
}
response: Menu
}
/**
 * Retorna um menu
 */
"GET /api/v2/menus/:id": {
response: Menu
}
/**
 * Remove um menu
 */
"DELETE /api/v2/menus/:id": {

}
/**
 * Atualiza um menu
 */
"PATCH /api/v2/menus/:id": {
body: {
label: string
tooltip?: string
description?: string
type: string
url?: string
page_id?: number
parent_id?: number
position: string
new_position?: string
external?: boolean
tag_id?: number
}
}
/**
 * Lista as posições dos menus
 */
"GET /api/v2/menus/positions": {
response: string[]
}
/**
 * Reordena os menus na ordem em que seus ids são listados no request
 */
"POST /api/v2/menus/reorder": {
body: {
/**
 * A ordem dos elementos será replicada para os menus
 */
ids: number[]
}
}
/**
 * Retorna os menus em árvore, organizados pela posição
 */
"GET /api/v2/menus/tree": {
response: {
/**
 * Posição
 */
[k: string]: MenuTree[]
}
}
/**
 * Retorna uma mensagem do site
 */
"GET /api/v2/site_message": {
response: SiteMessage
}
/**
 * Remove uma mensagem do site
 */
"DELETE /api/v2/site_message": {

}
/**
 * Cria ou atualiza uma mensagem do site
 */
"PATCH /api/v2/site_message": {
body: {
title?: string
description?: string
call_to_action?: string
}
}
/**
 * Lista as imagens associadas a loja
 */
"GET /api/v2/shop/images": {
searchParams: {
/**
 * Número da página atual. Os dados de paginação estarão disponíveis, em formato JSON, no header X-Pagination no response da API, caso exista paginação
 */
page?: number
/**
 * Número máximo de registros que deve ser retornado por página
 */
per_page?: number
/**
 * Ordena o resultado da busca de produtos em ordem crescente de cadastro 
 */
sort?: "newest"
}
response: ShopAsset[]
}
/**
 * Permite cadastrar uma imagem
 */
"POST /api/v2/shop/images": {
body: {
position?: string
file_uid?: string
}
response: ShopAsset
}
/**
 * Permite remover uma imagem da loja
 */
"DELETE /api/v2/shop/images/:id": {

}
/**
 * Permite adicionar um atributo customizado de produto
 */
"POST /api/v2/shop/product_attributes": {
body: {
index: number
name: string
mandatory: boolean
}
response: ProductsAttributes
}
/**
 * Permite listar as personalizações
 */
"GET /api/v2/customizations": {
searchParams: {
/**
 * Filtra por produto
 */
product_id?: number
}
response: Customization[]
}
/**
 * Permite criar uma personalização
 */
"POST /api/v2/customizations": {
body: {
group_name: string
group_type: string
name: string
label?: string
image_uid?: string
image_name?: string
price?: number
quantity?: number
handling_days?: number
tag_id: number
sku?: string
pattern?: string
}
response: Customization
}
/**
 * Permite retornar uma personalização
 */
"GET /api/v2/customizations/:id": {
response: Customization
}
/**
 * Permite remover uma personalização
 */
"DELETE /api/v2/customizations/:id": {

}
/**
 * Permite alterar uma personalização
 */
"PATCH /api/v2/customizations/:id": {
body: {
group_name?: string
group_type?: string
name?: string
label?: string
image_uid?: string
image_name?: string
price?: string
quantity?: string
handling_days?: string
tag_id?: string
sku?: string
pattern?: string
}
}
/**
 * Permite listar os itens do pedido
 */
"GET /api/v2/orders/:orderId/items": {
response: OrderItems[]
}
/**
 * Permite listar as personalizações de cada item do pedido
 */
"GET /api/v2/orders/:orderId/items/:itemId/customizations": {
response: OrderItemCustomization[]
}
/**
 * Permite listar as personalizações de cada item do carrinho
 */
"GET /api/v2/carts/:cartId/items/:itemId/customizations": {
response: {
[k: string]: CartItemCustomization[]
}
}
/**
 * Permite remover uma customização do item do carrinho
 */
"DELETE /api/v2/carts/:cartId/items/:itemId/customizations": {

}
/**
 * Lista os mapeamentos
 */
"GET /api/v2/mappings": {
searchParams: {
/**
 * Número da página atual. Os dados de paginação estarão disponíveis, em formato JSON, no header X-Pagination no response da API, caso exista paginação
 */
page?: number
/**
 * Número máximo de registros que deve ser retornado por página
 */
per_page?: number
}
response: Mapping[]
}
/**
 * Cria um mapeamento
 */
"POST /api/v2/mappings": {
body: {
key: string
from?: string[]
to?: string
}
response: Mapping
}
/**
 * Retorna os dados de um mapeamento
 */
"GET /api/v2/mappings/:id": {
response: Mapping
}
/**
 * Remove um mapeamento
 */
"DELETE /api/v2/mappings/:id": {

}
/**
 * Atualiza um mapeamento
 */
"PATCH /api/v2/mappings/:id": {
body: {
key: string
from?: string[]
to?: string
}
}
/**
 * Retorna a lista de banners
 */
"GET /api/v2/banners": {
searchParams: {
/**
 * Booleano indicando para filtrar banners fora do prazo de validade
 */
only_valid?: string
/**
 * Booleano indicando para filtrar banners com prazo de validade expirados
 */
only_expired?: string
/**
 * Booleano indicando para filtrar banners agendados
 */
only_scheduled?: string
/**
 * Lista separada por vírgula com nomes de tags
 */
tag?: string
/**
 * Texto livre que permite filtrar os banners pelo título
 */
title?: string
/**
 * Booleano indicando para não fazer paginação dos resultados
 */
no_paginate?: string
/**
 * Número da página atual. Os dados de paginação estarão disponíveis, em formato JSON, no header X-Pagination no response da API, caso exista paginação
 */
page?: number
/**
 * Número máximo de registros que deve ser retornado por página
 */
per_page?: number
}
response: Banner[]
}
/**
 * Retorna os dados de um banner
 */
"GET /api/v2/banners/:id": {
response: Banner
}
/**
 * Retorna todos os banners disponíveis agrupados por tag
 */
"GET /api/v2/banners/all": {
response: {
[k: string]: SlimBanner[]
}
}
/**
 * Permite calcular o frete para pedidos internacionais
 */
"GET /api/v2/carts/:cartId/shipping_methods/intl": {
searchParams: {
/**
 * Código do país de destino
 */
country: string
}
response: {
"{package_label}"?: ShippingMethods1[]
}
}
/**
 * Lista as amostras disponíveis para determinado carrinho
 */
"GET /api/v2/carts/:cartId/samples": {
response: {
id: number
image_url: (null | string)
name: string
reference: string
updated_at: string
url: string
variants: {
id: number
main: boolean
sku: string
name: string
updated_at: string
image_url: (null | string)
product_id: number
norder: number
}[]
}
}
/**
 * Retorna o endereço de entrega
 */
"GET /api/v2/carts/:cartId/shipping_address": {
response: EnderecoDeEnvio
}
/**
 * Adiciona um endereço de entrega no carrinho
 */
"POST /api/v2/carts/:cartId/shipping_address": {
body: EnderecoDeEnvio1
response: CartItem
}
/**
 * Associa um código de cupom ao carrinho
 */
"POST /api/v2/carts/:cartId/coupon_code": {
body: {
/**
 * Código do cupom
 */
code: string
}
response: {
/**
 * Código do cupom
 */
code: string
discount: number
rebate_token: string
rebate_discount: number
}
}
/**
 * Lista todos os channels usados nos pedidos criados
 */
"GET /api/v2/orders/channels": {
response: string[]
}
/**
 * Lista todos os estados usados nos pedidos criados
 */
"GET /api/v2/orders/states": {
response: string[]
}
/**
 * Retorna o preço do produto e das variantes
 */
"GET /api/v2/products/:productId/price": {
searchParams: {
/**
 * Array com os códigos de cupons
 */
coupon_codes?: string[]
}
response: {
available: boolean
on_sale: boolean
price: number
sale_price: number
intl_price: number
discount_rule?: any
/**
 * @minItems 1
 */
installments: [ProductInstallment, ...(ProductInstallment)[]]
/**
 * Data e horário da última atualização
 */
updated_at: string
/**
 * @minItems 1
 */
variants: [ProductPriceVariant, ...(ProductPriceVariant)[]]
}
}
/**
 * Lista as imagens do produto
 */
"GET /api/v2/products/:productId/images": {
response: ProductImage[]
}
/**
 * Cria uma imagem do produto
 */
"POST /api/v2/products/:productId/images": {
body: {
file_url: string
/**
 * IDs da variantes associadas a imagem
 */
variant_ids?: number[]
}
response: ProductImage[]
}
/**
 * Deleta uma imagem do produto
 */
"DELETE /api/v2/products/:productId/images/:id": {

}
/**
 * Reordena as imagens do produto
 */
"POST /api/v2/products/:productId/images/reorder": {
body: {
ids: number[]
}
}
/**
 * Associa a imagem com uma variante
 */
"POST /api/v2/products/:productId/images/:id/add_variant": {
body: {
variant_id: number
}
}
/**
 * Remove a associação da imagem com uma variante
 */
"POST /api/v2/products/:productId/images/:id/remove_variant": {
body: {
variant_id: number
}
}
/**
 * Retorna uma lista de pacotes de um pedido
 */
"GET /api/v2/orders/:orderCode/packages": {
response: Package[]
}
/**
 * Indica para a API que dererminado evento aconteceu e que ela deve disparar as ações relacionadas
 */
"POST /api/v2/events": {
searchParams: {
/**
 * Evento que ocorreu
 */
event_type: string
/**
 * ID do recurso selacionado ao evento
 */
id: string
/**
 * IP do usuário
 */
browser_ip?: string
/**
 * User agent do usuário
 */
user_agent?: string
}
}
/**
 * Permite a listagem de recebíveis (comissão) de um usuário vendedor da loja, quando ocorre split de pagamentos via Pagarme 
 */
"GET /api/v2/users/:id/payables": {
response: RecebiveisDoUsuario[]
}
/**
 * Retorna um produto pelo código identificador (`product_id`)
 */
"GET /api/v2/products/:productId": {
searchParams: {
/**
 * Array com os códigos de cupons
 */
coupon_codes?: string[]
/**
 * Selecione `true` para incluir o nome do local de armazenamento no retorno da requisição
 */
include_inventory_place?: string
/**
 * Selecione `true` para incluir todas as imagens do produto
 */
include_images?: string
}
response: Product
}
/**
 * Remove um produto do catálogo pelo código indentificador (`product_id`)
 */
"DELETE /api/v2/products/:productId": {

}
/**
 * Atualiza informações de um produto no catálogo pelo código identificador (`product_id`)
 */
"PATCH /api/v2/products/:productId": {
body: SimpleProduct1
}
/**
 * Recebe uma avaliação e recalcula a pontuação atual
 */
"POST /api/v2/products/:productId/rate": {
searchParams: {
/**
 * Avaliação
 */
rate?: number
}
response: {
/**
 * Média das avaliações
 */
rating?: string
/**
 * Número de avaliações recebidas
 */
votes?: string
}
}
/**
 * Permite remover uma variante
 */
"DELETE /api/v2/products/:productId/variants/:variantId": {

}
/**
 * @deprecated
 * Atualiza as informações de um variante
 */
"PATCH /api/v2/products/:productId/variants/:variantId": {
body: {
sku: string
name?: string
quantity: number
main?: boolean
/**
 * Massa do produto, em gramas
 */
weight?: number
/**
 * Largura do produto, em centímetros
 */
width?: number
/**
 * Altura do produto, em centímetros
 */
height?: number
/**
 * Comprimento do produito, em centímetros
 */
length?: number
/**
 * Dias de manuseio da variante
 */
handling_days?: number
price: number
/**
 * Customização da variante
 */
custom_attributes?: {

}
min_quantity?: number
norder?: number
property1?: {
name?: string
value?: string
defining?: boolean
}
property2?: {
name?: string
value?: string
defining?: boolean
}
property3?: {
name?: string
value?: string
defining?: boolean
}
barcode?: string
/**
 * Quantidade de itens vendidos
 */
quantity_sold?: number
}
}
/**
 * Deleta uma imagem do produto
 */
"DELETE /api/v2/products/:productId/images/:imageId": {

}
/**
 * Associa a imagem com uma variante
 */
"POST /api/v2/products/:productId/images/:imageId/add_variant": {
body: {
variant_id: number
}
}
/**
 * Remove a associação da imagem com uma variante
 */
"POST /api/v2/products/:productId/images/:imageId/remove_variant": {
body: {
variant_id: number
}
}
/**
 * Retorna as informações de um carrinho pelo seu `id` ou `token`
 */
"GET /api/v2/carts/:cartId": {
response: Cart1
}
/**
 * Permite excluir um carrinho
 */
"DELETE /api/v2/carts/:cartId": {

}
/**
 * Permite atualizar os atributos de um carrinho
 */
"PATCH /api/v2/carts/:cartId": {
body: ParametrosDeCarrinhoResumido
}
/**
 * Remove um item do carrinho
 */
"DELETE /api/v2/carts/:cartId/items/:itemId": {

}
/**
 * Atualiza um item do carrinho
 */
"PATCH /api/v2/carts/:cartId/items/:itemId": {
body: Produto1
}
/**
 * Atualiza o método para o envio dos itens do carrinho
 */
"PATCH /api/v2/carts/:cartId/shipping_methods/:valueMethod": {
body: ShippingMethods1
}
/**
 * Calculo os método de envio disponíveis para o carrinho
 */
"GET /api/v2/carts/:cartId/shipping_methods": {
response: {
"{package_label}"?: ShippingMethods1[]
}
}
/**
 * Calcula as parcelas de pagamento para valor total do carrinho
 */
"GET /api/v2/carts/:cartId/installments": {
response: CartInstallment1[]
}
/**
 * Retorna os dados de um pedido pelo `code` ou `token` do pedido
 */
"GET /api/v2/orders/:orderCode": {
searchParams: {
/**
 * Inclui as formas de entrega do pedido
 */
include_shipping_address?: boolean
}
response: Order
}
/**
 * Atualiza o campo de dados extras de um pedido pelo `code` do pedido
 */
"PATCH /api/v2/orders/:orderCode": {
body: {
/**
 * Campo para registro de observações, chave ou valores necessários
 */
extra?: {

}
}
}
/**
 * Retorna a *timeline* de eventos ocorridos em um pedido
 */
"GET /api/v2/orders/:orderCode/events": {
response: {

}[]
}
/**
 * Retorna a avaliação que o cliente fez em um pedido
 */
"GET /api/v2/orders/:orderCode/reviews": {

}
/**
 * Retorna os descontos de um pedido pelo `code` ou `token` do pedido
 */
"GET /api/v2/orders/:orderCode/discounts": {
response: {

}[]
}
/**
 * Retorna o endereço de envio pelo `code` do pedido
 */
"GET /api/v2/orders/:orderCode/shipping_address": {
response: EnderecoDeEnvio1
}
/**
 * Atualiza dados de endereço do pedido
 */
"PATCH /api/v2/orders/:orderCode/shipping_address": {
body: EnderecoDeEnvio1
}
/**
 * Captura o pagamento no adquirente para pedidos com pagamento por cartão de crédito.
 */
"POST /api/v2/orders/:orderCode/capture": {
response: {

}
}
/**
 * Confirma um pedido
 */
"POST /api/v2/orders/:orderCode/confirm": {
body: {
/**
 * Parâmetro para incluir o retorno [da requisição de captura do pagamento](https://developers.vnda.com.br/reference/post-api-v2-orders-capture).
 * Esse parâmetro é **obrigatório** para pedidos com pagamento por cartão de crédito. 
 */
confirmation_data?: string
}
}
/**
 * Faz o estorno do pagamento no adquirente do cartão de crédito
 * Operação válida para pedidos pagos com cartão de crédito
 */
"POST /api/v2/orders/:orderCode/chargeback": {

}
/**
 * Altera o status do pedido para `cancelado`
 */
"POST /api/v2/orders/:orderCode/cancel": {
body: {
/**
 * Parâmetro para incluir uma confirmação de estorno de pagamento para o cliente.
 * Para pedidos com pagamento via cartão de crédito, é obrigatório que nesse campo seja incluído no parâmetro o retorno [da requisição de estorno de pagamento](https://developers.vnda.com.br/reference/post-api-v2-orders-order-code-chargeback). 
 */
cancelation_data?: string
}
response: {

}
}
/**
 * Retorna os itens de um pedido pelo código do pedido
 */
"GET /api/v2/orders/:orderCode/items": {
response: ProdutoEmUmPedido1[][]
}
/**
 * Lista as personalizações de um item do pedido pelos códigos do item e do pedido
 */
"GET /api/v2/orders/:orderCode/items/:itemId/customizations": {
response: OrderItemCustomization[]
}
/**
 * Retorna os pedidos de um cliente pelo seu `id_client`
 */
"GET /api/v2/clients/:idClient/orders": {
response: Order[]
}
/**
 * Retorna as notas fisicais de um pacote do pedido
 */
"GET /api/v2/orders/:orderCode/packages/:packageCode/invoices": {
response: Invoice[]
}
/**
 * Inclui nota fiscal no pacote de um pedido
 */
"POST /api/v2/orders/:orderCode/packages/:packageCode/invoices": {
body: Invoice
response: Invoice
}
/**
 * Remove uma nota fiscal
 */
"DELETE /api/v2/orders/:orderCode/packages/:packageCode/invoices/:number": {

}
/**
 * Atualiza uma nota fiscal
 */
"PATCH /api/v2/orders/:orderCode/packages/:packageCode/invoices/:number": {
body: Invoice
}
/**
 * Permite listar os pedidos pendentes do feed
 */
"GET /api/feed/orders": {
searchParams: {
/**
 * Selecione `true` para incluir o endereço na resposta
 */
include_shipping_address?: true
/**
 * Filtra os pedidos por status
 */
status?: ("received" | "confirmed" | "canceled")
}
response: Order[]
}
/**
 * Permite marcar os pedidos para que eles sejam filtrados da listagem do feed
 */
"POST /api/feed/orders": {
body: {
orders?: {
/**
 * Código do pedido
 */
code: string
}[]
}
}
}
/**
 * Modelo que representa um usuário na API
 */
export interface User {
/**
 * Código identificador do usuário
 */
id?: number
/**
 * Email do usuário
 */
email: string
/**
 * Token de validação de usuário logado (`access_token`)
 *       
 * O `access_token` é gerado quando o usuário loga no Admin
 */
access_token?: string
/**
 * Nome do usuário
 */
name?: string
/**
 * Identificador de usuários administradores
 * 
 * Esse atributo retorna `true` para um usuário administrador do ambiente de loja
 */
admin?: boolean
/**
 * Identificador de usuários que atualizaram a senha inicial
 * 
 * Esse atributo retorna `true` para um usuário que já redefiniu sua senha pelo menos uma vez
 */
renew_password?: boolean
/**
 * Código da função do usuário na loja:
 * 
 *   - Agente: `0`;
 *   - Gestor: `1`;
 *   - Local: `2`;
 *   - Agente Social Selling: `3`.
 */
role?: number
/**
 * Tags para agrupamento de usuários
 * As tags podem ser são utilizadas para direcionar promoções para determinados usuários, organizar os recebedores em uma divisão de pagamentos, definir regras de comissão
 */
tags?: string[]
/**
 * Código externo do Vendedor. Esse campo é destinado para cadastrar um código de vendedor já existente em outro sistema.
 */
external_code?: string
/**
 * Código de  Discagem Direta a Distância (DDD) do telefone do usuário
 */
phone_area?: string
/**
 * Número de telefone do usuário
 */
phone?: string
/**
 * Data de inclusão do usuário no Admin
 */
created_at?: string
/**
 * Data de atualização das informações do usuário
 */
updated_at?: string
}
/**
 * Modelo que representa um pedido na API
 */
export interface Order {
/**
 * Desconto por bônus do cliente
 */
rebate_discount: number
/**
 * Código identificador `ID` do desconto por bônus
 */
rebate_token?: string
/**
 * Código identificador `ID` do cliente
 */
user_id?: number
/**
 * Data da última atualização do pedido
 */
updated_at: string
/**
 * Lista com os códigos de rastreio dos pacotes do pedido
 */
tracking_code_list?: string[]
/**
 * Código de rastreio do pacote
 */
tracking_code?: string
/**
 * Valor final do pedido
 */
total: number
token: string
taxes: number
/**
 * Valor da soma dos itens do pedido, desconsiderando descontos e frete.
 */
subtotal: number
/**
 * Status do pedido
 */
status: ("received" | "confirmed" | "canceled")
payment_due_date?: string
slip_url?: string
slip_token?: string
slip_due_date?: string
slip: boolean
shipping_tracked_at?: string
shipping_price?: number
shipping_label?: string
/**
 * Data e horário de envio do pedido
 */
shipped_at: string
/**
 * Data e horário de recebimento do pedido
 */
received_at: string
payment_tid?: string
/**
 * Método de pagamento do pedido
 */
payment_method: string
payment_gateway: string
payment_authorization: string
/**
 * Data e horário do pagamento do pedido
 */
paid_at: string
items?: ProdutoEmUmPedido[]
/**
 * Parcelas do pagamento parcelado
 */
installments?: number
/**
 * Código identificador do pedido
 */
id?: number
/**
 * Campo de observações do pedido
 */
extra?: {

}
expected_delivery_date?: string
/**
 * Email do cliente
 */
email: string
/**
 * Valor do desconto aplicado no pedido
 */
discount_price: number
deposit: boolean
delivery_type?: string
delivery_message?: string
/**
 * Dias para entrega
 */
delivery_days?: number
/**
 * Data de entrega do pedido
 */
delivered_at: string
/**
 * Código de cupom do pedido
 */
coupon_code: string
/**
 * Data e horário de confirmação do pedido
 */
confirmed_at: string
/**
 * Código do pedido
 */
code: string
/**
 * Código identificador (`ID`) do cliente
 */
client_id: number
/**
 * Canal de venda que originou o pedido
 */
channel: ("ecommerce" | "direct")
/**
 * Código identificador do carrinho que originou o pedido
 */
cart_id: number
/**
 * Data de validade do cartão de crédito
 */
card_validity: string
/**
 * Número do cartão de crédito
 */
card_number: string
/**
 * Retorna `true` se o método de pagamento do pedido é por cartão de crédito.
 */
card: boolean
/**
 * Data e horário do cancelamento do pedido
 */
canceled_at?: string
/**
 * Endereço IP de origem do pedido
 */
browser_ip: string
/**
 * Agente do pedido
 */
agent?: string
affiliate_tag?: string
pix_qr_code?: string
/**
 * Código de autorização do pagamento
 */
payment_authorization_code?: string
/**
 * Indica se o pedido gerou bônus
 */
bonus_granted?: boolean
has_split?: boolean
/**
 * Indica se o pedido foi pago usando o Pix
 */
pix: boolean
ame_qr_code?: string
/**
 * Indica se o pedido foi pago usando o Ame
 */
ame: boolean
antifraud_assurance?: string
minItems?: 0
}
/**
 * Modelo de produto em um pedido
 */
export interface ProdutoEmUmPedido {
extra: {

}
height?: number
id?: number
length?: number
original_price?: number
package?: string
picture_url?: string
place_city?: string
place_id?: number
place_name?: string
price?: number
product_id: number
product_name: string
quantity: number
reference: string
sku: string
total: number
variant_id: number
variant_name: string
weight: number
width: number
barcode?: string
}
/**
 * Modelo que representa uma variante na API
 */
export interface Variant {
/**
 * Código identificador da variante
 */
id?: number
/**
 * Identifica se é a variante principal do produto. Para `true` a variante é principal e `false` a variante é secundária
 */
main?: boolean
/**
 * Identifica se a variante está ativa em `true` e desativa em `false`
 */
available?: boolean
/**
 * Código SKU da variante
 */
sku?: string
/**
 * Nome da variante
 */
name?: string
/**
 * Slug da URL da variante
 */
slug?: string
/**
 * Quantidade mínima para venda
 */
min_quantity?: number
/**
 * Quantidade física
 */
quantity?: number
quantity_sold?: number
/**
 * Quantidade disponível
 */
stock?: number
/**
 * Customização da variante
 */
custom_attributes?: {

}
/**
 * [Atributos](https://developers.vnda.com.br/docs/atributos-de-produto) da variante
 */
properties?: {
property1?: VariantProperty
property2?: VariantProperty
property3?: VariantProperty
}
/**
 * Data e horário da última atualização da variante
 */
updated_at?: string
/**
 * Preço do item
 */
price?: number
/**
 * Relação das parcelas para pagamento do item parcelado
 */
installments?: number[]
/**
 * Unidades reservadas e não reservadas do item
 */
available_quantity?: number
/**
 * Massa do produto, em gramas
 */
weight?: number
/**
 * Largura do produto, em centímetros
 */
width?: number
/**
 * Altura do produto, em centímetros
 */
height?: number
/**
 * Comprimento do produito, em centímetros
 */
length?: number
/**
 * Dias de manuseio da variante
 */
handling_days?: number
/**
 * Relação de itens por estoque (armazém)
 */
inventories?: VariantInventory[]
/**
 * Preço promocional
 */
sale_price?: number
/**
 * Preço internacional
 */
intl_price?: number
/**
 * URL da imagem da variante
 */
image_url?: string
/**
 * Código identificador `ID` do produto
 */
product_id?: number
/**
 * Código de barra da variante
 */
barcode?: string
norder?: number
required?: []
additionalProperties?: never
}
/**
 * Modelo que representa uma propriedade customizada na API
 */
export interface VariantProperty {
/**
 * Indica se a variante possui uma definição (`true`) ou se a variante não possui (`false`)
 */
defining: boolean
/**
 * Nome da propriedade
 */
name: string
/**
 * Valor da propriedade
 */
value?: string
}
/**
 * Model que representa um inventory da variante
 */
export interface VariantInventory {
id: number
name: string
place_id: number
/**
 * Preço do item
 */
price: number
quantity: number
/**
 * Quantidade de itens vendidos
 */
quantity_sold: number
/**
 * Preço promocional
 */
sale_price: number
slug: string
}
/**
 * Modelo que representa um template na API
 */
export interface Template {
path: string
body?: string
updated_at: string
}
/**
 * Modelo que representa um usuário na API
 */
export interface User1 {
/**
 * Código identificador do usuário
 */
id?: number
/**
 * Email do usuário
 */
email: string
/**
 * Token de validação de usuário logado (`access_token`)
 *       
 * O `access_token` é gerado quando o usuário loga no Admin
 */
access_token?: string
/**
 * Nome do usuário
 */
name?: string
/**
 * Identificador de usuários administradores
 * 
 * Esse atributo retorna `true` para um usuário administrador do ambiente de loja
 */
admin?: boolean
/**
 * Identificador de usuários que atualizaram a senha inicial
 * 
 * Esse atributo retorna `true` para um usuário que já redefiniu sua senha pelo menos uma vez
 */
renew_password?: boolean
/**
 * Código da função do usuário na loja:
 * 
 *   - Agente: `0`;
 *   - Gestor: `1`;
 *   - Local: `2`;
 *   - Agente Social Selling: `3`.
 */
role?: number
/**
 * Tags para agrupamento de usuários
 * As tags podem ser são utilizadas para direcionar promoções para determinados usuários, organizar os recebedores em uma divisão de pagamentos, definir regras de comissão
 */
tags?: string[]
/**
 * Código externo do Vendedor. Esse campo é destinado para cadastrar um código de vendedor já existente em outro sistema.
 */
external_code?: string
/**
 * Código de  Discagem Direta a Distância (DDD) do telefone do usuário
 */
phone_area?: string
/**
 * Número de telefone do usuário
 */
phone?: string
/**
 * Data de inclusão do usuário no Admin
 */
created_at?: string
/**
 * Data de atualização das informações do usuário
 */
updated_at?: string
}
/**
 * Modelo que representa um carrinho na API
 */
export interface Cart {
id: number
email: string
shipping_method: string
items_count: number
quotation_responses_count: number
payment_responses_count: number
has_payment_responses: boolean
has_phone: boolean
updated_at: string
}
/**
 * Parâmetros criação e atualização de carrinho
 */
export interface ParametrosDeCarrinhoResumido {
/**
 * Agente que criou o carrinho
 */
agent?: string
/**
 * Código de Endereçamento Postal (CEP) do destinatário do pedido
 */
zip?: string
/**
 * Código identificador `ID` do cliente
 */
client_id?: number
/**
 * Código identificador `ID` do desconto do carrinho
 */
coupon_code?: string
/**
 * @deprecated
 * Email do cliente
 */
email?: string
/**
 * Token do desconto
 */
rebate_token?: string
/**
 * Id do agente
 */
user_id?: number
}
/**
 * Modelo que representa um carrinho na API
 */
export interface Cart1 {
/**
 * Agente que criou o carrinho
 */
agent: string
/**
 * Código identificador `ID` do endereço de cobrança do carrinho
 */
billing_address_id: number
/**
 * Canal de venda que originou o carrinho
 */
channel: string
/**
 * Código identificador `ID` do cliente
 */
client_id: number
/**
 * Código identificador `ID` do carrinho
 */
code: string
/**
 * Código de cupom de desconto utilizado no carrinho
 */
coupon_code: string
discount: Discount
/**
 * @deprecated
 * Valor do desconto
 */
discount_price: number
/**
 * Campo para registro de observações, chave ou valores necessários
 */
extra: {

}
/**
 * Código identificador `ID` do carrinho
 */
id: number
/**
 * Itens do carrinho
 */
items: CartItem[]
/**
 * Unidades do item no carrinho
 */
items_count: number
/**
 * Código identificador `ID` do endereço de entrega do carrinho
 */
shipping_address_id: number
/**
 * Método de envio selecionado para o carrinho, como por exemplo: normal, expressa e agendada.
 */
shipping_method: string
/**
 * Lista com as entregas disponíveis para os itens do carrinho de acordo com o endereço de envio
 */
shipping_methods: ShippingMethods[]
/**
 * Preço de envio
 */
shipping_price: number
/**
 * Valor da soma dos itens do carrinho, sem considerar descontos de cupom, carrinho e frete.
 */
subtotal: number
/**
 * Token do carrinho
 */
token: string
/**
 * Valor final do carrinho
 */
total: number
/**
 * Valor total do carrinho para pagamento por depósito
 */
total_for_deposit: number
/**
 * Valor total do carrinho para pagamento por boleto
 */
total_for_slip: number
/**
 * Valor do carrinho para pagamento por PIX
 */
total_for_pix: number
/**
 * Data da última atualização do carrinho
 */
updated_at: string
/**
 * Código identificador `ID` do desconto por bônus
 */
rebate_token: string
/**
 * Desconto por bônus do cliente
 */
rebate_discount: number
/**
 * Número de dias para manuseio dos itens
 */
handling_days: number
/**
 * Valor de desconto de promoções aplicadas ao subtotal do carrinho
 */
subtotal_discount: number
/**
 * Valor de desconto de promoções aplicadas ao valor total do carrinho
 */
total_discount: number
installments?: CartInstallment
/**
 * Código identificador `ID` do cliente
 */
user_id?: string
minItems?: 0
}
/**
 * Promoção aplicada no carrinho
 */
export interface Discount {
id: number
name: string
description: string
facebook: boolean
valid_to: ("store" | "cart")
/**
 * DEPRECATED
 */
seal_uid: string
/**
 * DEPRECATED
 */
seal_url: string
start_at: string
end_at: string
email: string
cpf: string
tags: string
}
/**
 * Modelo que representa um item no carrinho na API
 */
export interface CartItem {
/**
 * Unidades disponíveis do produto
 */
available_quantity: number
/**
 * Número de dias para a entrega
 */
delivery_days: number
/**
 * Campo para registro de observações, chave ou valores necessários
 */
extra: {

}
/**
 * Código identificador do local do produto
 */
place_id: number
/**
 * Preço do produto
 */
price: number
/**
 * Preço internacional
 */
intl_price: number
/**
 * Código identificador `ID` do produto
 */
product_id: number
/**
 * Nome do produto
 */
product_name: string
/**
 * Código de referência do produto
 */
product_reference: string
/**
 * URL do produto no e-commerce
 */
product_url: string
/**
 * Unidades do produto no carrinho
 */
quantity: number
/**
 * Identificador do seller
 */
seller: string
/**
 * Nome do seller
 */
seller_name: string
/**
 * Valor do produto sem descontos e promoções
 */
subtotal: number
/**
 * Valor total do produto
 */
total: number
/**
 * Data da última atualização do carrinho
 */
updated_at: string
/**
 * Atributos da variante
 */
variant_attributes: {

}
/**
 * Quantidade miníma de variantes para compra
 */
variant_min_quantity: number
/**
 * Nome da variante
 */
variant_name: string
/**
 * Preço da variante
 */
variant_price: number
/**
 * Preço internacional da variante
 */
variant_intl_price: number
variant_properties: Variant1
/**
 * Código SKU da [Variante](https://developers.vnda.com.br/docs/cat%C3%A1logo-de-produtos#produto-atributo-e-variante)
 */
variant_sku: string
/**
 * Código identificador do item no carrinho
 */
id?: string
/**
 * Tipo de produto
 */
product_type?: string
/**
 * URL da imagem da variante
 */
image_url?: string
}
/**
 * Modelo que representa uma variante na API
 */
export interface Variant1 {
/**
 * Código identificador da variante
 */
id?: number
/**
 * Identifica se é a variante principal do produto. Para `true` a variante é principal e `false` a variante é secundária
 */
main?: boolean
/**
 * Identifica se a variante está ativa em `true` e desativa em `false`
 */
available?: boolean
/**
 * Código SKU da variante
 */
sku?: string
/**
 * Nome da variante
 */
name?: string
/**
 * Slug da URL da variante
 */
slug?: string
/**
 * Quantidade mínima para venda
 */
min_quantity?: number
/**
 * Quantidade física
 */
quantity?: number
quantity_sold?: number
/**
 * Quantidade disponível
 */
stock?: number
/**
 * Customização da variante
 */
custom_attributes?: {

}
/**
 * [Atributos](https://developers.vnda.com.br/docs/atributos-de-produto) da variante
 */
properties?: {
property1?: VariantProperty
property2?: VariantProperty
property3?: VariantProperty
}
/**
 * Data e horário da última atualização da variante
 */
updated_at?: string
/**
 * Preço do item
 */
price?: number
/**
 * Relação das parcelas para pagamento do item parcelado
 */
installments?: number[]
/**
 * Unidades reservadas e não reservadas do item
 */
available_quantity?: number
/**
 * Massa do produto, em gramas
 */
weight?: number
/**
 * Largura do produto, em centímetros
 */
width?: number
/**
 * Altura do produto, em centímetros
 */
height?: number
/**
 * Comprimento do produito, em centímetros
 */
length?: number
/**
 * Dias de manuseio da variante
 */
handling_days?: number
/**
 * Relação de itens por estoque (armazém)
 */
inventories?: VariantInventory[]
/**
 * Preço promocional
 */
sale_price?: number
/**
 * Preço internacional
 */
intl_price?: number
/**
 * URL da imagem da variante
 */
image_url?: string
/**
 * Código identificador `ID` do produto
 */
product_id?: number
/**
 * Código de barra da variante
 */
barcode?: string
norder?: number
required?: []
additionalProperties?: never
}
/**
 * Modelo que representa as formas de entrega na API
 */
export interface ShippingMethods {
package: string
name: string
label: string
price: string
delivery_days: string
delivery_type: string
description: string
short_description: string
fulfillment_company: string
}
/**
 * Parcelas para pagamento parcelado
 */
export interface CartInstallment {
/**
 * Identifica se há (`true`) ou não (`false`) juros no parcelamento
 */
interest: boolean
/**
 * Taxa de juros do parcelamento
 */
interest_rate: number
/**
 * Número de parcelas
 */
number: number
/**
 * Valor de cada parcela
 */
price: number
/**
 * Valor total das parcelas
 */
total: number
}
/**
 * Modelo que representa uma parcela do total de um carrinho
 */
export interface CartInstallment1 {
/**
 * Identifica se há (`true`) ou não (`false`) juros no parcelamento
 */
interest: boolean
/**
 * Taxa de juros do parcelamento
 */
interest_rate: number
/**
 * Número de parcelas
 */
number: number
/**
 * Valor de cada parcela
 */
price: number
/**
 * Valor total das parcelas
 */
total: number
}
/**
 * Modelo que representa um local na API
 */
export interface Place {
id?: number
name: string
address_line_1: string
address_line_2?: string
city: string
neighborhood?: string
zip?: string
home_page?: string
latitude?: number
longitude?: number
images?: string[]
description?: string
email: string
first_phone?: string
second_phone?: string
mobile_phone?: string
only_cash?: boolean
categories?: string[]
marker_url?: string
state?: string
created_at?: string
updated_at?: string
opening_hours?: string
warehouse?: boolean
legal_name?: string
cnpj?: string
}
/**
 * Modelo que representa uma nota fiscal na API
 */
export interface Invoice {
/**
 * Número da nota fiscal
 */
number: number
/**
 * Número de série da nota fiscal
 */
series?: number
/**
 * Data e horário da criação da nota fiscal
 */
issued_at?: string
/**
 * Chave da nota fiscal
 */
key?: string
volumes?: number
}
/**
 * Modelo que representa um recebedor na API
 */
export interface PaymentRecipient {
id: number
percentage: number
active?: boolean
charge_processing_fee?: boolean
liable?: boolean
code?: string
name?: string
tag_name?: string
place_id?: number
recipient_id: number
tag_id?: number
user_id?: number
/**
 * Indica se o frete deve ser incluído no split do pagamento
 */
include_shipping?: boolean
}
/**
 * Valores que o usuário possui a receber
 */
export interface RecebiveisDoUsuario {
type?: string
status?: string
amount?: number
fee?: number
installment?: number
credit_date?: string
order_date?: string
transaction_id?: number
}
/**
 * Modelo que representa um membro do público
 */
export interface AudienceMember {
id?: number
first_name?: string
last_name?: string
email: string
phone_area?: string
phone?: string
tags?: string[]
}
/**
 * Modelo de carcaterística de produto para item no carrinho
 */
export interface Produto {
sku: string
quantity: number
extra?: {

}
place_id?: number
store_coupon_code?: string
customizations?: any[]
}
/**
 * Modelo que representa uma promoção na API
 */
export interface Discount1 {
/**
 * Código identificador `ID` do desconto
 */
id?: number
/**
 * Nome do desconto ou promoção
 */
name: string
/**
 * Descrição do desconto
 */
description?: string
/**
 * Data de início da regra do desconto
 */
start_at: string
/**
 * Data de fim da regra do desconto
 */
end_at?: string
/**
 * Indica se o desconto está habilitado (`true`) ou desabilitado (`false`)
 */
enabled: boolean
/**
 * Em desuso
 */
facebook?: boolean
/**
 * Indica a regra da promoção: se o desconto é aplicado na vitrine ou no carrinho da loja 
 */
valid_to?: string
/**
 * Email do cliente, no caso de promoções direcionadas para clientes específicos
 */
email?: string
/**
 * Cadastro de Pessoa Física (CPF) do cliente, no caso de promoções direcionadas para clientes específicos
 */
cpf?: string
/**
 * Tag de agrupamento de promoção
 */
tags?: string
}
/**
 * Modelo que representa uma regra de desconto na API
 */
export interface DiscountRule {
id?: number
amount: number
type: ("fixed" | "percentage")
apply_to: string
min_quantity: number
product?: {
id?: number
reference?: string
name?: string
}
tag?: {
name?: string
}
combined_product?: {
id?: number
reference?: string
name?: string
}
min_subtotal: number
shipping_method?: string
shipping_rule?: ("any" | "all")
regions?: string[]
agent_tag?: string
channel?: string[]
}
/**
 * Modelo que representa um cupom de desconto
 */
export interface Coupon {
id?: number
code?: string
uses_per_code?: number
uses_per_user?: number
referrer_email?: string
user_id?: number
updated_at?: string
orders_count?: number
}
/**
 * Modelo que representa um produto na API
 */
export interface Product {
/**
 * Código identificador `ID` do priduto
 */
id?: number
/**
 * Indica se o produto está ativo (`true`) ou invativo (`false`)
 */
active?: boolean
/**
 * Indica se o produto está disponível (`true`) ou indisponível (`false`)
 */
available?: boolean
category_tags?: {
/**
 * Tipo de tag
 */
tag_type?: string
/**
 * Nome da tag
 */
name?: string
/**
 * Título da tag
 */
title?: string
}[]
/**
 * Descrição do produto
 */
description?: string
/**
 * Código de desconto
 */
discount_id?: number
/**
 * Descrição do produto em HTML
 */
html_description?: string
/**
 * URL da imagem do produto
 */
image_url?: string
/**
 * Relação das parcelas para pagamento parcelado
 */
installments?: number[]
/**
 * Quantidade mínima para venda do produto
 */
min_quantity?: string
/**
 * Nome do produto
 */
name?: string
/**
 * Indica se o produto está em promoção (`true`) ou não (`false`)
 */
on_sale?: boolean
/**
 * Descrição simplificada
 */
plain_description?: string
/**
 * Preço do item
 */
price?: number
/**
 * Média de avaliação do produto
 */
rating?: {
rating?: number
votes?: number
}
/**
 * Código de referência do produto
 */
reference?: string
/**
 * Preço promocional
 */
sale_price?: number
/**
 * slug do produto
 */
slug?: string
/**
 * Lista de tags que o produto é associado
 */
tag_names?: string[]
/**
 * Data e horário da última atualização do produto
 */
updated_at?: string
/**
 * URL do produto
 */
url?: string
/**
 * Variantes do produto
 */
variants?: {
"{id}"?: ProductVariant
}[]
/**
 * Regras de desconto de uma promoção
 */
discount_rule: {
type: ("fixed" | "percentage")
amount: number
}
/**
 * Imagens do produto
 */
images?: {
/**
 * id do produto
 */
id?: number
/**
 * Url do produto
 */
url?: string
/**
 * Data e horário da última atualização do produto
 */
updated_at?: string
variant_ids?: {

}[]
}[]
}
/**
 * Modelo que representa uma variante na API
 */
export interface ProductVariant {
available: boolean
available_quantity: number
/**
 * Customização da variante
 */
custom_attributes: {

}
/**
 * Dias de manuseio da variante
 */
handling_days: number
height: number
id?: number
/**
 * URL da imagem da variante
 */
image_url: string
installments: number[]
inventories?: ProductVariantInventory[]
length: number
main: boolean
/**
 * Quantidade mínima para venda
 */
min_quantity: number
/**
 * Nome da variante
 */
name: string
norder: number
/**
 * Preço do item
 */
price: number
product_id: number
/**
 * [Atributos](https://developers.vnda.com.br/docs/atributos-de-produto) da variante
 */
properties: {
property1?: VariantProperty
property2?: VariantProperty
property3?: VariantProperty
}
quantity: number
/**
 * Quantidade de itens vendidos
 */
quantity_sold?: number
/**
 * Preço promocional
 */
sale_price: number
sku: string
slug: string
/**
 * Quantidade de itens disponíveis
 */
stock: number
/**
 * Data e horário da última atualização da variante
 */
updated_at: string
/**
 * Massa do produto, em gramas
 */
weight: number
/**
 * Largura do produto, em centímetros
 */
width: number
required?: []
additionalProperties?: never
}
/**
 * Modelo que representa um inventory da variante na API
 */
export interface ProductVariantInventory {
/**
 * Código identificador `ID` do inventário
 */
id: number
/**
 * Nome do inventário
 */
name?: string
/**
 * Código identificador do local
 */
place_id: number
/**
 * Nome do local
 */
place_name?: string
/**
 * Preço do item
 */
price: number
/**
 * Quantidade de itens no inventário
 */
quantity: number
/**
 * Quantidade de itens vendidos
 */
quantity_sold: number
/**
 * Preço promocional
 */
sale_price: number
/**
 * Slug do inventário
 */
slug: string
/**
 * Data e horário da última atualização da variante no inventário
 */
updated_at: string
/**
 * Código da variante
 */
variant_id: number
/**
 * Data de criação do inventário
 */
created_at: string
}
/**
 * Modelo simplificado de um produto para atualização e criação
 */
export interface SimpleProduct {
name: string
description?: string
active?: boolean
reference: string
tag_list?: string
}
/**
 * Modelo que representa um produto retornado via busca no Elasticsearch
 */
export interface ProductSearch {
id: number
active: boolean
available: boolean
subscription: boolean
slug: string
reference: string
reference_lowercase: string
name: string
description: string
image_url: string
url: string
tags: {
name: string
title: string
subtitle: string
description: string
importance: number
type: string
image_url: string
}[]
/**
 * Preço do item
 */
price: number
on_sale: boolean
/**
 * Preço promocional
 */
sale_price: number
intl_price: number
discount_id: number
discount_rule: {
type: ("fixed" | "percentage")
amount: number
}
discount: {
name: string
description: string
/**
 * Em desuso
 */
facebook: boolean
valid_to: string
}
images: {
sku: string
url: string
}[]
variants: VariantProductSearch[]
installments: ProductInstallment[]
created_at: string
/**
 * Data e horário da última atualização do produto
 */
updated_at: string
}
/**
 * Modelo que representa uma variante retornada via busca no Elasticsearch
 */
export interface VariantProductSearch {
id: number
sku: string
sku_lowercase: string
name: string
full_name: string
main: boolean
available: boolean
image_url: string
/**
 * Preço do item
 */
price: number
/**
 * Preço promocional
 */
sale_price: number
intl_price: number
installments: ProductInstallment[]
/**
 * Quantidade de itens disponíveis
 */
stock: number
quantity: number
/**
 * Quantidade de itens vendidos
 */
quantity_sold: number
/**
 * Quantidade mínima para venda
 */
min_quantity: number
available_quantity: number
/**
 * Customização da variante
 */
custom_attributes: {

}
/**
 * [Atributos](https://developers.vnda.com.br/docs/atributos-de-produto) da variante
 */
properties: {
property1?: VariantPropertyProductSearch
property2?: VariantPropertyProductSearch
property3?: VariantPropertyProductSearch
}
inventories: {
name: string
slug: string
available: boolean
/**
 * Preço do item
 */
price: number
/**
 * Preço promocional
 */
sale_price: number
quantity: number
/**
 * Quantidade de itens vendidos
 */
quantity_sold: number
place: {
id: number
name: string
}
}[]
/**
 * Dias de manuseio da variante
 */
handling_days: number
barcode: string
/**
 * Massa do produto, em gramas
 */
weight: number
/**
 * Largura do produto, em centímetros
 */
width: number
/**
 * Altura do produto, em centímetros
 */
height: number
/**
 * Comprimento do produito, em centímetros
 */
length: number
required?: []
additionalProperties?: never
}
/**
 * Modelo que representa uma parcela
 */
export interface ProductInstallment {
number: number
/**
 * Preço do item
 */
price: number
interest: boolean
interest_rate: number
total: number
}
/**
 * Modelo que representa uma propriedade de uma variante quando retornada via Elasticsearch
 */
export interface VariantPropertyProductSearch {
name: string
value: string
defining: boolean
}
/**
 * Modelo que representa uma propriedade de uma variante
 */
export interface VariantProperty1 {
/**
 * Nome da propriedade
 */
name: string
/**
 * Valor da propriedade
 */
value: string
/**
 * Indica se a variante possui uma definição (`true`) ou se a variante não possui (`false`)
 */
defining: boolean
}
/**
 * Modelo que representa uma tag na API
 */
export interface Tag {
name: string
title?: string
subtitle?: string
description?: string
type?: string
products_count?: number
image_url?: string
updated_at?: string
}
/**
 * Modelo que representa um cliente na API
 */
export interface Client {
id?: number
first_name?: string
last_name?: string
email?: string
gender?: string
phone_area?: string
phone?: string
document_type?: ("CPF" | "CNPJ")
/**
 * Número de documento cadastrado pelo cliente
 */
document_number?: string
cpf?: string
cnpj?: string
ie?: string
tags?: string
lists?: string[]
facebook_uid?: string
liked_facebook_page?: boolean
updated_at?: string
birthdate?: string
recent_address?: {
id?: string
first_name?: string
last_name?: string
company_name?: string
street_name?: string
street_number?: string
neighborhood?: string
complement?: string
reference?: string
city?: string
state?: string
zip?: string
first_phone_area?: string
first_phone?: string
second_phone_area?: string
second_phone?: string
email?: string
documents?: {
cpf?: string
cnpj?: string
}
}[]
auth_token?: string
last_confirmed_order_at?: string
received_orders_count?: number
confirmed_orders_count?: number
canceled_orders_count?: number
renew_password?: boolean
}
/**
 * Modelo que representa um endereço na API
 */
export interface Address {
id?: number
first_name?: string
last_name?: string
company_name?: string
email?: string
documents?: {
cpf?: string
cnpj?: string
}
street_name?: string
street_number?: string
complement?: string
neighborhood?: string
first_phone_area?: string
first_phone?: string
second_phone_area?: string
second_phone?: string
reference?: string
zip?: string
city?: string
state?: string
recipient_name?: string
}
/**
 * Modelo que representa os endereços cadastrados pelo cliente na API
 */
export interface Client1 {
id?: number
street_name?: string
street_number?: string
complement?: string
neighborhood?: string
label?: string
zip?: string
city?: string
state?: string
reference?: string
client_id?: number
}
/**
 * Modelo que representa um bônus na API
 */
export interface Bonus {
amount?: number
token?: string
valid_from?: string
valid_thru?: string
created_at?: string
updated_at?: string
}
/**
 * Modelo que representa um menu na API
 */
export interface Menu {
id?: number
label?: string
title?: string
description?: string
url?: string
external?: boolean
parent_id?: number
tag_id?: number
tag_name?: string
page_id?: number
page_slug?: string
items_count?: number
updated_at?: string
tooltip?: string
children?: Menu[]
image_url?: string
simple_url?: string
position?: string
norder?: number
type?: string
}
/**
 * Modelo que representa um menu na API quando retornado pela ação de menu em árvore
 */
export interface MenuTree {
id?: number
title?: string
description?: string
external?: boolean
url?: string
tag_id?: number
page_id?: number
items_count?: number
children?: MenuTree[]
updated_at?: string
tooltip?: string
image_url?: string
simple_url?: string
norder?: number
}
/**
 * Modelo que representa as mensagens do site na API
 */
export interface SiteMessage {
id?: number
title?: string
description?: string
call_to_action?: string
created_at?: string
updated_at?: string
}
/**
 * Modelo que representa as imagens da loja na API
 */
export interface ShopAsset {
id?: number
position?: string
file_uid?: string
file_name?: string
updated_at?: string
}
/**
 * Modelo que representa um atributo customizado de produto
 */
export interface ProductsAttributes {
index?: number
name?: string
mandatory?: boolean
updated_at?: string
}
/**
 * Modelo que representa uma customização
 */
export interface Customization {
id?: number
group_name?: string
name?: string
label?: string
image_uid?: string
image_name?: string
price?: number
intl_price?: number
quantity?: number
handling_days?: number
tag_id?: number
sku?: string
pattern?: string
}
/**
 * Modelo que representa a lista de itens do pedido
 */
export interface OrderItems {
id?: number
variant_id?: number
product_id?: number
quantity?: number
price?: number
weight?: number
width?: number
height?: number
length?: number
extra?: {
customization?: string
}
picture_url?: string
reference?: string
sku?: string
product_name?: string
variant_name?: string
original_price?: string
place_id?: string
place_name?: number
place_city?: number
total?: number
package?: number
has_customizations?: number
barcode?: number
}
/**
 * Modelo que representa uma personalização de item do pedido na API
 */
export interface OrderItemCustomization {
/**
 * Código identificador `ID` da personalização
 */
id: number
/**
 * Número de tipos diferentes de personalizações em produtos do pedido
 */
number: number
/**
 * Grupo em que se enquadra a personalização
 */
group_name: string
/**
 * Nome do produto
 */
name: string
/**
 * Preço do produto
 */
price: number
/**
 * Preço internacional
 */
intl_price: number
/**
 * Dias de manuseio do produto
 */
handling_days: number
/**
 * Código SKU da variante de produto
 */
sku: string
}
/**
 * Modelo que representa uma personalização de item do carrinho na API
 */
export interface CartItemCustomization {
/**
 * Código identificador do produto
 */
id: number
group_name: string
name: string
number: number
/**
 * Preço unitário
 */
price: number
/**
 * Preço internacional
 */
intl_price: number
/**
 * Número de dias para manuseio
 */
handling_days: number
/**
 * Código SKU do produto
 */
sku: string
}
/**
 * Modelo que representa um mapeamento na API
 */
export interface Mapping {
id?: number
key: string
from?: string[]
to?: string
created_at?: string
updated_at?: string
}
/**
 * Modelo que representa um banner na API
 */
export interface Banner {
big_thumb: string
color: string
description: string
end_at: string
external: boolean
file_name: string
file_uid: string
html_description: string
id: number
norder: number
plain_description: string
small_thumb: string
start_at: string
subtitle: string
tag: string
title: string
updated_at: string
url: string
}
/**
 * Modelo que representa um banner simplificado na API
 */
export interface SlimBanner {
id: number
tag: string
title: string
subtitle: string
description: string
url: string
external: boolean
start_at: string
end_at: string
file_url: string
norder: number
color: string
updated_at: string
}
/**
 * Modelo que representa as formas de entrega na API
 */
export interface ShippingMethods1 {
/**
 * Nome do tipo de entrega, como por exemplo Normal, Expressa e Agendada
 */
name: string
/**
 * Identificador do método de envio
 */
value: string
/**
 * Preço de envio
 */
price: number
/**
 * Descrição do tipo de envio e prazo
 */
description: string
/**
 * Número em dias do prazo de envio
 */
delivery_days: number
/**
 * Valor restante da compra para que o carrinho fique elegível para frete grátis
 */
value_needed_to_discount?: number
/**
 * Código identificador `ID` do tipo de envio
 */
shipping_method_id: number
/**
 * Mensagem ou observação sobre a forma de envio
 */
notice?: string
/**
 * Empresa responsável pelo envio
 */
fulfillment_company: string
}
/**
 * Modelo de endereço de envio para carrinho e pedido
 */
export interface EnderecoDeEnvio {
id?: number
first_name: string
last_name: string
company_name?: string
email: string
/**
 * Serão retornados apenas os campos preenchidos
 */
documents?: {
cpf?: string
cnpj?: string
ie?: string
}
street_name: string
street_number: string
complement?: string
neighborhood: string
/**
 * Somente números
 */
first_phone_area: string
/**
 * Somente números
 */
first_phone: string
/**
 * Somente números
 */
second_phone_area?: string
/**
 * Somente números
 */
second_phone?: string
reference?: string
/**
 * Somente números
 */
zip: string
city: string
state: string
recipient_name?: string
}
/**
 * Modelo de endereço de envio para carrinho e pedido
 */
export interface EnderecoDeEnvio1 {
/**
 * Nome do cliente
 */
first_name?: string
/**
 * Sobrenome do cliente
 */
last_name?: string
/**
 * Nome da empresa (para clientes jurídicos)
 */
company_name?: string
/**
 * Email do cliente
 */
email?: string
/**
 * Código de Discagem Direta à Distância (DDD)
 */
first_phone_area?: string
/**
 * Telefone do cliente
 */
first_phone?: string
/**
 * Código de Discagem Direta à Distância (DDD)
 */
second_phone_area?: string
/**
 * Telefone do cliente
 */
second_phone?: string
/**
 * Nome do recebedor
 */
recipient_name?: {
[k: string]: any
}
/**
 * Logradouro
 */
street_name?: string
/**
 * Número
 */
street_number?: string
/**
 * Complemento
 */
complement?: string
/**
 * Bairro
 */
neighborhood?: string
/**
 * Ponto de referência
 */
reference?: string
/**
 * Código de Endereçamento Postal (CEP)
 */
zip: string
documents?: {
/**
 * Cadastro de Pessoa Física
 */
cpf?: string
/**
 * Registro Geral
 */
rg?: string
/**
 * Cadastro Nacional de Pessoas Jurídicas
 */
cnpj?: string
/**
 * Inscrição Estadual
 */
ie?: string
}[]
}
/**
 * Modelo que representa os preços de uma variante
 */
export interface ProductPriceVariant {
/**
 * Define se a variante do produto é a principal
 */
main: boolean
/**
 * Código SKU da variante
 */
sku: string
/**
 * Preço do item
 */
price: number
on_sale: boolean
/**
 * Preço promocional
 */
sale_price: number
intl_price: number
available: boolean
/**
 * [Atributos](https://developers.vnda.com.br/docs/atributos-de-produto) da variante
 */
properties: {
property1?: VariantProperty1
property2?: VariantProperty1
property3?: VariantProperty1
}
/**
 * Quantidade de itens disponíveis
 */
stock: number
installments: ProductInstallment[]
required?: []
additionalProperties?: never
}
/**
 * Modelo que representa uma imagem de um produto
 */
export interface ProductImage {
/**
 * Código identificador `ID` da imagem
 */
id: number
/**
 * URL da imagem
 */
url: string
/**
 * Data e horário da última atualização da imagem do produto
 */
updated_at: string
/**
 * Códigos das variantes que utilizam a imagem
 */
variant_ids: number[]
}
/**
 * Modelo que representa um pacote na API
 */
export interface Package {
actual_shipping_method: string
/**
 * Código identificador do pacote
 */
code: string
/**
 * Data de entrega do pacote
 */
delivered_at: string
delivered_email_sent_at: string
/**
 * Número de dias para entrega
 */
delivery_days: number
/**
 * Tipo de envio do pacote
 */
delivery_type: string
/**
 * Quantidade de dias úteis para entrega
 */
delivery_work_days: number
/**
 * Transportadora
 */
fulfillment_company: string
/**
 * Status de envio
 */
fulfillment_status: ("waiting" | "shipped" | "delivered")
integrated: boolean
invoiced: boolean
label: string
properties: {

}
quoted_shipping_price: number
shipped_at: string
shipped_email_sent_at: string
shipping_label: string
shipping_name: string
shipping_price: number
total: number
/**
 * Data e horário da última atualização do código de rastreio do pacote
 */
tracked_at: string
/**
 * Código de rastreio do pacote
 */
tracking_code: string
required?: []
additionalProperties?: never
}
/**
 * Modelo simplificado de um produto para atualização e criação
 */
export interface SimpleProduct1 {
/**
 * Código de Referência do produto
 */
reference: string
/**
 * Nome do produto
 */
name: string
/**
 * Descrição do produto
 */
description?: string
/**
 * Indica se o produto está ativo (`true`) ou invativo (`false`)
 */
active?: boolean
/**
 * Tags associadas ao produto
 */
tag_list?: string
/**
 * Tipo de produto
 */
product_type?: ("product" | "sample" | "subscription")
}
/**
 * Modelo de carcaterística de produto para item no carrinho
 */
export interface Produto1 {
/**
 * Código SKU da variante do produto
 */
sku?: string
/**
 * Unidades do produto disponíveis fisicamente
 */
quantity?: number
/**
 * Campo para registro de observações, chave ou valores necessários
 */
extra?: {

}
/**
 * Código identificador do local do produto
 */
place_id?: number
/**
 * Código de cupom
 */
store_coupon_code?: string
/**
 * [Personalização](http://ajuda.vnda.com.br/pt-BR/articles/1763398-funcionalidades-produtos-personalizados) do produto
 */
customizations?: {
/**
 * [Personalização](http://ajuda.vnda.com.br/pt-BR/articles/1763398-funcionalidades-produtos-personalizados) incluídas no Admin da loja. 
 * Se por exemplo a customização do produto é a cor, o parâmetro para a requisição deve ser `Color` ao invés de `CUstomization`.  
 */
Customization?: string
}[]
}
/**
 * Modelo de produto em um pedido
 */
export interface ProdutoEmUmPedido1 {
/**
 * Dados extra do produto
 */
extra: {

}
/**
 * Altura do produto, em centímetros.
 */
height?: number
/**
 * código identificador do produto
 */
id?: number
/**
 * Comprimento do produito, em centímetros.
 */
length?: number
/**
 * Preço original
 */
original_price?: number
/**
 * Pacote do produto
 */
package?: string
/**
 * URL da imagem do produto
 */
picture_url?: string
/**
 * Cidade que o produto está
 */
place_city?: string
/**
 * Código identificador do local do produto
 */
place_id?: number
/**
 * Nome do local do produto
 */
place_name?: string
/**
 * Preço do produto
 */
price?: number
product_id: number
product_name: string
/**
 * Unidades do produto
 */
quantity: number
/**
 * Código de referência do produto
 */
reference: string
/**
 * Código SKU da variante do produto
 */
sku: string
/**
 * Valor total do produto
 */
total: number
/**
 * Código identificador da variante do produto
 */
variant_id: number
/**
 * Nome da variante do produto
 */
variant_name: string
/**
 * Massa do produto, em gramas
 */
weight: number
/**
 * Largura do produto, em centímetros
 */
width: number
/**
 * Código de barras do produto
 */
barcode?: string
/**
 * Indica se o produto possui customização.
 */
has_customizations?: boolean
}
