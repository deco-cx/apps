{
  "openapi": "3.0.0",
  "info": {
    "title": "API",
    "version": "v2",
    "contact": {
      "name": "Dúvidas e suporte para API, envie um e-mail para",
      "email": "produto@vnda.com.br"
    },
    "description": "API versão 2 da Vnda E-commerce.\nSaiba mais no nosso [Guia de API](https://developers.vnda.com.br/docs/chave-de-acesso-e-requisicoes)",
    "license": {
      "name": "API Vnda",
      "url": "https://www.vnda.com.br/"
    }
  },
  "servers": [
    {
      "url": "https://api.vnda.com.br",
      "description": "Servidor do ambiente de produção"
    },
    {
      "url": "https://api.sandbox.vnda.com.br",
      "description": "Servidor do ambiente de testes"
    }
  ],
  "paths": {
    "/api/v2/seo_data": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "resource_type": {
                        "type": "string"
                      },
                      "resource_id": {
                        "type": "integer"
                      },
                      "parent_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "resource_type",
                      "resource_id",
                      "parent_id"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "resource_type",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer"
            },
            "name": "resource_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "type",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "code",
            "in": "query"
          }
        ]
      }
    },
    "/api/v2/users/authorize": {
      "post": {
        "summary": "User authorize",
        "responses": {
          "200": {
            "description": "Retornado quando o access token do usuário ainda é válido e a senha está correta"
          },
          "401": {
            "description": "Retornado quando o access_token não é mais válido e/ou a senha está incorreta"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "access_token": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "type": "object",
                "required": [
                  "access_token",
                  "password"
                ]
              }
            }
          },
          "description": ""
        },
        "description": "Permite autorizar operações usando o access_token e a senha do usuário",
        "parameters": [],
        "operationId": "post-api-v2-users-authorize",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/api/v2/users/login": {
      "post": {
        "summary": "Faz o login do usuário",
        "responses": {
          "200": {
            "description": "Quando o usuário e a senha são válidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User.v1"
                }
              }
            }
          },
          "401": {
            "description": "Quando o usuário e/ou a senha não são válidos ou não foram passados"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "type": "object",
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          },
          "description": ""
        },
        "description": "Realiza o login do usuário a partir do email e da senha",
        "parameters": [],
        "operationId": "post-api-v2-users-login",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/api/v2/users/logout": {
      "post": {
        "summary": "Faz o logout do usuário",
        "responses": {
          "200": {
            "description": "Quando o usuário atual existe"
          },
          "404": {
            "description": "Quando o usuário atual não existe"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "access_token": {
                    "type": "string",
                    "description": "Token de validação de usuário logado\n\nO `access_token` é gerado quando o usuário loga no Admin              "
                  }
                },
                "type": "object"
              }
            }
          },
          "description": ""
        },
        "description": "Realiza o logout do usuário a partir do access_token do mesmo",
        "parameters": [],
        "operationId": "post-api-v2-users-logout",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/api/v2/users/{id}": {
      "get": {
        "summary": "User",
        "responses": {
          "200": {
            "description": "Retorna os dados do usuário",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User.v1"
                },
                "examples": {
                  "Usuário": {
                    "value": {
                      "id": 1,
                      "email": "foo@vnda.com.br",
                      "name": null,
                      "admin": false,
                      "renew_password": false,
                      "role": 1,
                      "access_token": "706a99d0706a99d070006a99d0706a99d0706a99d0706a99d0706a99d0706a99d0",
                      "tags": [],
                      "external_code": null,
                      "created_at": "2019-11-06T08:50:37.130-03:00",
                      "updated_at": "2020-03-26T10:40:33.730-03:00"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "tags": [
          "Usuários"
        ],
        "operationId": "get-api-v2-users-id",
        "description": "Retorna os dados de um usuário pelo seu ID"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Atualiza um usuário",
        "operationId": "put-api-v2-users-id",
        "responses": {
          "204": {
            "description": "Quando o usuário é atualizado"
          },
          "404": {
            "description": "Quando o usuário não existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Usuários"
        ],
        "description": "Atualiza um usuário",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "role_name": {
                    "type": "string",
                    "enum": [
                      "Agente",
                      "Gestor",
                      "Local"
                    ]
                  },
                  "password": {
                    "type": "string"
                  },
                  "password_confirmation": {
                    "type": "string"
                  },
                  "external_code": {
                    "type": "string"
                  },
                  "phone_area": {
                    "type": "string",
                    "maxLength": 2
                  },
                  "phone": {
                    "type": "string",
                    "maxLength": 9
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/credits/rules/versions": {
      "get": {
        "summary": "Lista as versões da regra de bônus",
        "tags": [
          "Créditos"
        ],
        "responses": {
          "200": {
            "description": "Quando as versões da regra são retornadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "user_agent": {
                      "type": "string"
                    },
                    "cart_id": {
                      "type": "string"
                    },
                    "object_changes": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-credits-rules-versions",
        "parameters": [],
        "description": "Retorna as versões da regra de bônus cadastrada"
      }
    },
    "/api/v2/credits/rules": {
      "get": {
        "summary": "Regras de bônus",
        "tags": [
          "Créditos"
        ],
        "responses": {
          "200": {
            "description": "Quando as regras são retornadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "minimum_subtotal": {
                      "type": "number",
                      "minimum": 0
                    },
                    "bonus": {
                      "type": "number",
                      "minimum": 1
                    },
                    "delayed_for": {
                      "type": "number",
                      "minimum": 0
                    },
                    "valid_for": {
                      "type": "number",
                      "minimum": 1,
                      "exclusiveMinimum": false
                    },
                    "maximum_usage_factor": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 1,
                      "exclusiveMaximum": false,
                      "exclusiveMinimum": true
                    }
                  },
                  "required": [
                    "active",
                    "minimum_subtotal",
                    "bonus",
                    "delayed_for",
                    "valid_for",
                    "maximum_usage_factor"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "active": true,
                      "minimum_subtotal": 100,
                      "bonus": 10,
                      "delayed_for": 5,
                      "valid_for": 30,
                      "maximum_usage_factor": 0.3
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-credits-rules",
        "parameters": [],
        "description": "Retorna as regras de bônus cadastradas"
      },
      "put": {
        "summary": "Atualiza a regras de bônus",
        "operationId": "put-api-v2-credits-rules",
        "responses": {
          "204": {
            "description": "Quando a regra é atualizada"
          }
        },
        "description": "Permite atualizar as regras de bônus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bonus": {
                    "type": "number",
                    "format": "float",
                    "minimum": 1,
                    "exclusiveMinimum": false,
                    "description": "Percentual em cima do total do pedido que vai ser dado de bônus para o cliente"
                  },
                  "valid_in": {
                    "type": "integer",
                    "description": "Número de dias em que o crédito começa a valer",
                    "minimum": 0
                  },
                  "valid_for": {
                    "type": "integer",
                    "description": "Número de dias para a expiração do crédito",
                    "minimum": 1
                  },
                  "minimum_subtotal": {
                    "type": "number",
                    "description": "Valor mínimo do pedido para que o bônus possa ser transferido para o cliente",
                    "format": "float",
                    "minimum": 1,
                    "exclusiveMinimum": false
                  },
                  "maximum_usage_factor": {
                    "type": "number",
                    "default": 1,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "maximum": 1,
                    "description": "Percentual do subtotal do pedido que pode ser pago com o bônus"
                  }
                },
                "required": [
                  "bonus",
                  "valid_in",
                  "valid_for"
                ]
              }
            }
          },
          "description": "Parâmetros"
        },
        "parameters": [],
        "tags": [
          "Créditos"
        ]
      },
      "delete": {
        "summary": "Remove as regras de bônus",
        "operationId": "delete-api-v2-credits-rules",
        "responses": {
          "204": {
            "description": "Quando o bônus é removido"
          }
        },
        "tags": [
          "Créditos"
        ],
        "description": "Permite remover as regras de bônus, desativando o recurso"
      }
    },
    "/api/v2/orders/{code}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "minLength": 10,
            "maxLength": 64
          },
          "name": "code",
          "in": "path",
          "required": true,
          "description": "O \"code\" do pedido ou o \"token\""
        },
        {
          "schema": {
            "type": "boolean",
            "default": false
          },
          "in": "query",
          "name": "include_customizations_in_total",
          "description": "Inclui o preço dos produtos customizados no total do pedido"
        }
      ],
      "get": {
        "summary": "Retorna um pedido",
        "tags": [
          "Pedidos"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-orders-code",
        "description": "Retorna os dados de um pedido usando o `code` ou `token`",
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "include_shipping_address",
            "description": "Retorna as formas de entrega do pedido"
          }
        ]
      }
    },
    "/api/v2/orders": {
      "get": {
        "summary": "Lista os pedidos",
        "tags": [
          "Pedidos"
        ],
        "responses": {
          "200": {
            "description": "Quando os pedidos são retornados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order.v1"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Domínio de loja não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-orders",
        "description": "Retorna uma lista de pedidos",
        "parameters": [
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/finish"
          },
          {
            "$ref": "#/components/parameters/invoiced"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/coupon_codes"
          },
          {
            "$ref": "#/components/parameters/include_customizations_in_total"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/start"
        },
        {
          "$ref": "#/components/parameters/finish"
        },
        {
          "$ref": "#/components/parameters/invoiced"
        },
        {
          "$ref": "#/components/parameters/page"
        },
        {
          "$ref": "#/components/parameters/per_page"
        },
        {
          "$ref": "#/components/parameters/coupon_codes"
        },
        {
          "$ref": "#/components/parameters/include_customizations_in_total"
        }
      ]
    },
    "/api/v2/orders/{code}/capture": {
      "post": {
        "summary": "Captura",
        "operationId": "post-api-v2-orders-capture",
        "responses": {
          "200": {
            "description": "Quando a captura foi realizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "Pagar.me": {
                    "value": {
                      "object": "transaction",
                      "status": "paid",
                      "refuse_reason": null,
                      "status_reason": "acquirer",
                      "acquirer_response_code": "0000",
                      "acquirer_name": "pagarme",
                      "acquirer_id": "5eab10915eab10915eab1091",
                      "authorization_code": "123456",
                      "soft_descriptor": "",
                      "tid": 1234567,
                      "nsu": 1234567,
                      "date_created": "2020-05-14T19:14:50.322Z",
                      "date_updated": "2020-05-15T14:19:34.699Z",
                      "amount": 1400,
                      "authorized_amount": 1400,
                      "paid_amount": 1400,
                      "refunded_amount": 0,
                      "installments": 1,
                      "id": 1234567,
                      "cost": 120,
                      "card_holder_name": "John Doe",
                      "card_last_digits": "6565",
                      "card_first_digits": "470373",
                      "card_brand": "visa",
                      "card_pin_mode": null,
                      "card_magstripe_fallback": false,
                      "cvm_pin": false,
                      "postback_url": "https://demo.vnda.com.br/api/v2/payments/pagarme/notifications",
                      "payment_method": "credit_card",
                      "capture_method": "ecommerce",
                      "antifraud_score": null,
                      "boleto_url": null,
                      "boleto_barcode": null,
                      "boleto_expiration_date": null,
                      "referer": "api_key",
                      "ip": "127.0.0.1",
                      "subscription_id": null,
                      "phone": null,
                      "address": null,
                      "customer": {
                        "object": "customer",
                        "id": 2954669,
                        "external_id": "example@vnda.com.br",
                        "type": "individual",
                        "country": "br",
                        "document_number": null,
                        "document_type": "cpf",
                        "name": "John Doe",
                        "email": "example@vnda.com.br",
                        "phone_numbers": [
                          "+5511111111111"
                        ],
                        "born_at": null,
                        "birthday": null,
                        "gender": null,
                        "date_created": "2020-05-14T19:14:50.248Z",
                        "documents": [
                          {
                            "object": "document",
                            "id": "doc_cka75cka75cka75cka75cka75",
                            "type": "cpf",
                            "number": 191
                          }
                        ]
                      },
                      "billing": {
                        "object": "billing",
                        "id": 1255695,
                        "name": "John Doe",
                        "address": {
                          "object": "address",
                          "street": "Rua João Neves da Fontoura",
                          "complementary": null,
                          "street_number": "1",
                          "neighborhood": "Azenha",
                          "city": "Porto Alegre",
                          "state": "RS",
                          "zipcode": "90050030",
                          "country": "br",
                          "id": 2808888
                        }
                      },
                      "shipping": null,
                      "items": [
                        {
                          "object": "item",
                          "id": "05.01.4.1.006",
                          "title": "Aceto Balsâmico Di Modena IGP 500ml Aceto Balsamico Di Modena IGP 500ml",
                          "unit_price": 1400,
                          "quantity": 1,
                          "category": null,
                          "tangible": true,
                          "venue": null,
                          "date": null
                        }
                      ],
                      "card": {
                        "object": "card",
                        "id": "card_cka75cka75cka75cka75cka75",
                        "date_created": "2020-05-14T19:14:50.307Z",
                        "date_updated": "2020-05-14T19:14:50.717Z",
                        "brand": "visa",
                        "holder_name": "f dc",
                        "first_digits": "470373",
                        "last_digits": "6565",
                        "country": "RUSSIA",
                        "fingerprint": "cka75cka75cka75cka75cka75",
                        "valid": true,
                        "expiration_date": "0423"
                      },
                      "split_rules": null,
                      "metadata": {
                        "order": "7A4F490570",
                        "seller-1": {
                          "name": "default",
                          "package": "7A4F490570-01"
                        }
                      },
                      "antifraud_metadata": {},
                      "reference_key": null,
                      "device": null,
                      "local_transaction_id": null,
                      "local_time": null,
                      "fraud_covered": false,
                      "fraud_reimbursed": null,
                      "order_id": null,
                      "risk_level": "very_low",
                      "receipt_url": null,
                      "payment": null,
                      "addition": null,
                      "discount": null,
                      "private_label": null
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Quando não foi possível realizar a captura junto ao adquirente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "failure": {
                    "value": {
                      "error": "Capture was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Faz a captura do pagamento no adquirente\nApenas para pedidos pagos com cartão de crédito",
        "tags": [
          "Pedidos"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "code",
          "in": "path",
          "required": true
        }
      ]
    },
    "/api/v2/orders/{code}/confirm": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "code",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Confirma",
        "operationId": "post-api-v2-orders-code-confirm",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Altera o status do pedido para \"confirmado\"",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "confirmation_data": {
                    "type": "string",
                    "description": "Para cartão de crédito deve ser enviado OBRIGATORIAMENTE o retorno da requisição para \"/api/v2/orders/{code}/capture\""
                  }
                }
              },
              "examples": {
                "Depósito": {
                  "value": {
                    "banco": "Banco do Brasil",
                    "data_credito": "2020-03-26",
                    "conferido_por": "Nome do usuário do financeiro"
                  }
                },
                "Cartão de crédito via Pagar.me": {
                  "value": {
                    "object": "transaction",
                    "status": "paid",
                    "refuse_reason": null,
                    "status_reason": "acquirer",
                    "acquirer_response_code": "0000",
                    "acquirer_name": "pagarme",
                    "acquirer_id": "5eab10915eab10915eab1091",
                    "authorization_code": "123456",
                    "soft_descriptor": "",
                    "tid": 1234567,
                    "nsu": 1234567,
                    "date_created": "2020-05-14T19:14:50.322Z",
                    "date_updated": "2020-05-15T14:19:34.699Z",
                    "amount": 1400,
                    "authorized_amount": 1400,
                    "paid_amount": 1400,
                    "refunded_amount": 0,
                    "installments": 1,
                    "id": 1234567,
                    "cost": 120,
                    "card_holder_name": "John Doe",
                    "card_last_digits": "6565",
                    "card_first_digits": "470373",
                    "card_brand": "visa",
                    "card_pin_mode": null,
                    "card_magstripe_fallback": false,
                    "cvm_pin": false,
                    "postback_url": "https://demo.vnda.com.br/api/v2/payments/pagarme/notifications",
                    "payment_method": "credit_card",
                    "capture_method": "ecommerce",
                    "antifraud_score": null,
                    "boleto_url": null,
                    "boleto_barcode": null,
                    "boleto_expiration_date": null,
                    "referer": "api_key",
                    "ip": "127.0.0.1",
                    "subscription_id": null,
                    "phone": null,
                    "address": null,
                    "customer": {
                      "object": "customer",
                      "id": 2954669,
                      "external_id": "example@vnda.com.br",
                      "type": "individual",
                      "country": "br",
                      "document_number": null,
                      "document_type": "cpf",
                      "name": "John Doe",
                      "email": "example@vnda.com.br",
                      "phone_numbers": [
                        "+5511111111111"
                      ],
                      "born_at": null,
                      "birthday": null,
                      "gender": null,
                      "date_created": "2020-05-14T19:14:50.248Z",
                      "documents": [
                        {
                          "object": "document",
                          "id": "doc_cka75cka75cka75cka75cka75",
                          "type": "cpf",
                          "number": 191
                        }
                      ]
                    },
                    "billing": {
                      "object": "billing",
                      "id": 1255695,
                      "name": "John Doe",
                      "address": {
                        "object": "address",
                        "street": "Rua João Neves da Fontoura",
                        "complementary": null,
                        "street_number": "1",
                        "neighborhood": "Azenha",
                        "city": "Porto Alegre",
                        "state": "RS",
                        "zipcode": "90050030",
                        "country": "br",
                        "id": 2808888
                      }
                    },
                    "shipping": null,
                    "items": [
                      {
                        "object": "item",
                        "id": "05.01.4.1.006",
                        "title": "Aceto Balsâmico Di Modena IGP 500ml Aceto Balsamico Di Modena IGP 500ml",
                        "unit_price": 1400,
                        "quantity": 1,
                        "category": null,
                        "tangible": true,
                        "venue": null,
                        "date": null
                      }
                    ],
                    "card": {
                      "object": "card",
                      "id": "card_cka75cka75cka75cka75cka75",
                      "date_created": "2020-05-14T19:14:50.307Z",
                      "date_updated": "2020-05-14T19:14:50.717Z",
                      "brand": "visa",
                      "holder_name": "f dc",
                      "first_digits": "470373",
                      "last_digits": "6565",
                      "country": "RUSSIA",
                      "fingerprint": "cka75cka75cka75cka75cka75",
                      "valid": true,
                      "expiration_date": "0423"
                    },
                    "split_rules": null,
                    "metadata": {
                      "order": "7A4F490570",
                      "seller-1": {
                        "name": "default",
                        "package": "7A4F490570-01"
                      }
                    },
                    "antifraud_metadata": {},
                    "reference_key": null,
                    "device": null,
                    "local_transaction_id": null,
                    "local_time": null,
                    "fraud_covered": false,
                    "fraud_reimbursed": null,
                    "order_id": null,
                    "risk_level": "very_low",
                    "receipt_url": null,
                    "payment": null,
                    "addition": null,
                    "discount": null,
                    "private_label": null
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/api/v2/orders/{code}/chargeback": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "code",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Estorna",
        "operationId": "post-api-v2-orders-code-chargeback",
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "description": "Faz o estorno do pagamento no adquirente\nApenas para pedidos pagos com cartão de crédito",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/api/v2/orders/{code}/cancel": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "code",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Cancela",
        "operationId": "post-api-v2-orders-code-cancel",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "description": "Altera o status do pedido para \"cancelado\"",
        "tags": [
          "Pedidos"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cancelation_data": {
                    "type": "string",
                    "description": "Deve ser enviado algo que comprove que o pagamento foi devolvido.\nPara cartão de crédito deve ser enviado OBRIGATORIAMENTE o retorno da requisição para \"/api/v2/orders/{code}/chargeback\""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/orders/{order_code}/packages/{package_code}/ship": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "order_code",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "package_code",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Altera para enviado",
        "operationId": "patch-api-v2-orders-code-packages-code-ship",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Pedido ou rastreio não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "description": "Altera o status do pacote para \"enviado\"",
        "tags": [
          "Pacotes"
        ],
        "parameters": []
      }
    },
    "/api/v2/orders/{order_code}/packages/{package_code}/deliver": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "order_code",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "package_code",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Altera para entregue",
        "operationId": "patch-api-v2-orders-code-packages-code-deliver",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Pedido ou rastreio não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "description": "Altera o pacote para \"entregue\"",
        "tags": [
          "Pacotes"
        ]
      }
    },
    "/api/v2/variants/quantity": {
      "post": {
        "summary": "Atualiza em lote",
        "operationId": "post-api-v2-variants-quantity",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Estoque"
        ],
        "description": "Recebe uma lista JSON com os SKUs que devem ser atualizados. A atualização será executada em segundo plano em aproximadamente 1 minuto ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sku": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "integer"
                    },
                    "place_id": {
                      "type": "integer",
                      "description": "Informe somente para atualizar o estoque de um local específico"
                    }
                  },
                  "required": [
                    "sku",
                    "quantity"
                  ]
                }
              },
              "examples": {
                "Exemplo": {
                  "value": [
                    {
                      "sku": "21390",
                      "quantity": 12,
                      "place_id": 1
                    },
                    {
                      "sku": "21827",
                      "quantity": 12
                    }
                  ]
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/api/v2/variants/{sku}/quantity": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "sku",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Atualiza",
        "operationId": "post-api-v2-variants-sku-quantity",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Exemplo": {
                    "value": {
                      "status": "ok"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Exemplo": {
                    "value": {
                      "status": "error",
                      "message": "A quantity must be provided to update stock"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Estoque"
        ],
        "description": "Atualiza o estoque de uma variante de um produto",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "quantity",
            "required": true
          }
        ]
      }
    },
    "/api/v2/variants/{sku}/inventories/{place_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "sku",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "place_id",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Atualiza um local",
        "operationId": "patch-api-v2-variants-sku-inventories-place_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Exemplo": {
                    "value": {
                      "status": "ok"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Exemplo": {
                    "value": {
                      "status": "error",
                      "message": "Quantity or price must be provided to update stock"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Estoque"
        ],
        "description": "Atualiza o estoque específico de um local",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "quantity"
          }
        ]
      }
    },
    "/api/v2/products/{product_id}/variants": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "product_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lista as variantes",
        "tags": [
          "Variantes"
        ],
        "responses": {
          "200": {
            "description": "Quando as variantes são listadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Variant"
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "id": 95,
                        "main": true,
                        "available": true,
                        "sku": "123",
                        "name": "Variation",
                        "slug": "variation",
                        "min_quantity": 1,
                        "quantity": 1,
                        "quantity_sold": 0,
                        "stock": 1,
                        "custom_attributes": {},
                        "properties": {},
                        "updated_at": "2020-10-27T11:54:32.018-03:00",
                        "price": 10,
                        "installments": [
                          10
                        ],
                        "available_quantity": 1,
                        "weight": 0.001,
                        "width": 1,
                        "height": 1,
                        "length": 1,
                        "handling_days": 0,
                        "inventories": [],
                        "sale_price": 10,
                        "image_url": "//b0.vnda.com.br/x120/shop/2014/07/08/variation.jpg",
                        "product_id": 6,
                        "barcode": null,
                        "norder": 1
                      },
                      {
                        "id": 27,
                        "main": false,
                        "available": true,
                        "sku": "13001",
                        "name": "Tamanho: PP | Cor: Branca",
                        "slug": "camiseta",
                        "min_quantity": 1,
                        "quantity": 85,
                        "stock": 83,
                        "custom_attributes": {
                          "size": "PP",
                          "color": "#FFFFFF"
                        },
                        "properties": {},
                        "updated_at": "2019-08-01T18:36:52.718-03:00",
                        "price": 169.9,
                        "installments": [
                          169.9
                        ],
                        "available_quantity": 83,
                        "weight": 0.1,
                        "width": 11,
                        "height": 2,
                        "length": 16,
                        "handling_days": 0,
                        "inventories": [],
                        "sale_price": 169.9,
                        "image_url": "//b0.vnda.com.br/x120/shop/2014/07/08/camiseta.jpg",
                        "product_id": 6,
                        "barcode": null,
                        "norder": 1
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros enviados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": "invalid rate value"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-products-product_id-variants",
        "description": "Permite listar as variantes de um produto"
      },
      "post": {
        "summary": "Cria uma variante",
        "operationId": "post-api-v2-products-product_id-variants",
        "responses": {
          "201": {
            "description": "Quando a variante é criada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "main": {
                      "type": "boolean"
                    },
                    "available": {
                      "type": "boolean"
                    },
                    "sku": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "min_quantity": {
                      "type": "integer"
                    },
                    "quantity": {
                      "type": "integer"
                    },
                    "stock": {
                      "type": "integer",
                      "description": "Quantidade de itens disponíveis"
                    },
                    "custom_attributes": {
                      "type": "object",
                      "description": "Customização da variante"
                    },
                    "properties": {
                      "type": "object"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data e horário da última atualização"
                    },
                    "price": {
                      "type": "integer"
                    },
                    "installments": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "available_quantity": {
                      "type": "integer"
                    },
                    "weight": {
                      "type": "number",
                      "description": "Massa do produto, em gramas"
                    },
                    "width": {
                      "type": "number",
                      "description": "Largura do produto, em centímetros"
                    },
                    "height": {
                      "type": "number",
                      "description": "Altura do produto, em centímetros"
                    },
                    "length": {
                      "type": "number",
                      "description": "Comprimento do produito, em centímetros"
                    },
                    "handling_days": {
                      "type": "number",
                      "description": "Dias de manuseio da variante"
                    },
                    "inventories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Variant_inventory.v1"
                      }
                    },
                    "sale_price": {
                      "type": "number"
                    },
                    "image_url": {
                      "type": "string"
                    },
                    "product_id": {
                      "type": "integer"
                    },
                    "norder": {
                      "type": "integer"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": 95,
                      "main": false,
                      "available": true,
                      "sku": "SHOP0001",
                      "name": "Variation",
                      "slug": "variation",
                      "min_quantity": 1,
                      "quantity": 1,
                      "stock": 1,
                      "custom_attributes": {},
                      "properties": {},
                      "updated_at": "2020-10-27T11:54:32.018-03:00",
                      "price": 10,
                      "installments": [
                        10
                      ],
                      "available_quantity": 1,
                      "weight": 0.001,
                      "width": 1,
                      "height": 1,
                      "length": 1,
                      "handling_days": 0,
                      "inventories": [],
                      "sale_price": 10,
                      "image_url": "//b0.vnda.com.br/x120/shop/2014/07/08/variation.jpg",
                      "product_id": 6,
                      "norder": 1
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Variantes"
        ],
        "description": "Permite criar uma variante",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "integer"
                  },
                  "main": {
                    "type": "boolean"
                  },
                  "width": {
                    "type": "number",
                    "description": "Largura do produto, em centímetros"
                  },
                  "height": {
                    "type": "number",
                    "description": "Altura do produto, em centímetros"
                  },
                  "length": {
                    "type": "number",
                    "description": "Comprimento do produito, em centímetros"
                  },
                  "weight": {
                    "type": "number",
                    "description": "Massa do produto, em gramas"
                  },
                  "handling_days": {
                    "type": "integer",
                    "description": "Dias de manuseio da variante"
                  },
                  "price": {
                    "type": "number"
                  },
                  "custom_attributes": {
                    "type": "object",
                    "description": "Customização da variante"
                  },
                  "min_quantity": {
                    "type": "integer"
                  },
                  "norder": {
                    "type": "integer"
                  },
                  "property1": {
                    "type": "string",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "defining": {
                        "type": "boolean"
                      }
                    }
                  },
                  "property2": {
                    "type": "string",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "defining": {
                        "type": "boolean"
                      }
                    }
                  },
                  "property3": {
                    "type": "string",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "defining": {
                        "type": "boolean"
                      }
                    }
                  },
                  "barcode": {
                    "type": "string"
                  }
                },
                "required": [
                  "sku",
                  "quantity",
                  "price"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v2/products/{product_id}/variants/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "product_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Atualiza uma variante",
        "operationId": "patch-api-v2-products-product_id-variants-id",
        "responses": {
          "204": {
            "description": "Quando a variante é atualizada"
          },
          "404": {
            "description": "Quando a variante não existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Variantes"
        ],
        "description": "Permite atualizar uma variante",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "integer"
                  },
                  "main": {
                    "type": "boolean"
                  },
                  "width": {
                    "type": "number"
                  },
                  "height": {
                    "type": "number"
                  },
                  "length": {
                    "type": "number"
                  },
                  "weight": {
                    "type": "number"
                  },
                  "handling_days": {
                    "type": "integer"
                  },
                  "price": {
                    "type": "number"
                  },
                  "custom_attributes": {
                    "type": "object"
                  },
                  "min_quantity": {
                    "type": "integer"
                  },
                  "norder": {
                    "type": "integer"
                  },
                  "property1": {
                    "type": "string"
                  },
                  "property2": {
                    "type": "string"
                  },
                  "property3": {
                    "type": "string"
                  },
                  "barcode": {
                    "type": "string"
                  },
                  "quantity_sold": {
                    "type": "integer"
                  }
                },
                "required": [
                  "sku",
                  "quantity",
                  "price"
                ]
              }
            }
          }
        },
        "deprecated": true
      },
      "delete": {
        "summary": "Remove uma variante",
        "operationId": "delete-api-v2-products-product_id-variants-id",
        "responses": {
          "204": {
            "description": "Quando a variante é removida"
          },
          "404": {
            "description": "Quando a variante não existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Variantes"
        ],
        "description": "Permite remover uma variante"
      }
    },
    "/api/v2/variants/reorder": {
      "post": {
        "summary": "Reordena as variantes",
        "operationId": "post-api-v2-variants-reorder",
        "responses": {
          "200": {
            "description": "Quando as variantes são reordenadas"
          }
        },
        "tags": [
          "Variantes"
        ],
        "description": "Permite determinar a ordem das variantes dentro de cada produto",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "description": "A ordem dos elementos será replicada para as variantes",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "ids"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "ids": [
                      32,
                      29,
                      28,
                      31,
                      30,
                      27
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/templates/{path}": {
      "get": {
        "summary": "Retorna um template",
        "tags": [
          "Templates"
        ],
        "responses": {
          "200": {
            "description": "Quando um template é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template.v1"
                },
                "examples": {
                  "Template": {
                    "value": {
                      "path": "home.liquid",
                      "body": "<h1>shop site!</h1>",
                      "updated_at": "2020-05-17T21:37:38.000-03:00"
                    }
                  },
                  "Partial": {
                    "value": {
                      "path": "partials/components/product_block/_images_by_gender.liquid",
                      "body": "<p>partial template</p>",
                      "updated_at": "2020-05-17T21:37:38.000-03:00"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando um template não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-templates-path",
        "description": "Retorna um template usando o path dele",
        "parameters": []
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "pattern": "[0-9A-Za-z_\\.\\/]+"
          },
          "name": "path",
          "in": "path",
          "required": true,
          "description": "Caminho relativo do template"
        }
      ],
      "patch": {
        "summary": "Atualiza um template",
        "operationId": "patch-api-v2-templates-path",
        "responses": {
          "204": {
            "description": "Quando um template é atualizado com sucesso"
          },
          "404": {
            "description": "Quando um template não é contrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Templates"
        ],
        "parameters": [],
        "description": "Atualiza o conteúdo de um template usando o path dele",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Template": {
                  "value": {
                    "body": "<h1>shop site!</h1>"
                  }
                },
                "Partial": {
                  "value": {
                    "body": "<p>partial template</p>"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove um template",
        "operationId": "delete-api-v2-templates-path",
        "responses": {
          "204": {
            "description": "Quando um template é excluído com sucesso"
          },
          "404": {
            "description": "Quando um template não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Remove um template usando o path dele",
        "tags": [
          "Templates"
        ],
        "parameters": []
      }
    },
    "/api/v2/templates": {
      "post": {
        "summary": "Cria um template",
        "operationId": "post-api-v2-templates",
        "responses": {
          "201": {
            "description": "Quando um template é criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template.v1"
                },
                "examples": {
                  "Template": {
                    "value": {
                      "path": "home.liquid",
                      "body": "<h1>shop site!</h1>",
                      "updated_at": "2020-05-17T21:37:38.000-03:00"
                    }
                  },
                  "Partial": {
                    "value": {
                      "path": "partials/components/product_block/_images_by_gender.liquid",
                      "body": "<p>partial template</p>",
                      "updated_at": "2020-05-17T21:37:38.000-03:00"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                },
                "examples": {
                  "Parâmetro `path` em branco": {
                    "value": {
                      "errors": {
                        "path": [
                          "não pode ficar em branco"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string"
                  },
                  "body": {
                    "type": "string"
                  }
                },
                "required": [
                  "path"
                ]
              },
              "examples": {
                "Template": {
                  "value": {
                    "path": "home.liquid",
                    "body": "<h1>shop site!</h1>"
                  }
                },
                "Partial": {
                  "value": {
                    "path": "partials/components/product_block/_images_by_gender.liquid",
                    "body": "<p>partial template</p>"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Templates"
        ],
        "description": "Cria um novo template"
      },
      "get": {
        "summary": "Lista os templates",
        "operationId": "get-api-v2-templates",
        "responses": {
          "200": {
            "description": "Quando os templates são listados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Template.v1"
                  }
                },
                "examples": {
                  "Template": {
                    "value": [
                      {
                        "path": "home.liquid",
                        "body": "<h1>shop site!</h1>",
                        "updated_at": "2020-05-17T21:37:38.000-03:00"
                      }
                    ]
                  },
                  "Partial": {
                    "value": [
                      {
                        "path": "partials/components/product_block/_images_by_gender.liquid",
                        "body": "<p>partial template</p>",
                        "updated_at": "2020-05-17T21:37:38.000-03:00"
                      }
                    ]
                  },
                  "Sem templates": {
                    "value": []
                  }
                }
              }
            }
          }
        },
        "description": "Retorna uma lista de templates",
        "parameters": [],
        "tags": [
          "Templates"
        ]
      }
    },
    "/api/v2/users/{id}/activate": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Ativar",
        "operationId": "post-api-v2-users-id-activate",
        "responses": {
          "200": {
            "description": "Quando a ativação foi realizada com sucesso"
          },
          "404": {
            "description": "Quando o usuário não é encontrado"
          }
        },
        "description": "Reativa um usuário que estiver desativado",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/api/v2/users/{id}/deactivate": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Desativar",
        "operationId": "post-api-v2-users-id-deactivate",
        "responses": {
          "200": {
            "description": "Quando a desativação foi realizada com sucesso"
          },
          "404": {
            "description": "Quando o usuário não é encontrado"
          }
        },
        "tags": [
          "Usuários"
        ],
        "description": "Desativa um usuário"
      }
    },
    "/api/v2/users": {
      "get": {
        "summary": "Lista os usuários",
        "operationId": "get-api-v2-users",
        "responses": {
          "200": {
            "description": "Quando os usuários são listados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User.v1",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Código identificador do usuário"
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Email do usuário"
                      },
                      "access_token": {
                        "type": "string",
                        "description": "Token de validação de usuário logado (`access_token`)\n      \nO `access_token` é gerado quando o usuário loga no Admin"
                      },
                      "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Nome do usuário"
                      },
                      "admin": {
                        "type": "boolean",
                        "description": "Identificador de usuários administradores\n\nEsse atributo retorna `true` para um usuário administrador do ambiente de loja"
                      },
                      "renew_password": {
                        "type": "boolean",
                        "description": "Identificador de usuários que atualizaram a senha inicial\n\nEsse atributo retorna `true` para um usuário que já redefiniu sua senha pelo menos uma vez"
                      },
                      "role": {
                        "type": "integer",
                        "description": "Código da função do usuário na loja:\n\n  - Agente: `0`;\n  - Gestor: `1`;\n  - Local: `2`;\n  - Agente Social Selling: `3`."
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Tags para agrupamento de usuários\nAs tags podem ser são utilizadas para direcionar promoções para determinados usuários, organizar os recebedores em uma divisão de pagamentos, definir regras de comissão"
                      },
                      "external_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "Código externo do Vendedor. Esse campo é destinado para cadastrar um código de vendedor já existente em outro sistema."
                      },
                      "phone_area": {
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "description": "Código de  Discagem Direta a Distância (DDD) do telefone do usuário"
                      },
                      "phone": {
                        "type": "string",
                        "maxLength": 9,
                        "minLength": 8,
                        "description": "Número de telefone do usuário"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Data de inclusão do usuário no Admin"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Data de atualização das informações do usuário"
                      }
                    }
                  }
                },
                "examples": {
                  "Usuários": {
                    "value": [
                      {
                        "id": 1,
                        "email": "foo@vnda.com.br",
                        "name": null,
                        "admin": false,
                        "renew_password": false,
                        "role": 1,
                        "access_token": "706a99d0706a99d0706a99d0706a99d0706a99d0706a99d0706a99d0706a99d0",
                        "tags": [],
                        "external_code": null,
                        "created_at": "2019-11-06T08:50:37.130-03:00",
                        "updated_at": "2020-03-26T10:40:33.730-03:00"
                      }
                    ]
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "email": "foo@vnda.com.br",
                    "name": "User 1",
                    "admin": true,
                    "renew_password": true,
                    "role": 1,
                    "access_token": "706a99d0706a99d070006a99d0706a99d0706a99d0706a99d0706a99d0706a99d0",
                    "tags": [],
                    "external_code": null,
                    "created_at": "2019-11-06T08:50:37.130-03:00",
                    "updated_at": "2020-03-26T10:40:33.730-03:00"
                  },
                  {
                    "id": 1,
                    "email": "test@vnda.com.br",
                    "name": "User 2",
                    "admin": false,
                    "renew_password": false,
                    "role": 2,
                    "access_token": "706a99d0706a99dhgs070006a99d0706a99d0706a99d0706a99d0706a99d0706a99d0",
                    "tags": [],
                    "external_code": null,
                    "created_at": "2019-12-06T08:50:37.130-03:00",
                    "updated_at": "2020-04-26T10:40:33.730-03:00"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Token de acesso inválido"
          },
          "404": {
            "description": "Domínio da loja inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Usuários"
        ],
        "description": "Lista os usuários",
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "include_inactive",
            "description": "Incluir usuários desativados?"
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "include_images",
            "description": "Incluir todas as imagens dos produtos?"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "external_code",
            "description": "Exibe somente os usuários com o código externo indicado"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "Agente",
                "Gestor",
                "Local"
              ]
            },
            "in": "query",
            "name": "role_name",
            "description": "Exibe somente os usuários com a função indicada"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "term",
            "description": "Filtra usuários que contenham o valor indicado no nome, telefone, email ou código externo"
          }
        ]
      },
      "post": {
        "summary": "Cria um usuário",
        "operationId": "post-api-v2-users",
        "responses": {
          "200": {
            "description": "Quando o usuário é criado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User.v1"
                }
              }
            }
          },
          "201": {
            "description": "Usuário criado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Usuários"
        ],
        "description": "Cria um usuário",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "role_name": {
                    "type": "string",
                    "enum": [
                      "Agente",
                      "Gestor",
                      "Local"
                    ]
                  },
                  "password": {
                    "type": "string"
                  },
                  "password_confirmation": {
                    "type": "string"
                  },
                  "external_code": {
                    "type": "string"
                  },
                  "phone_area": {
                    "type": "string",
                    "maxLength": 2
                  },
                  "phone": {
                    "type": "string",
                    "maxLength": 9
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/tags": {
      "get": {
        "summary": "Lista as tags dos usuários a partir das funções",
        "operationId": "get-api-v2-users-tags",
        "responses": {
          "200": {
            "description": "Quando as tags são retornadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Usuários"
        ],
        "description": "Lista os usuários",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "Agente",
                "Gestor",
                "Local",
                "Agente Social Selling"
              ]
            },
            "in": "query",
            "name": "role_names",
            "description": "Exibe somente os usuários com a função indicada"
          }
        ]
      }
    },
    "/api/v2/carts": {
      "get": {
        "summary": "Lista os carrinhos",
        "operationId": "get-api-v2-carts",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Carts"
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "tags": [
          "Carrinhos"
        ],
        "description": "Retorna a lista de carrinhos ativos nos últimos 60 dias",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "Número da página"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Quantidade de produtos por página"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "without_phones",
            "description": "Inclui os carrinhos sem telefone (não enviar o campo para não incluir)"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "with_payments",
            "description": "Filtra os carrinhos que possuem tentativa de pagamento"
          }
        ]
      },
      "post": {
        "summary": "Cria um carrinho",
        "operationId": "post-api-v2-carts",
        "description": "Permite criar um carrinho",
        "tags": [
          "Carrinhos da loja"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "ipv4"
            },
            "in": "header",
            "name": "X-Browser-Ip",
            "description": "Internet Protocol (IP) da máquina de onde é criado o carrinho",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-User-Agent",
            "description": "Identificador da origem do carrinho na loja (como navegador ou dispositivo)",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cart.simple"
              }
            }
          },
          "description": ""
        },
        "responses": {
          "201": {
            "description": "Carrinho criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart.v1"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/api/v2/carts/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Pode ser o id ou o token do carrinho"
        }
      ],
      "patch": {
        "summary": "Atualiza um carrinho",
        "operationId": "patch-api-v2-carts-id",
        "responses": {
          "204": {
            "description": "Quando o carrinho é atualizado com sucesso"
          },
          "404": {
            "description": "Quando o carrinho não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                },
                "examples": {
                  "Com um email inválido": {
                    "value": {
                      "errors": {
                        "client": [
                          "não é válido"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agent": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "client_id": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true
                  },
                  "email": {
                    "type": "string",
                    "description": "DEPRECATED: enviar o `client_id`",
                    "format": "email"
                  },
                  "rebate_token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Carrinhos"
        ],
        "description": "Permite atualizar os atributos de um carrinho",
        "parameters": []
      },
      "delete": {
        "summary": "Exclui um carrinho",
        "operationId": "delete-api-v2-carts-id",
        "responses": {
          "204": {
            "description": "Quando um carrinho é excluído com sucesso"
          },
          "404": {
            "description": "Quando um carrinho não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Carrinhos"
        ],
        "description": "Permite excluir um carrinho",
        "parameters": []
      },
      "get": {
        "summary": "Retorna um carrinho",
        "operationId": "get-api-v2-carts-id",
        "responses": {
          "200": {
            "description": "Quando o carrinho é encontrado",
            "headers": {
              "X-Attempt-Count": {
                "schema": {
                  "type": "integer"
                },
                "description": "O número de tentativas de pagamento"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando um carrinho não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Carrinhos"
        ],
        "description": "Permite retornar um carrinho",
        "parameters": []
      },
      "post": {
        "summary": "Cria um carrinho",
        "operationId": "post-api-v2-carts-id",
        "responses": {
          "201": {
            "description": "Quando um carrinho é criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                },
                "examples": {
                  "Sem os parâmetros obrigatórios": {
                    "value": {
                      "errors": {
                        "browser_ip": [
                          "não pode ficar em branco"
                        ],
                        "user_agent": [
                          "não pode ficar em branco"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Permite criar um carrinho",
        "tags": [
          "Carrinhos"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "ipv4"
            },
            "in": "header",
            "name": "X-Browser-Ip",
            "description": "IP do usuário que está criando o carrinho na loja",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-User-Agent",
            "description": "User-Agent do navegador do usuário criando o carrinho na loja",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agent": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "client_id": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true
                  },
                  "coupon_code": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "description": "DEPRECATED: enviar o `client_id`",
                    "format": "email"
                  },
                  "rebate_token": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/api/v2/carts/{id}/installments": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retorna as parcelas do total de um carrinho",
        "tags": [
          "Carrinhos"
        ],
        "responses": {
          "200": {
            "description": "Quando o carrinho é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cart_installment.v1"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando um carrinho não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "Não encontrado": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-carts-id-installments",
        "description": "Permite calcular as parcelas referentes ao total do carrinho",
        "parameters": []
      }
    },
    "/api/v2/places": {
      "get": {
        "summary": "Lista os locais",
        "tags": [
          "Locais"
        ],
        "responses": {
          "200": {
            "description": "Quando os locais são listadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Place.v1"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-places",
        "description": "Lista os locais",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "names",
            "description": "Filtra os locais for nome"
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "warehouse",
            "description": "Filtra os locais que são/não são warehouse"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "category",
            "description": "Filtra os locais que contenham determinada categoria"
          },
          {
            "schema": {
              "type": "string",
              "example": "-30.1087957,-51.3172282"
            },
            "in": "query",
            "name": "coordinates",
            "description": "As lojas mais próximas da coordenada informada serão exibidas primeiro"
          },
          {
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}$"
            },
            "in": "query",
            "name": "origin_zip_code",
            "description": "As lojas mais próximas do CEP informado serão exibidas primeiro"
          }
        ]
      },
      "post": {
        "summary": "Cria um local",
        "operationId": "post-api-v2-places",
        "responses": {
          "201": {
            "description": "Quando o local é criado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Place.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos"
          }
        },
        "tags": [
          "Locais"
        ],
        "description": "Cria um local",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "address_line_1": {
                    "type": "string",
                    "maxLength": 80
                  },
                  "address_line_2": {
                    "type": "string",
                    "maxLength": 80
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 80
                  },
                  "neighborhood": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "home_page": {
                    "type": "string"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_phone": {
                    "type": "string"
                  },
                  "second_phone": {
                    "type": "string"
                  },
                  "mobile_phone": {
                    "type": "string",
                    "default": "false"
                  },
                  "only_cash": {
                    "type": "boolean"
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "marker_url": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "opening_hours": {
                    "type": "string"
                  },
                  "warehouse": {
                    "type": "boolean"
                  },
                  "legal_name": {
                    "type": "string"
                  },
                  "cnpj": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "address_line_1",
                  "city",
                  "email"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v2/places/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Atualiza um local",
        "operationId": "patch-api-v2-places-id",
        "responses": {
          "204": {
            "description": "Quando o local é atualizado"
          },
          "404": {
            "description": "Quando o local não é encontrado"
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Locais"
        ],
        "description": "Atualiza um local",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "address_line_1": {
                    "type": "string",
                    "maxLength": 80
                  },
                  "address_line_2": {
                    "type": "string",
                    "maxLength": 80
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 80
                  },
                  "neighborhood": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "home_page": {
                    "type": "string"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_phone": {
                    "type": "string"
                  },
                  "second_phone": {
                    "type": "string"
                  },
                  "mobile_phone": {
                    "type": "string",
                    "default": "false"
                  },
                  "only_cash": {
                    "type": "boolean"
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "marker_url": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "opening_hours": {
                    "type": "string"
                  },
                  "warehouse": {
                    "type": "boolean"
                  },
                  "legal_name": {
                    "type": "string"
                  },
                  "cnpj": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "address_line_1",
                  "city",
                  "email"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove um local",
        "operationId": "delete-api-v2-places-id",
        "responses": {
          "204": {
            "description": "Quando o local é removido"
          },
          "404": {
            "description": "Quando o local não é encontrado"
          }
        },
        "tags": [
          "Locais"
        ],
        "description": "Remove um local"
      }
    },
    "/api/v2/orders/{code}/packages/{package_code}/invoices": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "code",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "package_code",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lista as notas fiscais",
        "tags": [
          "Notas fiscais"
        ],
        "responses": {
          "200": {
            "description": "Quando as notas fiscais são listadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice.v1"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-orders-code-packages-package_code-invoices",
        "description": "Lista as notas fiscais"
      },
      "post": {
        "summary": "Cria uma nota fiscal",
        "operationId": "post-api-v2-orders-code-packages-package_code-invoices",
        "responses": {
          "201": {
            "description": "Quando a nota fiscal é criada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos"
          }
        },
        "tags": [
          "Notas fiscais"
        ],
        "description": "Cria uma nota fiscal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "number"
                  },
                  "series": {
                    "type": "number"
                  },
                  "issued_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "key": {
                    "type": "string"
                  },
                  "volumes": {
                    "type": "integer"
                  }
                },
                "required": [
                  "number"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v2/orders/{code}/packages/{package_code}/invoices/{number}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "code",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "package_code",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "number",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Atualiza uma nota fiscal",
        "operationId": "patch-api-v2-orders-code-packages-package_code-invoices-number",
        "responses": {
          "204": {
            "description": "Quando a nota fiscal é atualizada"
          },
          "404": {
            "description": "Quando a nota fiscal não é encontrada"
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Notas fiscais"
        ],
        "description": "Atualiza uma nota fiscal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "number"
                  },
                  "series": {
                    "type": "number"
                  },
                  "issued_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "key": {
                    "type": "string"
                  },
                  "volumes": {
                    "type": "integer"
                  }
                },
                "required": [
                  "number"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove uma nota fiscal",
        "operationId": "delete-api-v2-orders-code-packages-package_code-invoices-number",
        "responses": {
          "204": {
            "description": "Quando a nota fiscal é removida"
          },
          "404": {
            "description": "Quando a nota fiscal não é encontrada"
          }
        },
        "tags": [
          "Notas fiscais"
        ],
        "description": "Remove uma nota fiscal"
      }
    },
    "/api/v2/users/reset_password": {
      "post": {
        "summary": "Solicita renovação da senha",
        "operationId": "post-api-v2-users-reset_password",
        "responses": {
          "200": {
            "description": "Quando o email foi enviado"
          },
          "404": {
            "description": "Quando o usuário não existe"
          }
        },
        "tags": [
          "Usuários"
        ],
        "description": "Será enviado por email um link para o cadastro da nova senha\nO link tem validade de 24 horas",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Cadastra a nova senha",
        "operationId": "patch-api-v2-users-reset_password",
        "responses": {
          "200": {
            "description": "Quando a senha foi alterada"
          },
          "400": {
            "description": "Quando o token é inválido ou expirou"
          },
          "404": {
            "description": "Quando não foi encontrado um usuário com o token informado"
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Usuários"
        ],
        "description": "Cadastra a nova senha",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Token pare renovação de senha enviado por email"
                  },
                  "password": {
                    "type": "string",
                    "description": "Nova senha para o usuário"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "description": "Confirmação da nova senha do usuário"
                  }
                },
                "required": [
                  "token",
                  "password",
                  "password_confirmation"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v2/orders/{code}/shipping_address": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "code",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Endereço de entrega",
        "tags": [
          "Pedidos"
        ],
        "responses": {
          "200": {
            "description": "Quando o endereço é retornado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "company_name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "documents": {
                      "type": "object",
                      "description": "Serão retornados apenas os campos preenchidos",
                      "properties": {
                        "cpf": {
                          "type": "string"
                        },
                        "cnpj": {
                          "type": "string"
                        },
                        "ie": {
                          "type": "string"
                        }
                      }
                    },
                    "street_name": {
                      "type": "string"
                    },
                    "street_number": {
                      "type": "string",
                      "example": "188A"
                    },
                    "complement": {
                      "type": "string"
                    },
                    "neighborhood": {
                      "type": "string"
                    },
                    "first_phone_area": {
                      "type": "string",
                      "description": "Somente números",
                      "example": "11"
                    },
                    "first_phone": {
                      "type": "string",
                      "description": "Somente números",
                      "example": "984453322"
                    },
                    "second_phone_area": {
                      "type": "string",
                      "description": "Somente números"
                    },
                    "second_phone": {
                      "type": "string",
                      "description": "Somente números"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "zip": {
                      "type": "string",
                      "description": "Somente números",
                      "example": "90050000"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "example": "RS",
                      "minLength": 2,
                      "maxLength": 2
                    },
                    "recipient_name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "street_name",
                    "street_number",
                    "neighborhood",
                    "first_phone_area",
                    "first_phone",
                    "zip",
                    "city",
                    "state"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-orders-code-shipping_address",
        "description": "Retorna o endereço de entrega"
      }
    },
    "/api/v2/payment_recipients": {
      "get": {
        "summary": "Lista os recebedores",
        "tags": [
          "Recebedores"
        ],
        "responses": {
          "200": {
            "description": "Quando os recebedores são listados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment_recipient.v1"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-payment_recipients",
        "description": "Lista os recebedores"
      },
      "post": {
        "summary": "Cria um recebedor",
        "operationId": "post-api-v2-payment_recipients",
        "responses": {
          "200": {
            "description": "Quando o recebedor foi criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment_recipient.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                },
                "examples": {
                  "Parâmetro `percentage` em branco": {
                    "value": {
                      "errors": {
                        "percentage": [
                          "não pode ficar em branco"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recebedores"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tag_id": {
                    "type": "integer"
                  },
                  "recipient_id": {
                    "type": "integer"
                  },
                  "percentage": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "active": {
                    "type": "boolean",
                    "default": true
                  },
                  "charge_processing_fee": {
                    "type": "boolean",
                    "default": false
                  },
                  "liable": {
                    "type": "boolean",
                    "default": false
                  },
                  "code": {
                    "type": "string"
                  },
                  "place_id": {
                    "type": "integer"
                  },
                  "user_id": {
                    "type": "integer"
                  },
                  "include_shipping": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indica se o frete deve ser incluído no split do pagamento"
                  }
                },
                "required": [
                  "percentage"
                ]
              }
            }
          }
        },
        "description": "Cria um recebedor"
      }
    },
    "/api/v2/payment_recipients/{id}": {
      "get": {
        "summary": "Retorna um recebedor",
        "tags": [
          "Recebedores"
        ],
        "responses": {
          "200": {
            "description": "Quando o recebedor é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment_recipient.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando o recebedor não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-payment_recipients-id",
        "description": "Retorna um recebedor"
      },
      "patch": {
        "summary": "Atualiza um recebedor",
        "operationId": "patch-api-v2-payment_recipients-id",
        "responses": {
          "204": {
            "description": "Quando o recebedor é atualizado"
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Recebedores"
        ],
        "description": "Atualiza um recebedor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tag_id": {
                    "type": "integer"
                  },
                  "recipient_id": {
                    "type": "integer"
                  },
                  "percentage": {
                    "type": "number",
                    "maximum": 100
                  },
                  "active": {
                    "type": "boolean",
                    "default": true
                  },
                  "charge_processing_fee": {
                    "type": "boolean",
                    "default": false
                  },
                  "liable": {
                    "type": "boolean",
                    "default": false
                  },
                  "code": {
                    "type": "string"
                  },
                  "place_id": {
                    "type": "integer"
                  },
                  "user_id": {
                    "type": "integer"
                  },
                  "include_shipping": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indica se o frete deve ser incluído no split do pagamento"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove um recebedor",
        "operationId": "delete-api-v2-payment_recipients-id",
        "responses": {
          "204": {
            "description": "Quando o recebedor é removido"
          },
          "404": {
            "description": "Quando o recebedor não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Remove um recebedor",
        "tags": [
          "Recebedores"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/api/v2/users/{user_id}/payables": {
      "get": {
        "summary": "Lista os recebíveis do usuário",
        "responses": {
          "200": {
            "description": "Retorna a lista de recebíveis do usuário",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payables.v1"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando o usuário não está cadastrado como recebedor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "description": "Permite a listagem de recebíveis do usuário",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "operationId": "get-api-v2-users-user_id-payables",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/api/v2/audience_members": {
      "get": {
        "summary": "Retorna os membros da audiência",
        "responses": {
          "200": {
            "description": "Quando os membros da audiência são listados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Audience_member.v1"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-audience_members",
        "description": "Lista os membros da audiência",
        "tags": [
          "Público"
        ]
      },
      "post": {
        "summary": "Cria uma membro da audiência",
        "operationId": "post-api-v2-audience_members",
        "responses": {
          "201": {
            "description": "Quando o membro da audiência é criado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Audience_member.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "description": "Permite criar um membro da audiência",
        "tags": [
          "Público"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "nullable": true
                  },
                  "last_name": {
                    "type": "string",
                    "nullable": true
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone_area": {
                    "type": "string",
                    "nullable": true
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          },
          "description": ""
        }
      },
      "parameters": []
    },
    "/api/v2/audience_members/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Remove um membro da audiência",
        "operationId": "delete-api-v2-audience-members-id",
        "responses": {
          "204": {
            "description": "Quando o membro da audiência é removido"
          },
          "404": {
            "description": "Quando a audiência não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Público"
        ],
        "description": "Permite remover um membro da audiência"
      },
      "patch": {
        "summary": "Altera um membro da audiência",
        "operationId": "patch-api-v2-audience-members-id",
        "responses": {
          "204": {
            "description": "Quando o membro da audiência é alterado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Audience_member.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando o membro da audiência não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "description": "Permite alterar um membro da audiência",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone_area": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Público"
        ]
      }
    },
    "/api/v2/orders/{order_code}/packages/{package_code}/trackings": {
      "post": {
        "summary": "Adiciona um rastreio",
        "operationId": "post-api-v2-orders-order_code-packages-package_code-trackings",
        "responses": {
          "200": {
            "description": "Quando o rastreio é criado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Código de rastreio do pacote"
                    },
                    "company": {
                      "type": "string",
                      "description": "Transportadora"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL para rastreio do pacote na transportadora"
                    }
                  },
                  "required": [
                    "code"
                  ]
                },
                "examples": {
                  "200": {
                    "value": {
                      "code": "PL123456789",
                      "url": "https://examble.com/tracking",
                      "company": "Correios"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando o pedido ou o pacote não existem",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Rastreios"
        ],
        "description": "Adiciona um rastreio para um pacote de um pedido",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Código de rastreio"
                  },
                  "company": {
                    "type": "string",
                    "description": "Transportadora"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Link de rastreamento"
                  }
                },
                "required": [
                  "code"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "order_code",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "package_code",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lista os rastreios",
        "operationId": "get-api-v2-orders-order_code-packages-package_code-trackings",
        "responses": {
          "200": {
            "description": "Quando os rastreios são listados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "tracking_code": {
                      "type": "string",
                      "description": "Código de rastreio do pacote"
                    },
                    "tracked_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data e horário da última atualização do código de rastreio do pacote"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "URL para rastreio do pedido com a transportadora"
                    },
                    "company": {
                      "type": "string",
                      "description": "Transportadora do pacote"
                    }
                  },
                  "required": [
                    "tracking_code"
                  ]
                },
                "examples": {
                  "Rastreio": {
                    "value": {
                      "id": 15,
                      "tracking_code": "codigo-rastreio",
                      "tracked_at": "2022-12-23T15:20:18.893-03:00",
                      "url": "rastreiocorreios.com.br",
                      "company": "Correios"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando o pedido ou o pacote não existem",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Rastreios"
        ],
        "description": "Lista os rastreios de um pacote de um pedido"
      }
    },
    "/api/v2/orders/{order_code}/packages/{package_code}/trackings/{id}": {
      "delete": {
        "summary": "Remove um rastreio",
        "operationId": "delete-api-v2-orders-order_code-packages-package_code-trackings-id",
        "responses": {
          "204": {
            "description": "Quando o rastreio é removido"
          },
          "404": {
            "description": "Quando o pedido ou o pacote não existem",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Rastreios"
        ],
        "description": "Remove um rastreio"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "order_code",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "package_code",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/api/v2/carts/{cart_id}/items": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "cart_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lista os itens de um carrinho",
        "operationId": "get-api-v2-carts-cart_id-items",
        "responses": {
          "200": {
            "description": "Quando os itens do carrinho são listados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cart_item.v1"
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "description": "Lista os itens de um carrinho",
        "tags": [
          "Itens do carrinho"
        ]
      },
      "post": {
        "summary": "Cria um item do carrinho",
        "operationId": "post-api-v2-carts-cart_id-items",
        "responses": {
          "201": {
            "description": "Quando um item do carrinho é criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart_item.v1"
                }
              }
            }
          },
          "400": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                },
                "examples": {
                  "Sem os parâmetros obrigatórios": {
                    "value": {
                      "errors": {
                        "sku": [
                          "precisa ser informado"
                        ],
                        "quantity": [
                          "não pode ficar em branco"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando um carrinho ou variante não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "Registro não encontrado": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "description": "Permite criar um item do carrinho",
        "tags": [
          "Itens do carrinho"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true
                  },
                  "extra": {
                    "type": "object"
                  },
                  "place_id": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true
                  },
                  "store_coupon_code": {
                    "type": "string"
                  },
                  "customizations": {
                    "type": "array"
                  }
                },
                "required": [
                  "sku",
                  "quantity"
                ],
                "$ref": "#/components/schemas/Product.v0"
              }
            }
          },
          "description": "Cria um item do carrinho"
        }
      }
    },
    "/api/v2/carts/{cart_id}/items/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "cart_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Atualiza um item do carrinho",
        "operationId": "patch-api-v2-carts-cart_id-items-id",
        "responses": {
          "204": {
            "description": "Quando o item do carrinho é alterado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Audience_member.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando o item do carrinho ou o carrinho não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "description": "Atualiza um item do carrinho",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true
                  },
                  "place_id": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true
                  },
                  "extra": {
                    "type": "object"
                  },
                  "store_coupon_code": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Itens do carrinho"
        ]
      },
      "delete": {
        "summary": "Remove um item do carrinho",
        "operationId": "delete-api-v2-carts-cart_id-items-id",
        "responses": {
          "204": {
            "description": "Quando o item do carrinho é removido"
          },
          "404": {
            "description": "Quando o item do carrinho ou o carrinho não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Itens do carrinho"
        ],
        "description": "Remove um item do carrinho"
      }
    },
    "/api/v2/carts/{cart_id}/items/bulk": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "cart_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Adiciona itens ao carrinho",
        "operationId": "post-api-v2-carts-cart_id-items-bulk",
        "responses": {
          "201": {
            "description": "Quando os itens são adicionados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cart_item.v1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Quando os parâmetros são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "0": {
                              "type": "object",
                              "properties": {
                                "quantity": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "sku": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "place_id": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Erros de validação": {
                    "value": {
                      "errors": {
                        "items": {
                          "0": {
                            "sku": [
                              "deve ser preenchido"
                            ]
                          },
                          "1": {
                            "quantity": [
                              "deve ser maior que 0"
                            ]
                          },
                          "2": {
                            "place_id": [
                              "deve ser maior que 0"
                            ]
                          },
                          "3": {
                            "extra": [
                              "precisa ser um hash"
                            ],
                            "quantity": [
                              "precisa ser um inteiro"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando um carrinho ou variante não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "Registro não encontrado": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "tags": [
          "Carrinhos"
        ],
        "description": "Permite adicionar itens em bulk ao carrinho",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true
                  },
                  "extra": {
                    "type": "object"
                  },
                  "place_id": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true
                  },
                  "items": {
                    "type": "array",
                    "description": "Itens do carrinho",
                    "items": {
                      "type": "array",
                      "properties": {
                        "sku": {
                          "type": "string",
                          "description": "Código SKU da variante do produto"
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "Unidades do produto"
                        },
                        "customizations": {
                          "type": "array",
                          "description": "[Personalização](http://ajuda.vnda.com.br/pt-BR/articles/1763398-funcionalidades-produtos-personalizados) do produto",
                          "items": {
                            "properties": {
                              "Customization": {
                                "type": "string",
                                "description": "Adicione a customização de acordo com a [personalização](http://ajuda.vnda.com.br/pt-BR/articles/1763398-funcionalidades-produtos-personalizados) incluídas no Admin da loja. \nSe por exemplo a customização do produto é a cor, o parâmetro para a requisição deve ser `Color` ao invés de `CUstomization`.  \nSaiba mais sobre como utilizar esse parâmetro pelo exemplo de requsição localizado na seção de **Request Example** (ao lado do código da requisição)."
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "sku",
                        "quantity"
                      ]
                    },
                    "example": {
                      "itemcustomizado": {
                        "items": {
                          "value": [
                            {
                              "sku": "variante.sku1",
                              "quantity": 1,
                              "customizations": [
                                {
                                  "Color": "Black"
                                }
                              ]
                            },
                            {
                              "sku": "variante.sku2",
                              "quantity": 10,
                              "customizations": [
                                {
                                  "Color": "Red"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "sku",
                  "quantity"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v2/discounts": {
      "post": {
        "summary": "Cria uma promoção",
        "operationId": "post-api-v2-discounts",
        "responses": {
          "201": {
            "description": "Quando a promoção é criada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Promoções"
        ],
        "description": "Cria uma promoção",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "start_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "end_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "valid_to": {
                    "type": "string",
                    "enum": [
                      "store",
                      "cart"
                    ]
                  },
                  "description": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean",
                    "default": true
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "cpf": {
                    "type": "string",
                    "pattern": "[0-9]{11}"
                  },
                  "tags": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "start_at"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v2/discounts/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retorna uma promoção",
        "tags": [
          "Promoções"
        ],
        "responses": {
          "200": {
            "description": "Quando a promoção é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando a promoção não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-discounts-id",
        "description": "Retorna uma promoção"
      },
      "patch": {
        "summary": "Altera uma promoção",
        "tags": [
          "Promoções"
        ],
        "responses": {
          "204": {
            "description": "Quando a promoção é alterada"
          },
          "404": {
            "description": "Quando a promoção não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "operationId": "patch-api-v2-discounts-id",
        "description": "Altera uma promoção",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "start_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "end_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "valid_to": {
                    "type": "string",
                    "enum": [
                      "store",
                      "cart"
                    ]
                  },
                  "description": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean",
                    "default": true
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "cpf": {
                    "type": "string",
                    "pattern": "[0-9]{11}"
                  },
                  "tags": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "start_at"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove uma promoção",
        "operationId": "delete-api-v2-discounts-id",
        "responses": {
          "204": {
            "description": "Quando a promoção é removida"
          },
          "400": {
            "description": "Quando a promoção não pode ser removida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "with-coupons": {
                    "value": {
                      "error": "Essa promoção não pode ser excluída pois possui cupons utilizados"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando a promoção não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Promoções"
        ],
        "description": "Remove uma promoção"
      }
    },
    "/api/v2/discounts/{discount_id}/rules": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "discount_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lista as regras",
        "tags": [
          "Regras de desconto"
        ],
        "responses": {
          "200": {
            "description": "Quando as regras de desconto são listadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discount_rule.v1"
                  }
                }
              }
            }
          }
        },
        "description": "Lista as regras de desconto de uma promoção",
        "operationId": "get-api-v2-discounts-discount_id-rules"
      },
      "post": {
        "summary": "Cria uma regra",
        "operationId": "post-api-v2-discounts-discount_id-rules",
        "responses": {
          "200": {
            "description": "Quando a regra de desconto é criada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "apply_to": {
                      "type": "string",
                      "enum": [
                        "product",
                        "tag",
                        "subtotal",
                        "total",
                        "shipping"
                      ]
                    },
                    "min_quantity": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "string"
                    },
                    "channel": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Regras de desconto"
        ],
        "description": "Cria uma regra de desconto",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apply_to": {
                    "type": "string",
                    "enum": [
                      "product",
                      "tag",
                      "subtotal",
                      "total",
                      "shipping"
                    ]
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "R$",
                      "%"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "minimum": 0
                  },
                  "product_id": {
                    "type": "integer"
                  },
                  "tag_name": {
                    "type": "string"
                  },
                  "min_quantity": {
                    "type": "integer"
                  },
                  "shipping_method": {
                    "type": "string"
                  },
                  "min_subtotal": {
                    "type": "number",
                    "minimum": 0
                  },
                  "gift": {
                    "type": "boolean",
                    "default": false
                  },
                  "combinated_product_id": {
                    "type": "integer"
                  },
                  "client_tag": {
                    "type": "string"
                  },
                  "shipping_rule": {
                    "type": "string"
                  },
                  "gift_quantity": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "agent_tag": {
                    "type": "string"
                  },
                  "regions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "channel": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/discounts/{discount_id}/rules/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "discount_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Remove uma regra",
        "operationId": "delete-api-v2-discounts-discount_id-rules-id",
        "responses": {
          "200": {
            "description": "Quando a regra de desconto é removida"
          }
        },
        "tags": [
          "Regras de desconto"
        ],
        "description": "Remove uma regra de desconto"
      },
      "patch": {
        "summary": "Altera uma regra",
        "operationId": "patch-api-v2-discounts-discount_id-rules-id",
        "responses": {
          "204": {
            "description": "Quandoa regra de desconto é alterada"
          },
          "404": {
            "description": "Quando a regra de desconto não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "description": "Altera uma regra de desconto",
        "tags": [
          "Regras de desconto"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apply_to": {
                    "type": "string",
                    "enum": [
                      "product",
                      "tag",
                      "subtotal",
                      "total",
                      "shipping"
                    ]
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "R$",
                      "%"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "minimum": 0
                  },
                  "product_id": {
                    "type": "integer"
                  },
                  "tag_id": {
                    "type": "integer"
                  },
                  "min_quantity": {
                    "type": "integer"
                  },
                  "shipping_method": {
                    "type": "string"
                  },
                  "min_subtotal": {
                    "type": "number",
                    "minimum": 0
                  },
                  "gift": {
                    "type": "boolean",
                    "default": false
                  },
                  "combinated_product_id": {
                    "type": "integer"
                  },
                  "client_tag": {
                    "type": "string"
                  },
                  "shipping_rule": {
                    "type": "string"
                  },
                  "gift_quantity": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "agent_tag": {
                    "type": "string"
                  },
                  "regions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "channel": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/discounts/{discount_id}/coupons": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "discount_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lista os cupons",
        "tags": [
          "Cupons de desconto"
        ],
        "responses": {
          "200": {
            "description": "Quando os cupons são retornados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Coupon.v1"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-discounts-discount_id-coupons",
        "description": "Permite listar os cupons de desconto de uma promoção",
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "uses_per_code",
            "description": "Filtra os cupons pelo campo uses_per_code"
          }
        ]
      },
      "post": {
        "summary": "Cria um cupom",
        "operationId": "post-api-v2-discounts-discount_id-coupons",
        "responses": {
          "201": {
            "description": "Quando o cupom é criado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando o desconto não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Cupons de desconto"
        ],
        "description": "Cria um cupom de desconto",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "uses_per_code": {
                    "type": "integer"
                  },
                  "uses_per_user": {
                    "type": "integer"
                  },
                  "referrer_email": {
                    "type": "string",
                    "format": "email"
                  },
                  "quantity": {
                    "type": "integer"
                  },
                  "user_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/discounts/{discount_id}/coupons{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "discount_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Atualiza um cupom",
        "operationId": "patch-api-v2-discounts-discount_id-coupons-coupons_id",
        "responses": {
          "204": {
            "description": "Quando o cupom é atualizado"
          },
          "404": {
            "description": "Quando o coupom não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Cupons de desconto"
        ],
        "description": "Atualiza um cupom de desconto",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uses_per_code": {
                    "type": "integer",
                    "description": "Caso deseje um uso ilimitado do cupom, o valor desse campo deverá ser 0"
                  },
                  "uses_per_user": {
                    "type": "integer",
                    "description": "Caso deseje um uso ilimitado do cupom, o valor desse campo deverá ser 0"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove um cupom",
        "operationId": "delete-api-v2-discounts-discount_id-coupons-id",
        "responses": {
          "204": {
            "description": "Quando o cupom é removido"
          },
          "404": {
            "description": "Quando o cupom não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando o cupom estiver utilizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Cupons de desconto"
        ],
        "description": "Remove um cupom de desconto"
      }
    },
    "/api/v2/products": {
      "get": {
        "summary": "Lista os produtos",
        "tags": [
          "Produtos"
        ],
        "responses": {
          "200": {
            "description": "Quando os produtos são listados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product.v1"
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "id": 0,
                        "active": true,
                        "available": true,
                        "category_tags": [
                          {
                            "tag_type": "string",
                            "name": "string",
                            "title": "string"
                          }
                        ],
                        "description": "string",
                        "discount_id": 0,
                        "html_description": "string",
                        "image_url": "string",
                        "installments": [
                          0
                        ],
                        "min_quantity": "string",
                        "name": "string",
                        "on_sale": true,
                        "plain_description": "string",
                        "price": 0,
                        "rating": {
                          "rating": 0,
                          "votes": 0
                        },
                        "reference": "string",
                        "sale_price": 0,
                        "slug": "string",
                        "tag_names": [
                          "string"
                        ],
                        "updated_at": "string",
                        "url": "string",
                        "variants": [
                          {
                            "{id}": {
                              "available": true,
                              "available_quantity": 0,
                              "custom_attributes": {},
                              "handling_days": 0,
                              "height": 0,
                              "id": 1,
                              "image_url": "string",
                              "installments": [
                                0
                              ],
                              "inventories": [
                                {
                                  "created_at": "2019-08-24T14:15:22Z",
                                  "id": 0,
                                  "name": null,
                                  "place_id": 0,
                                  "price": 0,
                                  "quantity": 0,
                                  "quantity_sold": 0,
                                  "sale_price": 0,
                                  "slug": "string",
                                  "updated_at": "2019-08-24T14:15:22Z",
                                  "variant_id": 0
                                }
                              ],
                              "length": 0,
                              "main": true,
                              "min_quantity": 0,
                              "name": "string",
                              "norder": 0,
                              "price": 0,
                              "product_id": 0,
                              "properties": {
                                "property1": {
                                  "defining": true,
                                  "name": "string",
                                  "value": "string"
                                },
                                "property2": {
                                  "defining": true,
                                  "name": "string",
                                  "value": "string"
                                },
                                "property3": {
                                  "defining": true,
                                  "name": "string",
                                  "value": "string"
                                }
                              },
                              "quantity": 0,
                              "quantity_sold": 0,
                              "sale_price": 0,
                              "sku": "string",
                              "slug": "string",
                              "stock": 0,
                              "updated_at": "2019-08-24T14:15:22Z",
                              "weight": 0,
                              "width": 0
                            }
                          }
                        ],
                        "discount_rule": null,
                        "images": [
                          {
                            "id": 0,
                            "url": "string",
                            "updated_at": "2019-08-24T14:15:22Z",
                            "variant_ids": [
                              0
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Domínio de loja não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-products",
        "description": "Lista os produtos",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "Delimita a quantidade de itens retornados"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "Número da página"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Quantidade de produtos por página"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "reference",
            "description": "Filtra pela referência"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "ids",
            "description": "Filtra pelo ID dos produtos "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tag",
            "description": "Filtra produtos que coném a tag"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "updated_after",
            "description": "Filtra produtos alterados depois da data"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "newest"
              ]
            },
            "in": "query",
            "name": "sort",
            "description": "Exibe os produtos cadastrados recentemente primeiro"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "include_inactive",
            "description": "Inclui os produtos inativos na listagem"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "include_images",
            "description": "Inclui na requisição se deseja que venham todas as imagens do produto"
          }
        ]
      },
      "post": {
        "summary": "Cria um produto",
        "operationId": "post-api-v2-products",
        "responses": {
          "201": {
            "description": "Quando o produto é criado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "active": {
                      "type": "string",
                      "description": "Indica se o produto está ativo (`true`) ou inativo (`false`)",
                      "default": true
                    },
                    "reference": {
                      "type": "string",
                      "description": "Código de Referência do produto"
                    },
                    "name": {
                      "type": "string",
                      "description": "Nome do produto"
                    },
                    "description": {
                      "type": "string",
                      "description": "Descrição do produto"
                    },
                    "tag_list": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": "tag1, tag2",
                      "description": "Lista de tags associadas ao produto"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "product_type": {
                      "description": "Tipo de produto, entre:\n  - `sample`: amostra\n  - `subscription`: assinatura\n  - `product`: produto em geral",
                      "type": "string",
                      "enum": [
                        "product",
                        "sample",
                        "subscription"
                      ],
                      "default": "product"
                    }
                  },
                  "required": [
                    "reference",
                    "name"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Domínio de loja não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "description": "Cria um produto",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "reference": {
                    "type": "string"
                  },
                  "tag_list": {
                    "type": "string",
                    "example": "tag1, tag2"
                  }
                },
                "required": [
                  "name",
                  "reference"
                ],
                "$ref": "#/components/schemas/SimpleProduct"
              }
            }
          }
        }
      }
    },
    "/api/v2/products/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retorna um produto",
        "tags": [
          "Produtos"
        ],
        "responses": {
          "200": {
            "description": "Quando o produto é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.v1"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": 0,
                      "active": true,
                      "available": true,
                      "category_tags": [
                        {
                          "tag_type": "string",
                          "name": "string",
                          "title": "string"
                        }
                      ],
                      "description": "string",
                      "discount_id": 0,
                      "html_description": "string",
                      "image_url": "string",
                      "installments": [
                        0
                      ],
                      "min_quantity": "string",
                      "name": "string",
                      "on_sale": true,
                      "plain_description": "string",
                      "price": 0,
                      "rating": {
                        "rating": 0,
                        "votes": 0
                      },
                      "reference": "string",
                      "sale_price": 0,
                      "slug": "string",
                      "tag_names": [
                        "string"
                      ],
                      "updated_at": "string",
                      "url": "string",
                      "variants": [
                        {
                          "{id}": {
                            "available": true,
                            "available_quantity": 0,
                            "custom_attributes": {},
                            "handling_days": 0,
                            "height": 0,
                            "id": 1,
                            "image_url": "string",
                            "installments": [
                              0
                            ],
                            "inventories": [
                              {
                                "created_at": "2019-08-24T14:15:22Z",
                                "id": 0,
                                "name": null,
                                "place_id": 0,
                                "price": 0,
                                "quantity": 0,
                                "quantity_sold": 0,
                                "sale_price": 0,
                                "slug": "string",
                                "updated_at": "2019-08-24T14:15:22Z",
                                "variant_id": 0,
                                "place_name": "string"
                              }
                            ],
                            "length": 0,
                            "main": true,
                            "min_quantity": 0,
                            "name": "string",
                            "norder": 0,
                            "price": 0,
                            "product_id": 0,
                            "properties": {
                              "property1": {
                                "defining": true,
                                "name": "string",
                                "value": "string"
                              },
                              "property2": {
                                "defining": true,
                                "name": "string",
                                "value": "string"
                              },
                              "property3": {
                                "defining": true,
                                "name": "string",
                                "value": "string"
                              }
                            },
                            "quantity": 0,
                            "quantity_sold": 0,
                            "sale_price": 0,
                            "sku": "string",
                            "slug": "string",
                            "stock": 0,
                            "updated_at": "2019-08-24T14:15:22Z",
                            "weight": 0,
                            "width": 0
                          }
                        }
                      ],
                      "discount_rule": null,
                      "images": [
                        {
                          "id": 0,
                          "url": "string",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "variant_ids": [
                            0
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando o produto não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-products-id",
        "description": "Retorna um produto",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "coupon_codes",
            "description": "Lista de cupons para calcular o desconto do produto"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "include_inventory_place",
            "description": "Se \"true\", inclui o nome do local nos inventários das variantes"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "include_images",
            "description": "Se \"true\", inclui todas as imagens do produto"
          }
        ]
      },
      "patch": {
        "summary": "Atualiza um produto",
        "operationId": "patch-api-v2-products-id",
        "responses": {
          "204": {
            "description": "Quando o produto é atualizado"
          },
          "404": {
            "description": "Quando o produto não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviado são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "description": "Atualiza um produto",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "reference": {
                    "type": "string"
                  },
                  "tag_list": {
                    "type": "string",
                    "example": "tag1, tag2"
                  }
                },
                "required": [
                  "name",
                  "reference"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove um produto",
        "operationId": "delete-api-v2-products-id",
        "responses": {
          "204": {
            "description": "Quando o produto é removido"
          },
          "404": {
            "description": "Quando o produto não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "description": "Remove um produto"
      }
    },
    "/api/v2/products/reference/{reference}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "reference",
          "in": "path",
          "required": true,
          "description": "Referência do produto"
        }
      ],
      "patch": {
        "summary": "Atualiza um produto pela referência",
        "operationId": "patch-api-v2-products-reference-reference",
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "description": "Permite atualizar um produto pela referência",
        "requestBody": {
          "$ref": "#/components/requestBodies/Product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleProduct",
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean",
                    "default": true
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "product",
                      "sample",
                      "subscription"
                    ],
                    "default": "product"
                  }
                },
                "required": [
                  "reference",
                  "name"
                ]
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Produtos"
        ]
      }
    },
    "/api/v2/products/{id}/rate": {
      "post": {
        "summary": "Avalia um produto",
        "tags": [
          "Produtos"
        ],
        "responses": {
          "200": {
            "description": "Quando a avaliação é recebida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rating": {
                      "type": "string"
                    },
                    "votes": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "rating": "0.9",
                      "votes": "2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": "invalid rate value"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando o produto não tem variantes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": "product without variants"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-products-id-rate",
        "description": "Recebe uma avaliação e recalcula a pontuação atual",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 5
            },
            "in": "query",
            "name": "rate",
            "description": "Avaliação"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/api/v2/products/search": {
      "get": {
        "summary": "Busca os produtos",
        "tags": [
          "Produtos"
        ],
        "responses": {
          "200": {
            "description": "Quando os produtos são encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductSearch"
                      }
                    },
                    "aggregations": {
                      "type": "object",
                      "properties": {
                        "min_price": {
                          "type": "number"
                        },
                        "max_price": {
                          "type": "number"
                        },
                        "types": {
                          "type": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "property1": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "string"
                                  },
                                  "count": {
                                    "type": "number"
                                  }
                                }
                              }
                            },
                            "property2": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "string"
                                  },
                                  "count": {
                                    "type": "number"
                                  }
                                }
                              }
                            },
                            "property3": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "string"
                                  },
                                  "count": {
                                    "type": "number"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "results": [
                        {
                          "id": 0,
                          "active": true,
                          "available": true,
                          "subscription": true,
                          "slug": "string",
                          "reference": "string",
                          "reference_lowercase": "string",
                          "name": "string",
                          "description": "string",
                          "image_url": "string",
                          "url": "string",
                          "tags": [
                            {
                              "name": "string",
                              "title": "string",
                              "subtitle": "string",
                              "description": "string",
                              "importance": 0,
                              "type": "string",
                              "image_url": "string"
                            }
                          ],
                          "price": 0,
                          "on_sale": true,
                          "sale_price": 0,
                          "intl_price": 0,
                          "discount_id": 0,
                          "discount_rule": {
                            "type": "fixed",
                            "amount": 0
                          },
                          "discount": {
                            "name": "string",
                            "description": "string",
                            "facebook": true,
                            "valid_to": "string"
                          },
                          "images": [
                            {
                              "sku": "string",
                              "url": "string"
                            }
                          ],
                          "variants": [
                            {
                              "id": 1,
                              "sku": "string",
                              "sku_lowercase": "string",
                              "name": "string",
                              "full_name": "string",
                              "main": true,
                              "available": true,
                              "image_url": "string",
                              "price": 0,
                              "sale_price": 0,
                              "intl_price": 0,
                              "installments": [
                                {
                                  "number": 1,
                                  "price": 10,
                                  "interest": false,
                                  "interest_rate": 0,
                                  "total": 10
                                }
                              ],
                              "stock": 0,
                              "quantity": 0,
                              "quantity_sold": 0,
                              "min_quantity": 0,
                              "available_quantity": 0,
                              "custom_attributes": {},
                              "properties": {
                                "property1": {
                                  "defining": true,
                                  "name": "string",
                                  "value": "string"
                                },
                                "property2": {
                                  "defining": true,
                                  "name": "string",
                                  "value": "string"
                                },
                                "property3": {
                                  "defining": true,
                                  "name": "string",
                                  "value": "string"
                                }
                              },
                              "inventories": [
                                {
                                  "name": null,
                                  "slug": "string",
                                  "available": true,
                                  "price": 0,
                                  "sale_price": 0,
                                  "quantity": 0,
                                  "quantity_sold": 0,
                                  "place": {
                                    "id": 0,
                                    "name": "string"
                                  }
                                }
                              ],
                              "handling_days": 0,
                              "barcode": "string",
                              "weight": 0,
                              "width": 0,
                              "height": 0,
                              "length": 0
                            }
                          ],
                          "installments": [
                            {
                              "number": 1,
                              "price": 10,
                              "interest": false,
                              "interest_rate": 0,
                              "total": 10
                            }
                          ],
                          "created_at": "2019-08-24T14:15:22Z",
                          "updated_at": "2019-08-24T14:15:22Z"
                        }
                      ],
                      "aggregations": {
                        "min_price": 0,
                        "max_price": 0,
                        "types": {
                          "tag_0": [
                            {
                              "name": "string",
                              "title": "string",
                              "count": 0
                            },
                            {
                              "name": "string",
                              "title": "string",
                              "count": 0
                            }
                          ],
                          "tag_1": [
                            {
                              "name": "string",
                              "title": "string",
                              "count": 0
                            }
                          ]
                        },
                        "properties": {
                          "property1": [
                            {
                              "value": "string",
                              "count": 0
                            }
                          ],
                          "property2": [
                            {
                              "value": "string",
                              "count": 0
                            }
                          ],
                          "property3": [
                            {
                              "value": "string",
                              "count": 0
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-products-search",
        "description": "Busca os produtos de acordo com os parâmetros definidos",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "Número da página"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Quantidade de produtos por página"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "in": "query",
            "name": "ids[]",
            "description": "Filtra pelo ID dos produtos"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "term",
            "description": "Filtra produtos que contenham o termo"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "wildcard",
            "description": "Permite que o filtro 'term' realize filtragem de produtos por termo parcial"
          },
          {
            "schema": {
              "type": "object"
            },
            "in": "query",
            "name": "type_tags",
            "description": "Filtra pelo nome da tag dentro de um tipo de tag. Exemplo, type_tags[cor]=verde"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "in": "query",
            "name": "type_tags_operator",
            "description": "Operador lógico para o filtro de tag"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "property1_values[]",
            "description": "Filtra pelo valor da propriedade 1"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "in": "query",
            "name": "property1_operator",
            "description": "Operador lógico para o filtro de valor da propriedade 1"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "property2_values[]",
            "description": "Filtra pelo valor da propriedade 2"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "in": "query",
            "name": "property2_operator",
            "description": "Operador lógico para o filtro de valor da propriedade 2"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "property3_values[]",
            "description": "Filtra pelo valor da propriedade 3"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "in": "query",
            "name": "property3_operator",
            "description": "Operador lógico para o filtro de valor da propriedade 3"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "min_price",
            "description": "Filtra pelo preço de venda mínimo do produto"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "max_price",
            "description": "Filtra pelo preço de venda máximo do produto"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "tags[]",
            "description": "Filtra pelo nome das tags, independente do tipo"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "parent_tags",
            "description": "Filtra pelo nome das tags, independente do tipo"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "show_only_available",
            "description": "Filtra por produtos disponíveis"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "newest",
                "oldest",
                "lowest_price",
                "highest_price"
              ]
            },
            "in": "query",
            "name": "sort",
            "description": "Ordena o resultado da busca de produtos conforme a opção escolhida"
          }
        ]
      }
    },
    "/api/v2/variants/{sku}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "sku",
          "in": "path",
          "required": true,
          "description": "SKU da variante"
        }
      ],
      "get": {
        "summary": "Retorna uma variante",
        "tags": [
          "Variantes"
        ],
        "responses": {
          "201": {
            "description": "Quando a variante é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Variant"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": 95,
                      "main": false,
                      "available": true,
                      "sku": "SHOP0001",
                      "name": "Variation",
                      "slug": "variation",
                      "min_quantity": 1,
                      "quantity": 1,
                      "quantity_sold": 0,
                      "stock": 1,
                      "custom_attributes": {},
                      "properties": {},
                      "updated_at": "2020-10-27T11:54:32.018-03:00",
                      "price": 10,
                      "installments": [
                        10
                      ],
                      "available_quantity": 1,
                      "weight": 0.001,
                      "width": 1,
                      "height": 1,
                      "length": 1,
                      "handling_days": 0,
                      "inventories": [],
                      "sale_price": 10,
                      "image_url": "//b0.vnda.com.br/x120/shop/2014/07/08/variation.jpg",
                      "product_id": 6,
                      "norder": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando a variante não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-variants-sku",
        "description": "Retorna uma variante pelo SKU"
      },
      "patch": {
        "summary": "Atualiza uma variante",
        "operationId": "patch-api-v2-variants-sku",
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "description": "Permite atualizar uma variante pelo SKU",
        "tags": [
          "Variantes"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Variant",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "integer"
                  },
                  "main": {
                    "type": "boolean"
                  },
                  "width": {
                    "type": "number",
                    "description": "Largura do produto, em centímetros"
                  },
                  "height": {
                    "type": "number",
                    "description": "Altura do produto, em centímetros"
                  },
                  "length": {
                    "type": "number",
                    "description": "Comprimento do produito, em centímetros"
                  },
                  "weight": {
                    "type": "number",
                    "description": "Massa do produto, em gramas"
                  },
                  "handling_days": {
                    "type": "integer",
                    "description": "Dias de manuseio da variante"
                  },
                  "price": {
                    "type": "number",
                    "description": "Preço do item"
                  },
                  "custom_attributes": {
                    "type": "object",
                    "description": "Customização da variante"
                  },
                  "min_quantity": {
                    "type": "integer"
                  },
                  "norder": {
                    "type": "integer"
                  },
                  "property1": {
                    "$ref": "#/components/schemas/VariantProperty"
                  },
                  "property2": {
                    "$ref": "#/components/schemas/VariantProperty"
                  },
                  "property3": {
                    "$ref": "#/components/schemas/VariantProperty"
                  },
                  "barcode": {
                    "type": "string"
                  },
                  "quantity_sold": {
                    "type": "integer",
                    "description": "Quantidade de itens vendidos"
                  }
                },
                "required": [
                  "sku",
                  "quantity",
                  "price"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v2/products/{product_id}/variants/{sku}/images": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product_id"
        },
        {
          "$ref": "#/components/parameters/sku"
        }
      ],
      "get": {
        "summary": "Lista as imagens da variante com SKU na URL",
        "tags": [
          "Variantes"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/VariantImages"
          }
        },
        "operationId": "get-api-v2-products-product_id-variants-sku-images",
        "description": "Lista as imagens de uma variante passando o SKU da mesma na URL"
      }
    },
    "/api/v2/products/{product_id}/variants/images": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product_id"
        },
        {
          "schema": {
            "type": "string"
          },
          "in": "query",
          "name": "sku",
          "description": "SKU da variante"
        }
      ],
      "get": {
        "summary": "Lista as imagens da variante com SKU nos parâmetros",
        "tags": [
          "Variantes"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/VariantImages"
          }
        },
        "operationId": "get-api-v2-products-product_id-variants-images",
        "description": "Lista as imagens de uma variante passando o SKU da mesma nos parâmetros"
      }
    },
    "/api/v2/variants/{sku}/shipping_methods": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/sku"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "quantity",
            "allowEmptyValue": false,
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "zip",
            "allowEmptyValue": false,
            "required": true
          }
        ],
        "summary": "Calcula frete",
        "tags": [
          "Variantes"
        ],
        "operationId": "get-api-v2-variants-variant_sku-shipping_methods",
        "responses": {
          "200": {
            "$ref": "#/components/responses/VariantShippings"
          },
          "404": {
            "description": "Quando a variante não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "description": "Calcula o frete para uma determinada variante"
      }
    },
    "/api/v2/tags": {
      "get": {
        "summary": "Lista as tags",
        "tags": [
          "Tags"
        ],
        "responses": {
          "200": {
            "description": "Quando as tags são listadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag.v1"
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "products_count": 1,
                        "name": "camiseta",
                        "image_url": null,
                        "type": "",
                        "title": "Camisetas Legais",
                        "updated_at": "2015-03-10T04:33:08.699-03:00",
                        "subtitle": "Adulto e infantil",
                        "description": "<p>A loja oferece <strong>Camisetas</strong> para adultos e crianças</p>\n"
                      },
                      {
                        "updated_at": "2017-11-05T13:23:50.107-02:00",
                        "products_count": 0,
                        "image_url": "//a0.vnda.com.br/loja/2017/03/14/15_49_52_10_Flag.png?1509895430",
                        "name": "promo-camiseta",
                        "title": "promo-camiseta",
                        "subtitle": null,
                        "description": null,
                        "type": "flag"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-tags",
        "description": "Permite listar as tags",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "Indica a quantidade de tags que devem ser listadas (page será ignorado)",
            "deprecated": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "Número da página"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Quantidade de resultados por página"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "description": "Exibe somente as tags com o tipo indicado"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "types",
            "description": "Exibe somente as tags com um dos tipos indicados"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "names",
            "description": "Exibe somente as tags com um dos nomes indicados"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "images",
            "description": "Quando passado qualquer valor filtra as tags que contenham imagens"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "show_in_carts",
            "description": "Quando passado qualquer valor filtra as tags marcadas para serem exibidas no carrinho"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "product_id",
            "description": "Exibe somente as tags do produto indicado"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Texto livre que permite filtrar as tags pelo nome"
          },
          {
            "schema": {
              "type": "string",
              "default": "name,asc",
              "enum": [
                "name,asc",
                "name,desc",
                "type,asc",
                "type,desc",
                "title,asc",
                "title,desc",
                "products_count,asc",
                "products_count,desc"
              ]
            },
            "in": "query",
            "name": "sort",
            "description": "String no formato <field>,<direction> que determina o campo a ser ordenado e qual a ordem (asc,desc)"
          }
        ]
      },
      "post": {
        "summary": "Cria uma tag",
        "operationId": "post-api-v2-tags",
        "responses": {
          "201": {
            "description": "Quando a tag é criada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetos enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "Cria uma tag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "blurb": {
                    "type": "string",
                    "description": "Equivalente ao subtítulo"
                  },
                  "description": {
                    "type": "string"
                  },
                  "tag_type": {
                    "type": "string"
                  },
                  "show_in_carts": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v2/tags/types": {
      "get": {
        "summary": "Lista os tipos de tags",
        "tags": [
          "Tags"
        ],
        "responses": {
          "200": {
            "description": "Quanto os tipos são listados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-tags-types",
        "description": "Lista os tipos de tags usados em alguma tag",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "Número da página"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Quantidade de resultados por página"
          }
        ]
      }
    },
    "/api/v2/tags/{name}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "pattern": "[a-z0-9\\-_]+"
          },
          "name": "name",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retorna uma tag",
        "tags": [
          "Tags"
        ],
        "responses": {
          "200": {
            "description": "Quando a tag é retornada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando a tag não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-tags-name",
        "description": "Retorna uma tag"
      },
      "patch": {
        "summary": "Atualiza uma tag",
        "operationId": "patch-api-v2-tags-name",
        "responses": {
          "204": {
            "description": "Quando a tag é atualizada"
          },
          "404": {
            "description": "Quando a tag não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "Permite atualizar uma tag"
      },
      "delete": {
        "summary": "Remove uma tag",
        "operationId": "delete-api-v2-tags-name",
        "responses": {
          "204": {
            "description": "Quando a tag é removida"
          },
          "404": {
            "description": "Quando a tag não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "Remove uma tag"
      }
    },
    "/api/v2/coupon_codes/{code}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "code",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retorna um cupom",
        "tags": [
          "Cupons de desconto"
        ],
        "responses": {
          "200": {
            "description": "Quando o cupom é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    },
                    "discount_id": {
                      "type": "number"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "code",
                    "discount_id",
                    "updated_at"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "98008F",
                      "discount_id": 1,
                      "id": 1231,
                      "updated_at": "2020-10-27T19:12:51.858-03:00"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando o cupom não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-coupon_codes-code",
        "description": "Retorna os dados de um cupom usando o seu código"
      }
    },
    "/api/v2/carts/{cart_id}/payment/paypal": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "cart_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Cria um pedido no Paypal",
        "operationId": "post-api-v2-carts-cart_id-payments-paypal",
        "responses": {
          "200": {
            "description": "Quando o pedido é criado no Paypal",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          },
                          "rel": {
                            "type": "string"
                          },
                          "method": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "31G50456P87181405",
                      "status": "CREATED",
                      "links": [
                        {
                          "href": "https://api.sandbox.paypal.com/v2/checkout/orders/31G50456P87181405",
                          "rel": "self",
                          "method": "GET"
                        },
                        {
                          "href": "https://www.sandbox.paypal.com/checkoutnow?token=31G50456P87181405",
                          "rel": "approve",
                          "method": "GET"
                        },
                        {
                          "href": "https://api.sandbox.paypal.com/v2/checkout/orders/31G50456P87181405",
                          "rel": "update",
                          "method": "PATCH"
                        },
                        {
                          "href": "https://api.sandbox.paypal.com/v2/checkout/orders/31G50456P87181405/capture",
                          "rel": "capture",
                          "method": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Quando o pedido não é criado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Pagamentos"
        ],
        "description": "Cria um pedido no Paypal para que posteriormente possa receber um pagamento"
      }
    },
    "/api/v2/clients": {
      "get": {
        "summary": "Lista os clientes",
        "tags": [
          "Clientes"
        ],
        "responses": {
          "200": {
            "description": "Quando os clientes são encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client.v1"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-clients",
        "description": "Retorna uma lista de clientes. Caso seja informado o parâmetro \"email\", então apenas o cliente com esse email será retornado",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "email"
            },
            "in": "query",
            "name": "email",
            "description": "Retorna somente o cliente com o email informado",
            "deprecated": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "Número da página"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Registros por página"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "min_updated_at",
            "description": "Filtra os clientes pela menor data de atualização"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "max_updated_at",
            "description": "Filtra os clientes pela maior data de atualização"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "birthday_start",
            "description": "Data de inicío da filtragem de clientes pela data de aniversário"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "birthday_end",
            "description": "Data final da filtragem de clientes pela data de aniversário"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "has_phone",
            "description": "Filtra os clientes que possuem telefone"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "has_first_name",
            "description": "Filtra os clientes que possuem first name"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "user_id",
            "description": "Filtra os clientes por vendedor"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "term",
            "description": "Filtra os clientes que possuem o termo em alguns dos campos"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "birthdate"
              ]
            },
            "in": "query",
            "name": "sort",
            "description": "Ordena o resultado da busca de clientes conforme a opção escolhida"
          }
        ],
        "security": [
          {
            "Token": []
          }
        ]
      },
      "post": {
        "summary": "Cria um cliente",
        "operationId": "post-api-v2-clients",
        "responses": {
          "201": {
            "description": "Quando o cliente é criado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "gender": {
                      "type": "string"
                    },
                    "phone_area": {
                      "type": "string",
                      "pattern": "[0-9]+"
                    },
                    "phone": {
                      "type": "string",
                      "pattern": "[0-9]+"
                    },
                    "cpf": {
                      "type": "string",
                      "pattern": "[0-9]+"
                    },
                    "cnpj": {
                      "type": "string",
                      "pattern": "[0-9]+"
                    },
                    "ie": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "string"
                    },
                    "lists": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "facebook_uid": {
                      "type": "string"
                    },
                    "liked_facebook_page": {
                      "type": "boolean"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "birthdate": {
                      "type": "string",
                      "format": "date"
                    },
                    "recent_address": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "company_name": {
                            "type": "string"
                          },
                          "street_name": {
                            "type": "string"
                          },
                          "street_number": {
                            "type": "string"
                          },
                          "neighborhood": {
                            "type": "string"
                          },
                          "complement": {
                            "type": "string"
                          },
                          "reference": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip": {
                            "type": "string"
                          },
                          "first_phone_area": {
                            "type": "string"
                          },
                          "first_phone": {
                            "type": "string"
                          },
                          "second_phone_area": {
                            "type": "string"
                          },
                          "second_phone": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "documents": {
                            "type": "object",
                            "properties": {
                              "cpf": {
                                "type": "string"
                              },
                              "cnpj": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "description": "Permite criar um cliente",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "birthdate": {
                    "type": "string",
                    "format": "date"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "M",
                      "F"
                    ]
                  },
                  "tags": {
                    "type": "string",
                    "description": "separado por vírgula",
                    "example": "foo,bar"
                  },
                  "lists": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "password": {
                    "type": "string"
                  },
                  "password_confirmation": {
                    "type": "string"
                  },
                  "terms": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/clients/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": ""
        }
      ],
      "get": {
        "summary": "Retorna um cliente",
        "tags": [
          "Clientes"
        ],
        "responses": {
          "200": {
            "description": "Quando o cliente é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando o cliente não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-clients-id",
        "description": "Permite retornar as informações do cliente\nO auth_token do cliente pode ser informado no lugar do ID na URL"
      },
      "patch": {
        "summary": "Atualiza um cliente",
        "operationId": "patch-api-v2-clients-id",
        "responses": {
          "204": {
            "description": "Quando o cliente é atualizado"
          },
          "404": {
            "description": "Quando o cliente não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados estão incorretos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "description": "Permite atualizar as informações do cliente",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "birthdate": {
                    "type": "string",
                    "format": "date"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "M",
                      "F"
                    ]
                  },
                  "tags": {
                    "type": "string",
                    "description": "separado por vírgula",
                    "example": "foo,bar"
                  },
                  "lists": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "password": {
                    "type": "string"
                  },
                  "password_confirmation": {
                    "type": "string"
                  },
                  "terms": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove um cliente",
        "operationId": "delete-api-v2-clients-id",
        "responses": {
          "204": {
            "description": "Quando o cliente é removido"
          },
          "404": {
            "description": "Quando o cliente não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "description": "Permite remover um cliente"
      }
    },
    "/api/v2/clients/{id}/orders": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lista os pedidos",
        "tags": [
          "Clientes"
        ],
        "responses": {
          "200": {
            "description": "Quando os pedidos são retornados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order.v1"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-clients-id-orders",
        "description": "Retorna a lista de pedidos do cliente"
      }
    },
    "/api/v2/clients/{id}/addresses": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lista os endereços",
        "tags": [
          "Clientes"
        ],
        "responses": {
          "200": {
            "description": "Quando os endereços são listados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-clients-id-addresses",
        "description": "Lista os endereços do cliente utilizados nos pedidos que foram confirmados",
        "parameters": [
          {
            "$ref": "#/components/parameters/status"
          }
        ]
      }
    },
    "/api/v2/clients/{client_id}/registered_addresses": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "client_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lista os endereços cadastrados pelo cliente",
        "tags": [
          "Clientes"
        ],
        "responses": {
          "200": {
            "description": "Quando os endereços são listados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientAddress.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-clients-id-regitered-addresses",
        "description": "Lista os endereços cadastrados pelo cliente"
      },
      "post": {
        "summary": "Cria um endereço do cliente",
        "operationId": "post-api-v2-clients-id-regitered-addresses",
        "responses": {
          "201": {
            "description": "Quando o endereço do cliente é criado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientAddress.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando o cliente não existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "description": "Permite criar um endereço do cliente",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "street_name": {
                    "type": "string"
                  },
                  "street_number": {
                    "type": "string"
                  },
                  "complement": {
                    "type": "string"
                  },
                  "neighborhood": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "reference": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/clients/{client_id}/registered_addresses/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "client_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Atualiza um endereço do cliente",
        "operationId": "patch-api-v2-clients-id-regitered-addresses-id",
        "responses": {
          "200": {
            "description": "Quando o endereço do cliente é atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientAddress.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando o cliente ou endereço não existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "description": "Permite atualizar um endereço do cliente",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "street_name": {
                    "type": "string"
                  },
                  "street_number": {
                    "type": "string"
                  },
                  "complement": {
                    "type": "string"
                  },
                  "neighborhood": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "reference": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deleta o endereço cadastrados pelo cliente",
        "tags": [
          "Clientes"
        ],
        "responses": {
          "204": {
            "description": "Quando o endereço é deletado"
          },
          "404": {
            "description": "Quando o endereço não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "delete-api-v2-clients-id-regitered-addresses-id",
        "description": "Delete o endereço cadastrado pelo cliente"
      }
    },
    "/api/v2/clients/recover_password": {
      "parameters": [],
      "post": {
        "summary": "Reseta a senha",
        "operationId": "post-api-v2-clients-recover_password",
        "responses": {
          "200": {
            "description": "Quando a senha for criada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando um cliente não é encontrado com o email informado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "description": "Cria uma senha para o cliente e envia por email",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email",
            "description": "Email do cliente",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "no_send",
            "description": "Preencher para pular o envio do email de senha para o cliente"
          }
        ]
      }
    },
    "/api/v2/clients/{id}/credits": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Saldo de créditos",
        "tags": [
          "Clientes"
        ],
        "responses": {
          "200": {
            "description": "Quando o saldo é retornado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-clients-client_id-credits",
        "description": "Retorna o saldo de crétitos do cliente"
      }
    },
    "/api/v2/clients/{id}/credits/transfers": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Extrato de créditos",
        "tags": [
          "Clientes"
        ],
        "responses": {
          "200": {
            "description": "Quando as transferências são listadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "type": "object",
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "number"
                          }
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando o cliente não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-clients-id-credits-transfers",
        "description": "Retorna as transfertências de crétidos realizadas"
      }
    },
    "/api/v2/clients/{id}/bonuses": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Código do cliente"
        }
      ],
      "get": {
        "summary": "Lista os bônus",
        "tags": [
          "Clientes"
        ],
        "responses": {
          "200": {
            "description": "Quando os bônus são listados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bonus.v1"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-clients-id-bonuses",
        "description": "Lista os bônus do cliente que ainda não foram utilizados",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page",
            "description": "Número da página"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "per_page",
            "description": "Registros por página"
          }
        ]
      }
    },
    "/api/v2/clients/{id}/remove_personal_data": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": ""
        }
      ],
      "patch": {
        "summary": "Solicitação de esquecimento",
        "operationId": "patch-api-v2-clients-id-remove-personal-data",
        "responses": {
          "204": {
            "description": "Quando o cliente é marcado para ter seus dados pessoais removidos"
          },
          "404": {
            "description": "Quando o cliente não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "description": "Solicita a remoção (esquecimento) dos dados pessoais de um cliente, de acordo com a LGPD"
      }
    },
    "/api/v2/auth/email/{token}": {
      "get": {
        "summary": "Faz login do cliente por token",
        "operationId": "get-api-v2-auth-email-token",
        "responses": {
          "200": {
            "description": "Quanto o login é feito com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "token"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Quando o token do email é inválido ou expirou"
          }
        },
        "tags": [
          "Clientes"
        ],
        "description": "Faz o login do cliente pelo token salvo no campo auth_token",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "token",
            "in": "path",
            "required": true
          }
        ]
      }
    },
    "/api/v2/auth/client": {
      "post": {
        "summary": "Faz login do cliente",
        "operationId": "post-api-v2-auth-client",
        "responses": {
          "200": {
            "description": "Quanto o login é feito com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "auth_token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "auth_token"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Quando o email e/ou a senha estão vazios",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "'email' is mandatory",
                        "'password' is mandatory"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Quando o cliente não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "email and/or password invalid"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "description": "Faz o login do cliente por usuário e senha",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v2/carts/{cart_id}/payment": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "cart_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Faz o pagamento do carrinho",
        "operationId": "post-api-v2-carts-cart-payment_id-payment",
        "responses": {
          "301": {
            "description": "Quando o pagamento é processado corretamente",
            "headers": {
              "X-Attempt-Count": {
                "schema": {
                  "type": "number"
                },
                "description": "Número de tentativas de pagamento feitas para o carrinho"
              },
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URL do pedido na API"
              }
            }
          },
          "400": {
            "description": "Quando o carrinho não pode ser pago",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "examples": {
                  "Itens indisponíveis": {
                    "value": {
                      "error": "Os itens do carrinho não estão mais disponíveis"
                    }
                  },
                  "Alteração nos preços dos itens": {
                    "value": {
                      "error": "Houve uma alteração nos valores do carrinho"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando o carrinho não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Faz o pagamento do carrinho usando a forma de pagamento informada",
        "tags": [
          "Pagamentos"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payment_method": {
                    "type": "string",
                    "enum": [
                      "pix"
                    ],
                    "description": "Meio de pagamento"
                  },
                  "channel": {
                    "type": "string",
                    "default": "ecommerce",
                    "enum": [
                      "ecommerce",
                      "direct"
                    ],
                    "description": "Canal de venda do carrinho"
                  }
                },
                "required": [
                  "payment_method"
                ]
              }
            }
          },
          "description": ""
        }
      }
    },
    "/api/v2/menus": {
      "get": {
        "summary": "Lista os menus",
        "operationId": "get-api-v2-menus",
        "tags": [
          "Menus"
        ],
        "responses": {
          "200": {
            "description": "Quando os menus são listados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Menu.v1"
                  }
                }
              }
            }
          }
        },
        "description": "Lista os menus",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "parent_id"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "position"
          }
        ]
      },
      "post": {
        "summary": "Cria um menu",
        "operationId": "post-api-v2-menus",
        "tags": [
          "Menus"
        ],
        "responses": {
          "201": {
            "description": "Quando o menu é criado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Menu.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "description": "Cria um menu",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "tooltip": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "page_id": {
                    "type": "integer"
                  },
                  "parent_id": {
                    "type": "integer"
                  },
                  "position": {
                    "type": "string"
                  },
                  "new_position": {
                    "type": "string"
                  },
                  "external": {
                    "type": "boolean"
                  },
                  "tag_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "label",
                  "position",
                  "type"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v2/menus/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retorna um menu",
        "tags": [
          "Menus"
        ],
        "responses": {
          "200": {
            "description": "Quando o menu é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Menu.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando o menu não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-menus-id",
        "description": "Retorna um menu"
      },
      "patch": {
        "summary": "Atualiza um menu",
        "operationId": "patch-api-v2-menus-id",
        "responses": {
          "204": {
            "description": "Quando o menu é atualizado"
          },
          "404": {
            "description": "Quando o menu não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Menus"
        ],
        "description": "Atualiza um menu",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "tooltip": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "page_id": {
                    "type": "integer"
                  },
                  "parent_id": {
                    "type": "integer"
                  },
                  "position": {
                    "type": "string"
                  },
                  "new_position": {
                    "type": "string"
                  },
                  "external": {
                    "type": "boolean"
                  },
                  "tag_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "label",
                  "position",
                  "type"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove um menu",
        "operationId": "delete-api-v2-menus-id",
        "responses": {
          "204": {
            "description": "Quando o menu é removido"
          },
          "404": {
            "description": "Quando o menu não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Menus"
        ],
        "description": "Remove um menu"
      }
    },
    "/api/v2/menus/positions": {
      "get": {
        "summary": "Lista as posições dos menus",
        "operationId": "get-api-v2-menus-positions",
        "tags": [
          "Menus"
        ],
        "responses": {
          "200": {
            "description": "Quando as posições são listadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      "principal",
                      "submenu"
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "Lista as posições dos menus"
      }
    },
    "/api/v2/menus/reorder": {
      "post": {
        "summary": "Reordena os menus",
        "operationId": "post-api-v2-menus-reorder",
        "tags": [
          "Menus"
        ],
        "responses": {
          "200": {
            "description": "Quando os menus são reordenados"
          }
        },
        "description": "Reordena os menus na ordem em que seus ids são listados no request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "description": "A ordem dos elementos será replicada para os menus",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "ids"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "ids": [
                      32,
                      29,
                      28,
                      31,
                      30,
                      27
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/menus/tree": {
      "get": {
        "summary": "Retorna os menus em árvore",
        "operationId": "get-api-v2-menus-trees",
        "tags": [
          "Menus"
        ],
        "responses": {
          "200": {
            "description": "Quando os menus são listados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "description": "Posição",
                    "items": {
                      "$ref": "#/components/schemas/Menu_in_tree.v1"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retorna os menus em árvore, organizados pela posição"
      }
    },
    "/api/v2/site_message": {
      "get": {
        "summary": "Retorna uma mensagem do site",
        "tags": [
          "Mensagens do site"
        ],
        "responses": {
          "200": {
            "description": "Quando a mensagem do site existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site_message.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando a mensagem do site não existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-site-message",
        "description": "Retorna uma mensagem do site"
      },
      "patch": {
        "summary": "Cria ou atualiza uma mensagem do site",
        "operationId": "post-api-v2-site-message",
        "tags": [
          "Mensagens do site"
        ],
        "responses": {
          "204": {
            "description": "Quando a mensagem é criada ou atualizada"
          }
        },
        "description": "Cria ou atualiza uma mensagem do site",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "call_to_action": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove uma mensagem do site",
        "operationId": "delete-api-v2-site-message",
        "responses": {
          "204": {
            "description": "Quando a mensagem é ou não removida"
          },
          "404": {
            "description": "Quando o menu não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Mensagens do site"
        ],
        "description": "Remove uma mensagem do site"
      }
    },
    "/api/v2/shop/images": {
      "get": {
        "summary": "Lista as images",
        "tags": [
          "Loja"
        ],
        "responses": {
          "200": {
            "description": "Quando as imagens são listadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop_asset.v1"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-shop-images",
        "description": "Lista as imagens associadas a loja",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ]
      },
      "post": {
        "summary": "Cria uma imagem",
        "operationId": "post-api-v2-shop-images",
        "responses": {
          "201": {
            "description": "Quando a imagem é criada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shop_asset.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviado são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Loja"
        ],
        "description": "Permite cadastrar uma imagem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "position": {
                    "type": "string"
                  },
                  "file_uid": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/shop/images/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Remove uma imagem",
        "operationId": "delete-api-v2-shop-images-id",
        "responses": {
          "204": {
            "description": "Quando a imagem é removida"
          },
          "404": {
            "description": "Quando a imagem não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "description": "Permite remover uma imagem da loja",
        "tags": [
          "Loja"
        ]
      }
    },
    "/api/v2/shop/product_attributes": {
      "post": {
        "summary": "Cria um atributo customizado de produto",
        "operationId": "post-api-v2-shop-product-attributes",
        "responses": {
          "201": {
            "description": "Quando o atributo customizado de produto é criado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products_attributes.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "description": "Permite adicionar um atributo customizado de produto",
        "tags": [
          "Loja"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "index": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "mandatory": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "index",
                  "name",
                  "mandatory"
                ]
              }
            }
          },
          "description": "Quando o atributo customizado é criado"
        }
      },
      "parameters": []
    },
    "/api/v2/customizations": {
      "get": {
        "summary": "Lista as personalizações",
        "responses": {
          "200": {
            "description": "Quando as personalizações são listadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customization.v1"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-customizations",
        "description": "Permite listar as personalizações",
        "tags": [
          "Personalizações"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "product_id",
            "description": "Filtra por produto"
          }
        ]
      },
      "post": {
        "summary": "Cria uma personalização",
        "operationId": "post-api-v2-customizations",
        "responses": {
          "201": {
            "description": "Quando a personalização é criada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customization.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "description": "Permite criar uma personalização",
        "tags": [
          "Personalizações"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group_name": {
                    "type": "string"
                  },
                  "group_type": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  },
                  "image_uid": {
                    "type": "string"
                  },
                  "image_name": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number",
                    "default": 0
                  },
                  "quantity": {
                    "type": "integer",
                    "default": 0
                  },
                  "handling_days": {
                    "type": "integer",
                    "default": 0
                  },
                  "tag_id": {
                    "type": "integer"
                  },
                  "sku": {
                    "type": "string"
                  },
                  "pattern": {
                    "type": "string"
                  }
                },
                "required": [
                  "group_name",
                  "group_type",
                  "name",
                  "tag_id"
                ]
              }
            }
          },
          "description": ""
        }
      },
      "parameters": []
    },
    "/api/v2/customizations/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Remove uma personalização",
        "operationId": "delete-api-v2-customizations-id",
        "responses": {
          "204": {
            "description": "Quando a personalização é removida"
          },
          "404": {
            "description": "Quando a personalização não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Personalizações"
        ],
        "description": "Permite remover uma personalização"
      },
      "patch": {
        "summary": "Altera uma personalização",
        "operationId": "patch-api-v2-customizations-id",
        "responses": {
          "204": {
            "description": "Quando a personalização é alterada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customization.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando a personalização não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "description": "Permite alterar uma personalização",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group_name": {
                    "type": "string"
                  },
                  "group_type": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  },
                  "image_uid": {
                    "type": "string"
                  },
                  "image_name": {
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "string"
                  },
                  "handling_days": {
                    "type": "string"
                  },
                  "tag_id": {
                    "type": "string"
                  },
                  "sku": {
                    "type": "string"
                  },
                  "pattern": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Personalizações"
        ]
      },
      "get": {
        "summary": "Retorna uma personalização",
        "operationId": "get-api-v2-customizations-id",
        "responses": {
          "200": {
            "description": "Quando a personalização é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customization.v1"
                }
              }
            }
          },
          "404": {
            "description": "Quando a personalização não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Personalizações"
        ],
        "description": "Permite retornar uma personalização"
      }
    },
    "/api/v2/orders/{order_id}/items": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "order_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "boolean",
            "default": false
          },
          "in": "query",
          "name": "include_customizations_in_total",
          "description": "Inclui o preço dos produtos customizados no total do pedido"
        }
      ],
      "get": {
        "summary": "Lista os itens do pedido",
        "responses": {
          "200": {
            "description": "Quando os itens do pedido são listados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order_items.v1"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando a lista de itens do pedido não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-orders-order_id-items",
        "tags": [
          "Pedidos"
        ],
        "description": "Permite listar os itens do pedido"
      }
    },
    "/api/v2/orders/{order_id}/items/{item_id}/customizations": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "order_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "item_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lista as personalizações do item do pedido",
        "responses": {
          "200": {
            "description": "Quando as personalizações são listadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order_item_customization.v1"
                  }
                },
                "examples": {
                  "Com pesonalizações": {
                    "value": [
                      {
                        "id": 1,
                        "number": 1,
                        "group_name": "Color",
                        "sku": "A1",
                        "name": "Red",
                        "price": 0,
                        "intl_price": 0,
                        "handling_days": 0
                      }
                    ]
                  },
                  "Sem personalizações": {
                    "value": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando o item não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-orders-order_id-items-item_id-customizations",
        "tags": [
          "Pedidos"
        ],
        "description": "Permite listar as personalizações de cada item do pedido"
      }
    },
    "/api/v2/carts/{cart_id}/items/{item_id}/customizations": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "cart_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "item_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lista as personalizações do item do carrinho",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CartItemCustomizationList"
          },
          "404": {
            "description": "Quando o item não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-carts-cart_id-items-item_id-customizations",
        "tags": [
          "Carrinhos"
        ],
        "description": "Permite listar as personalizações de cada item do carrinho"
      },
      "delete": {
        "summary": "Remove uma personalização do item do carrinho",
        "operationId": "delete-api-v2-carts-cart_id-items-item_id-customizations",
        "responses": {
          "204": {
            "description": "Quando a personalização é removida"
          },
          "404": {
            "description": "Quando a personalização não é encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "description": "Permite remover uma customização do item do carrinho",
        "tags": [
          "Carrinhos"
        ]
      }
    },
    "/api/v2/mappings": {
      "get": {
        "summary": "Lista os mapeamentos",
        "tags": [
          "Mapeamentos"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Mappings"
          }
        },
        "operationId": "get-api-v2-mappings",
        "description": "Lista os mapeamentos",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ]
      },
      "post": {
        "summary": "Cria um mapeamento",
        "operationId": "post-api-v2-mappings",
        "responses": {
          "201": {
            "$ref": "#/components/responses/MappingCreate"
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "tags": [
          "Mapeamentos"
        ],
        "description": "Cria um mapeamento",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "from": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "to": {
                    "type": "string"
                  }
                },
                "required": [
                  "key"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v2/mappings/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retorna um mapeamento",
        "tags": [
          "Mapeamentos"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Mapping"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "operationId": "get-api-v2-mappings-id",
        "description": "Retorna os dados de um mapeamento"
      },
      "patch": {
        "summary": "Atualiza um mapeamento",
        "operationId": "patch-api-v2-mappings-id",
        "responses": {
          "204": {
            "description": "Quando o mapeamento é atualizado"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "tags": [
          "Mapeamentos"
        ],
        "description": "Atualiza um mapeamento",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "from": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "to": {
                    "type": "string"
                  }
                },
                "required": [
                  "key"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove um mapeamento",
        "operationId": "delete-api-v2-mappings-id",
        "responses": {
          "204": {
            "description": "Quando o mapeamento é removido"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "tags": [
          "Mapeamentos"
        ],
        "description": "Remove um mapeamento"
      }
    },
    "/api/v2/banners": {
      "get": {
        "summary": "Lista os banners",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Banners"
          }
        },
        "operationId": "get-api-v2-banners",
        "description": "Retorna a lista de banners",
        "tags": [
          "Mídias"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/only_valid"
          },
          {
            "$ref": "#/components/parameters/only_expired"
          },
          {
            "$ref": "#/components/parameters/only_scheduled"
          },
          {
            "$ref": "#/components/parameters/tag"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/no_paginate"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ]
      }
    },
    "/api/v2/banners/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retorna um banner",
        "tags": [
          "Mídias"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Banner"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "operationId": "get-api-v2-banners-id",
        "description": "Retorna os dados de um banner"
      }
    },
    "/api/v2/banners/all": {
      "get": {
        "summary": "Retorna os banners agrupados por tag",
        "tags": [
          "Mídias"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllBanners"
          }
        },
        "operationId": "get-api-v2-banners-all",
        "parameters": [],
        "description": "Retorna todos os banners disponíveis agrupados por tag"
      },
      "parameters": []
    },
    "/api/v2/carts/{cart_id}/shipping_methods/intl": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "cart_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Cálculo de frete internacional",
        "tags": [
          "Carrinhos"
        ],
        "responses": {
          "200": {
            "description": "Quando as formas de entrega são retornadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "{package_label}": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Shipping_methods.v1"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "operationId": "get-api-v2-carts-cart_id-shipping_methods-intl",
        "description": "Permite calcular o frete para pedidos internacionais",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "BRA",
              "pattern": "^[A-Z]{3}$"
            },
            "in": "query",
            "name": "country",
            "description": "Código do país de destino",
            "required": true
          }
        ]
      }
    },
    "/api/v2/carts/{cart_id}/samples": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "cart_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lista as amostras",
        "tags": [
          "Carrinhos"
        ],
        "responses": {
          "200": {
            "description": "Quando as amostras são listadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "image_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "url": {
                      "type": "string"
                    },
                    "variants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "main": {
                            "type": "boolean"
                          },
                          "sku": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "image_url": {
                            "type": "string",
                            "nullable": true
                          },
                          "product_id": {
                            "type": "integer"
                          },
                          "norder": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "id",
                          "main",
                          "sku",
                          "name",
                          "updated_at",
                          "image_url",
                          "product_id",
                          "norder"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "image_url",
                    "name",
                    "reference",
                    "updated_at",
                    "url",
                    "variants"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Quando um carrinho não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-carts-cart-id-samples",
        "description": "Lista as amostras disponíveis para determinado carrinho"
      }
    },
    "/api/v2/carts/{cart_id}/shipping_address": {
      "parameters": [
        {
          "$ref": "#/components/parameters/cart_id"
        }
      ],
      "get": {
        "summary": "Endereço de entrega",
        "tags": [
          "Carrinhos"
        ],
        "responses": {
          "200": {
            "description": "Quando o endereço é retornado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "company_name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "documents": {
                      "type": "object",
                      "description": "Serão retornados apenas os campos preenchidos",
                      "properties": {
                        "cpf": {
                          "type": "string"
                        },
                        "cnpj": {
                          "type": "string"
                        },
                        "ie": {
                          "type": "string"
                        }
                      }
                    },
                    "street_name": {
                      "type": "string"
                    },
                    "street_number": {
                      "type": "string",
                      "example": "188A"
                    },
                    "complement": {
                      "type": "string"
                    },
                    "neighborhood": {
                      "type": "string"
                    },
                    "first_phone_area": {
                      "type": "string",
                      "description": "Somente números",
                      "example": "11"
                    },
                    "first_phone": {
                      "type": "string",
                      "description": "Somente números",
                      "example": "984453322"
                    },
                    "second_phone_area": {
                      "type": "string",
                      "description": "Somente números"
                    },
                    "second_phone": {
                      "type": "string",
                      "description": "Somente números"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "zip": {
                      "type": "string",
                      "description": "Somente números",
                      "example": "90050000"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "example": "RS",
                      "minLength": 2,
                      "maxLength": 2
                    },
                    "recipient_name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "street_name",
                    "street_number",
                    "neighborhood",
                    "first_phone_area",
                    "first_phone",
                    "zip",
                    "city",
                    "state"
                  ],
                  "$ref": "#/components/schemas/Shipping_address"
                }
              }
            }
          },
          "404": {
            "description": "Quando o carrinho não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-carts-cart_id-shipping_address",
        "description": "Retorna o endereço de entrega"
      },
      "post": {
        "summary": "Adiciona um endereço de entrega",
        "description": "Adiciona um endereço de entrega no carrinho",
        "tags": [
          "Envio do carrinho"
        ],
        "operationId": "post-api-v2-carts-cart_id-shipping_address",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shipping_address"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Endereço adicionado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart_item.v1"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/api/v2/carts/{cart_id}/coupon_code": {
      "parameters": [
        {
          "$ref": "#/components/parameters/cart_id"
        }
      ],
      "post": {
        "summary": "Associa código de cupom ao carrinho",
        "tags": [
          "Carrinhos"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Código do cupom"
                  }
                },
                "required": [
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Quando o cupom é associado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Código do cupom"
                    },
                    "discount": {
                      "type": "number"
                    },
                    "rebate_token": {
                      "type": "string"
                    },
                    "rebate_discount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "code",
                    "discount",
                    "rebate_token",
                    "rebate_discount"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Quando o carrinho ou o desconto não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-api-v2-carts-cart_id-coupon_code",
        "description": "Associa um código de cupom ao carrinho"
      }
    },
    "/api/v2/orders/channels": {
      "get": {
        "summary": "Lista os canais dos pedidos",
        "tags": [
          "Pedidos"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Channels"
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "operationId": "get-api-v2-orders-channels",
        "description": "Lista todos os channels usados nos pedidos criados"
      }
    },
    "/api/v2/orders/states": {
      "get": {
        "summary": "Lista os estados dos pedidos",
        "tags": [
          "Pedidos"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/States"
          },
          "404": {
            "description": "Domínio de loja não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-orders-states",
        "description": "Lista todos os estados usados nos pedidos criados",
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v2/products/{product_id}/price": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "product_id",
          "in": "path",
          "required": true,
          "description": "ID do produto"
        }
      ],
      "get": {
        "summary": "Lista os preços do produto",
        "tags": [
          "Produtos"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProductPrice"
          }
        },
        "operationId": "get-api-v2-products-product_id-price",
        "description": "Retorna o preço do produto e das variantes",
        "security": [
          {
            "Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/coupon_codes"
          }
        ]
      }
    },
    "/api/v2/products/{product_id}/images": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product_id"
        }
      ],
      "get": {
        "summary": "Lista as imagens do produto",
        "tags": [
          "Produtos"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProductImages"
          }
        },
        "operationId": "get-api-v2-products-product_id-images",
        "description": "Lista as imagens do produto"
      },
      "post": {
        "summary": "Cria uma imagem do produto",
        "tags": [
          "Produtos"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/ProductImage"
          },
          "404": {
            "description": "Quando o produto não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "variant_ids": {
                    "type": "array",
                    "description": "IDs da variantes associadas a imagem",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "file_url"
                ]
              }
            }
          }
        },
        "operationId": "post-api-v2-products-product_id-images",
        "description": "Cria uma imagem do produto"
      }
    },
    "/api/v2/products/{product_id}/images/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product_id"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Deleta uma imagem do produto",
        "tags": [
          "Produtos"
        ],
        "responses": {
          "204": {
            "description": "Quando a imagem é deletada"
          },
          "404": {
            "description": "Quando o produto ou a imagem não são encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "delete-api-v2-products-product_id-images-id",
        "description": "Deleta uma imagem do produto"
      }
    },
    "/api/v2/products/{product_id}/images/reorder": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product_id"
        }
      ],
      "post": {
        "summary": "Reordena imagens do produto",
        "tags": [
          "Produtos"
        ],
        "responses": {
          "200": {
            "description": "Quando as imagens são reordenadas"
          },
          "404": {
            "description": "Quando o produto não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "ids"
                ]
              }
            }
          }
        },
        "operationId": "post-api-v2-products-product_id-images-reorder",
        "description": "Reordena as imagens do produto"
      }
    },
    "/api/v2/products/{product_id}/images/{id}/add_variant": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product_id"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Associa imagem com variante",
        "tags": [
          "Produtos"
        ],
        "responses": {
          "200": {
            "description": "Quando a imagem é associada com a variante"
          },
          "404": {
            "description": "Quando o produto ou a imagem não são encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "variant_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "variant_id"
                ]
              }
            }
          }
        },
        "operationId": "post-api-v2-products-product_id-images-id-add_variant",
        "description": "Associa a imagem com uma variante"
      }
    },
    "/api/v2/products/{product_id}/images/{id}/remove_variant": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product_id"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Desassocia imagem da variante",
        "tags": [
          "Produtos"
        ],
        "responses": {
          "200": {
            "description": "Quando a imagem é desassociada da variante"
          },
          "404": {
            "description": "Quando o produto ou a imagem não são encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "variant_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "variant_id"
                ]
              }
            }
          }
        },
        "operationId": "post-api-v2-products-product_id-images-id-remove_variant",
        "description": "Remove a associação da imagem com uma variante"
      }
    },
    "/api/v2/orders/{order_code}/packages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/order_code"
        }
      ],
      "get": {
        "summary": "Lista os pacotes de um pedido",
        "tags": [
          "Pacotes"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Packages"
          },
          "404": {
            "description": "Pedido ou pacote não encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-orders-order_code-packages",
        "description": "Retorna uma lista de pacotes de um pedido",
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v2/events": {
      "post": {
        "summary": "Dispara eventos",
        "operationId": "post-api-v2-events",
        "responses": {
          "204": {
            "description": "Quando o evento é recebido"
          },
          "422": {
            "description": "Quando os parâmetros enviados são inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Eventos"
        ],
        "description": "Indica para a API que dererminado evento aconteceu e que ela deve disparar as ações relacionadas",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "event_type",
            "required": true,
            "description": "Evento que ocorreu"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "description": "ID do recurso selacionado ao evento",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "browser_ip",
            "description": "IP do usuário"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "user_agent",
            "description": "User agent do usuário"
          }
        ]
      }
    },
    "/api/v2/users/{id}/payables": {
      "get": {
        "tags": [
          "Recebíveis de usuários"
        ],
        "summary": "Lista os recebíveis de um usuário pelo ID",
        "responses": {
          "200": {
            "description": "Lista de recebíveis do usuário",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payables.v1"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando o usuário não está cadastrado como recebedor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "description": "Permite a listagem de recebíveis (comissão) de um usuário vendedor da loja, quando ocorre split de pagamentos via Pagarme ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Código idenficador de usuário"
          }
        ],
        "operationId": "get-api-v2-users-id-payables"
      }
    },
    "/api/v2/products/{product_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product_id"
        }
      ],
      "get": {
        "summary": "Retorna um produto",
        "tags": [
          "Produto"
        ],
        "responses": {
          "200": {
            "description": "Produto encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.v1"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": 0,
                      "active": true,
                      "available": true,
                      "category_tags": [
                        {
                          "tag_type": "string",
                          "name": "string",
                          "title": "string"
                        }
                      ],
                      "description": "string",
                      "discount_id": 0,
                      "html_description": "string",
                      "image_url": "string",
                      "installments": [
                        0
                      ],
                      "min_quantity": "string",
                      "name": "string",
                      "on_sale": true,
                      "plain_description": "string",
                      "price": 0,
                      "rating": {
                        "rating": 0,
                        "votes": 0
                      },
                      "reference": "string",
                      "sale_price": 0,
                      "slug": "string",
                      "tag_names": [
                        "string"
                      ],
                      "updated_at": "string",
                      "url": "string",
                      "variants": [
                        {
                          "{id}": {
                            "available": true,
                            "available_quantity": 0,
                            "custom_attributes": {},
                            "handling_days": 0,
                            "height": 0,
                            "id": 1,
                            "image_url": "string",
                            "installments": [
                              0
                            ],
                            "inventories": [
                              {
                                "created_at": "2019-08-24T14:15:22Z",
                                "id": 0,
                                "name": null,
                                "place_id": 0,
                                "price": 0,
                                "quantity": 0,
                                "quantity_sold": 0,
                                "sale_price": 0,
                                "slug": "string",
                                "updated_at": "2019-08-24T14:15:22Z",
                                "variant_id": 0,
                                "place_name": "string"
                              }
                            ],
                            "length": 0,
                            "main": true,
                            "min_quantity": 0,
                            "name": "string",
                            "norder": 0,
                            "price": 0,
                            "product_id": 0,
                            "properties": {
                              "property1": {
                                "defining": true,
                                "name": "string",
                                "value": "string"
                              },
                              "property2": {
                                "defining": true,
                                "name": "string",
                                "value": "string"
                              },
                              "property3": {
                                "defining": true,
                                "name": "string",
                                "value": "string"
                              }
                            },
                            "quantity": 0,
                            "quantity_sold": 0,
                            "sale_price": 0,
                            "sku": "string",
                            "slug": "string",
                            "stock": 0,
                            "updated_at": "2019-08-24T14:15:22Z",
                            "weight": 0,
                            "width": 0
                          }
                        }
                      ],
                      "discount_rule": null,
                      "images": [
                        {
                          "id": 0,
                          "url": "string",
                          "updated_at": "2019-08-24T14:15:22Z",
                          "variant_ids": [
                            0
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Produto não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.v1"
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-products-id",
        "description": "Retorna um produto pelo código identificador (`product_id`)",
        "parameters": [
          {
            "$ref": "#/components/parameters/coupon_codes",
            "description": "Cupons para calcular o desconto no produto consultado"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "include_inventory_place",
            "description": "Selecione `true` para incluir o nome do local de armazenamento no retorno da requisição"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "include_images",
            "description": "Selecione `true` para incluir todas as imagens do produto"
          }
        ]
      },
      "patch": {
        "summary": "Atualiza um produto",
        "operationId": "patch-api-v2-products-id",
        "responses": {
          "204": {
            "description": "Produto atualizado"
          },
          "404": {
            "description": "Produto não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Parâmetros enviados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Produto"
        ],
        "description": "Atualiza informações de um produto no catálogo pelo código identificador (`product_id`)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleProduct"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove um produto",
        "operationId": "delete-api-v2-products-id",
        "responses": {
          "204": {
            "description": "Produto removido"
          },
          "404": {
            "description": "Produto não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Produto"
        ],
        "description": "Remove um produto do catálogo pelo código indentificador (`product_id`)"
      }
    },
    "/api/v2/products/{product_id}/rate": {
      "post": {
        "summary": "Avalia um produto",
        "tags": [
          "Produto"
        ],
        "responses": {
          "200": {
            "description": "Avaliação enviada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rating": {
                      "type": "string",
                      "description": "Média das avaliações"
                    },
                    "votes": {
                      "type": "string",
                      "description": "Número de avaliações recebidas"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "rating": "0.9",
                      "votes": "2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros enviados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": "invalid rate value"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Produto não possui variantes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": "product without variants"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v2-products-id-rate",
        "description": "Recebe uma avaliação e recalcula a pontuação atual",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 5
            },
            "in": "query",
            "name": "rate",
            "description": "Avaliação"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/product_id"
        }
      ]
    },
    "/api/v2/products/{product_id}/variants/{variant_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product_id"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "variant_id",
          "in": "path",
          "required": true,
          "description": "Código identificador da variante"
        }
      ],
      "patch": {
        "summary": "Atualiza uma variante",
        "operationId": "patch-api-v2-products-product_id-variants-id",
        "responses": {
          "204": {
            "description": "Variante atualizada"
          },
          "404": {
            "description": "Variante não existente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Parâmetros enviados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Variante de produto"
        ],
        "description": "Atualiza as informações de um variante",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "integer"
                  },
                  "main": {
                    "type": "boolean"
                  },
                  "weight": {
                    "type": "number",
                    "description": "Massa do produto, em gramas"
                  },
                  "width": {
                    "type": "number",
                    "description": "Largura do produto, em centímetros"
                  },
                  "height": {
                    "type": "number",
                    "description": "Altura do produto, em centímetros"
                  },
                  "length": {
                    "type": "number",
                    "description": "Comprimento do produito, em centímetros"
                  },
                  "handling_days": {
                    "type": "integer",
                    "description": "Dias de manuseio da variante"
                  },
                  "price": {
                    "type": "number"
                  },
                  "custom_attributes": {
                    "type": "object",
                    "description": "Customização da variante"
                  },
                  "min_quantity": {
                    "type": "integer"
                  },
                  "norder": {
                    "type": "integer"
                  },
                  "property1": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "defining": {
                        "type": "boolean"
                      }
                    }
                  },
                  "property2": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "defining": {
                        "type": "boolean"
                      }
                    }
                  },
                  "property3": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "defining": {
                        "type": "boolean"
                      }
                    }
                  },
                  "barcode": {
                    "type": "string"
                  },
                  "quantity_sold": {
                    "type": "integer",
                    "description": "Quantidade de itens vendidos"
                  }
                },
                "required": [
                  "sku",
                  "quantity",
                  "price"
                ]
              }
            }
          }
        },
        "deprecated": true
      },
      "delete": {
        "summary": "Remove uma variante",
        "operationId": "delete-api-v2-products-product_id-variants-id",
        "responses": {
          "204": {
            "description": "Quando a variante é removida"
          },
          "404": {
            "description": "Quando a variante não existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Variante de produto"
        ],
        "description": "Permite remover uma variante"
      }
    },
    "/api/v2/products/{product_id}/images/{image_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product_id"
        },
        {
          "$ref": "#/components/parameters/image_id"
        }
      ],
      "delete": {
        "summary": "Deleta uma imagem do produto",
        "tags": [
          "Imagens de produtos e variantes"
        ],
        "responses": {
          "204": {
            "description": "Quando a imagem é deletada"
          },
          "404": {
            "description": "Quando o produto ou a imagem não são encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "operationId": "delete-api-v2-products-product_id-images-id",
        "description": "Deleta uma imagem do produto"
      }
    },
    "/api/v2/products/{product_id}/images/{image_id}/add_variant": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product_id"
        },
        {
          "$ref": "#/components/parameters/image_id"
        }
      ],
      "post": {
        "summary": "Associa imagem com variante",
        "tags": [
          "Imagens de produtos e variantes"
        ],
        "responses": {
          "200": {
            "description": "Quando a imagem é associada com a variante"
          },
          "404": {
            "description": "Quando o produto ou a imagem não são encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "variant_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "variant_id"
                ]
              }
            }
          }
        },
        "operationId": "post-api-v2-products-product_id-images-id-add_variant",
        "description": "Associa a imagem com uma variante"
      }
    },
    "/api/v2/products/{product_id}/images/{image_id}/remove_variant": {
      "parameters": [
        {
          "$ref": "#/components/parameters/product_id"
        },
        {
          "$ref": "#/components/parameters/image_id"
        }
      ],
      "post": {
        "summary": "Desassocia imagem da variante",
        "tags": [
          "Imagens de produtos e variantes"
        ],
        "responses": {
          "200": {
            "description": "Quando a imagem é desassociada da variante"
          },
          "404": {
            "description": "Quando o produto ou a imagem não são encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "variant_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "variant_id"
                ]
              }
            }
          }
        },
        "operationId": "post-api-v2-products-product_id-images-id-remove_variant",
        "description": "Remove a associação da imagem com uma variante"
      }
    },
    "/api/v2/carts/{cart_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Cart.id"
        }
      ],
      "get": {
        "summary": "Retorna um carrinho",
        "operationId": "get-api-v2-carts-id",
        "tags": [
          "Carrinhos da loja"
        ],
        "description": "Retorna as informações de um carrinho pelo seu `id` ou `token`",
        "responses": {
          "200": {
            "description": "Carrinho encontrado",
            "headers": {
              "X-Attempt-Count": {
                "schema": {
                  "type": "integer"
                },
                "description": "O número de tentativas de pagamento"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart.v1"
                }
              }
            }
          },
          "404": {
            "description": "Carrinho não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualiza um carrinho",
        "operationId": "patch-api-v2-carts-id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cart.simple"
              }
            }
          }
        },
        "tags": [
          "Carrinhos da loja"
        ],
        "description": "Permite atualizar os atributos de um carrinho",
        "responses": {
          "204": {
            "description": "Carrinho atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart.v1"
                }
              }
            }
          },
          "404": {
            "description": "Carrinho não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      },
      "delete": {
        "summary": "Exclui um carrinho",
        "operationId": "delete-api-v2-carts-id",
        "tags": [
          "Carrinhos da loja"
        ],
        "description": "Permite excluir um carrinho",
        "responses": {
          "204": {
            "description": "Carrinho excluído com sucesso"
          },
          "404": {
            "description": "Carrinho não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "404": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/carts/{cart_id}/items/{item_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Cart.id"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "item_id",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Atualiza um item do carrinho",
        "operationId": "patch-api-v2-carts-cart_id-items-id",
        "responses": {
          "204": {
            "description": "Item do carrinho alterado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart.v1"
                }
              }
            }
          },
          "404": {
            "description": "Item ou o carrinho não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "description": "Atualiza um item do carrinho",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product.v0"
              }
            }
          }
        },
        "tags": [
          "Itens do carrinho"
        ]
      },
      "delete": {
        "summary": "Remove um item do carrinho",
        "operationId": "delete-api-v2-carts-cart_id-items-id",
        "responses": {
          "204": {
            "description": "Item do carrinho removido"
          },
          "404": {
            "description": "Item ou o carrinho não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Itens do carrinho"
        ],
        "description": "Remove um item do carrinho"
      }
    },
    "/api/v2/carts/{cart_id}/shipping_methods/{value_method}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Cart.id"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "value_method",
          "in": "path",
          "required": true,
          "description": "Tipo de envio (`value`)"
        }
      ],
      "patch": {
        "summary": "Atualiza o método de envio de um carrinho",
        "operationId": "patch-api-v2-carts-cart_id-shipping_methods-value_method",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shipping_methods.v1"
              }
            }
          }
        },
        "tags": [
          "Envio do carrinho"
        ],
        "description": "Atualiza o método para o envio dos itens do carrinho",
        "responses": {
          "204": {
            "description": "Carrinho atualizado com sucesso"
          },
          "404": {
            "description": "Carrinho não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/api/v2/carts/{cart_id}/shipping_methods": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Cart.id"
        }
      ],
      "get": {
        "summary": "Cálculo de frete",
        "tags": [
          "Envio do carrinho"
        ],
        "operationId": "get-api-v2-carts-cart_id-shipping_methods",
        "description": "Calculo os método de envio disponíveis para o carrinho",
        "parameters": [
          {
            "$ref": "#/components/parameters/Cart.id"
          }
        ],
        "responses": {
          "200": {
            "description": "Formas de envio disponíveis retornadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "{package_label}": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Shipping_methods.v1"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/api/v2/carts/{cart_id}/installments": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Cart.id"
        }
      ],
      "get": {
        "summary": "Calcula as parcelas de pagamento",
        "tags": [
          "Pagamento"
        ],
        "operationId": "get-api-v2-carts-cart_id-installments",
        "description": "Calcula as parcelas de pagamento para valor total do carrinho",
        "responses": {
          "200": {
            "description": "Carrinho encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cart_installment.v1"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Carrinho não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                },
                "examples": {
                  "Não encontrado": {
                    "value": {
                      "error": "not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/orders/{order_code}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Order.code"
        },
        {
          "$ref": "#/components/parameters/include_customizations_in_total"
        }
      ],
      "get": {
        "summary": "Retorna um pedido",
        "tags": [
          "Pedidos"
        ],
        "operationId": "get-api-v2-orders-order-code",
        "description": "Retorna os dados de um pedido pelo `code` ou `token` do pedido",
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "include_shipping_address",
            "description": "Inclui as formas de entrega do pedido"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.v1"
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualiza dados extras de um pedido",
        "operationId": "patch-api-v2-orders-order_code",
        "description": "Atualiza o campo de dados extras de um pedido pelo `code` do pedido",
        "tags": [
          "Pedidos"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "extra": {
                    "type": "object",
                    "description": "Campo para registro de observações, chave ou valores necessários"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Dado extra alterado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipping_address"
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/api/v2/orders/{order_code}/events": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Order.code"
        }
      ],
      "get": {
        "summary": "Retorna os eventos ocorridos em um pedido",
        "tags": [
          "Pedidos"
        ],
        "operationId": "get-api-v2-orders-order-code-events",
        "description": "Retorna a *timeline* de eventos ocorridos em um pedido",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  }
                },
                "examples": {
                  "events": {
                    "value": [
                      {
                        "occurred_at": "2022-12-26T11:53:12.401-03:00",
                        "name": "Pedido enviado",
                        "user": "Jessica",
                        "ip": "172.29.33.150",
                        "user_agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36",
                        "created_at": "2022-12-26T11:53:12.402-03:00",
                        "updated_at": "2022-12-26T11:53:12.402-03:00"
                      },
                      {
                        "occurred_at": "2022-12-26T11:53:28.136-03:00",
                        "name": "Pedido entregue",
                        "user": "Jessica",
                        "ip": "178.29.79.40",
                        "user_agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36",
                        "created_at": "2022-12-26T11:53:28.136-03:00",
                        "updated_at": "2022-12-26T11:53:28.136-03:00"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/orders/{order_code}/reviews": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Order.code"
        }
      ],
      "get": {
        "summary": "Retorna a avaliação de um pedido",
        "tags": [
          "Pedidos"
        ],
        "operationId": "get-api-v2-orders-order-code-reviews",
        "description": "Retorna a avaliação que o cliente fez em um pedido",
        "responses": {
          "200": {
            "description": "Resenhas retornadas"
          },
          "404": {
            "description": "Pedido não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/orders/{order_code}/discounts": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Order.code"
        }
      ],
      "get": {
        "summary": "Retorna os descontos de um pedido",
        "tags": [
          "Pedidos"
        ],
        "operationId": "get-api-v2-orders-order-code-discounts",
        "description": "Retorna os descontos de um pedido pelo `code` ou `token` do pedido",
        "responses": {
          "200": {
            "description": "Descontos retornados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  }
                },
                "example": {
                  "Desconto": {
                    "value": [
                      {
                        "name": "Pagamento via slip",
                        "valid_to": "payment",
                        "apply_to": "cart",
                        "type": "%",
                        "value": "10,",
                        "package": null,
                        "sku": null,
                        "created_at": "2022-12-02T12:00:03.651-03:00",
                        "updated_at": "2022-12-02T12:00:03.651-03:00"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/orders/{order_code}/shipping_address": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Order.code"
        }
      ],
      "get": {
        "summary": "Retorna o endereço de envio",
        "description": "Retorna o endereço de envio pelo `code` do pedido",
        "tags": [
          "Envio de pedido"
        ],
        "operationId": "get-api-v2-orders-order-code-shipping_address",
        "responses": {
          "200": {
            "description": "Endereço do pedido retornado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipping_address"
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualiza endereço do pedido",
        "operationId": "patch-api-v2-orders-order-code-shipping-address",
        "description": "Atualiza dados de endereço do pedido",
        "tags": [
          "Envio de pedido"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shipping_address"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Endereço do pedido alterado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipping_address"
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/api/v2/orders/{order_code}/capture": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Order.code"
        }
      ],
      "post": {
        "summary": "Captura um pedido",
        "operationId": "post-api-v2-orders-capture",
        "description": "Captura o pagamento no adquirente para pedidos com pagamento por cartão de crédito.",
        "tags": [
          "Fluxo e andamento"
        ],
        "responses": {
          "200": {
            "description": "Captura realizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "Pagar.me": {
                    "value": {
                      "object": "transaction",
                      "status": "paid",
                      "refuse_reason": null,
                      "status_reason": "acquirer",
                      "acquirer_response_code": "0000",
                      "acquirer_name": "pagarme",
                      "acquirer_id": "5eab10915eab10915eab1091",
                      "authorization_code": "123456",
                      "soft_descriptor": "",
                      "tid": 1234567,
                      "nsu": 1234567,
                      "date_created": "2020-05-14T19:14:50.322Z",
                      "date_updated": "2020-05-15T14:19:34.699Z",
                      "amount": 1400,
                      "authorized_amount": 1400,
                      "paid_amount": 1400,
                      "refunded_amount": 0,
                      "installments": 1,
                      "id": 1234567,
                      "cost": 120,
                      "card_holder_name": "John Doe",
                      "card_last_digits": "6565",
                      "card_first_digits": "470373",
                      "card_brand": "visa",
                      "card_pin_mode": null,
                      "card_magstripe_fallback": false,
                      "cvm_pin": false,
                      "postback_url": "https://demo.vnda.com.br/api/v2/payments/pagarme/notifications",
                      "payment_method": "credit_card",
                      "capture_method": "ecommerce",
                      "antifraud_score": null,
                      "boleto_url": null,
                      "boleto_barcode": null,
                      "boleto_expiration_date": null,
                      "referer": "api_key",
                      "ip": "127.0.0.1",
                      "subscription_id": null,
                      "phone": null,
                      "address": null,
                      "customer": {
                        "object": "customer",
                        "id": 2954669,
                        "external_id": "example@vnda.com.br",
                        "type": "individual",
                        "country": "br",
                        "document_number": null,
                        "document_type": "cpf",
                        "name": "John Doe",
                        "email": "example@vnda.com.br",
                        "phone_numbers": [
                          "+5511111111111"
                        ],
                        "born_at": null,
                        "birthday": null,
                        "gender": null,
                        "date_created": "2020-05-14T19:14:50.248Z",
                        "documents": [
                          {
                            "object": "document",
                            "id": "doc_cka75cka75cka75cka75cka75",
                            "type": "cpf",
                            "number": 191
                          }
                        ]
                      },
                      "billing": {
                        "object": "billing",
                        "id": 1255695,
                        "name": "John Doe",
                        "address": {
                          "object": "address",
                          "street": "Rua João Neves da Fontoura",
                          "complementary": null,
                          "street_number": "1",
                          "neighborhood": "Azenha",
                          "city": "Porto Alegre",
                          "state": "RS",
                          "zipcode": "90050030",
                          "country": "br",
                          "id": 2808888
                        }
                      },
                      "shipping": null,
                      "items": [
                        {
                          "object": "item",
                          "id": "05.01.4.1.006",
                          "title": "Aceto Balsâmico Di Modena IGP 500ml Aceto Balsamico Di Modena IGP 500ml",
                          "unit_price": 1400,
                          "quantity": 1,
                          "category": null,
                          "tangible": true,
                          "venue": null,
                          "date": null
                        }
                      ],
                      "card": {
                        "object": "card",
                        "id": "card_cka75cka75cka75cka75cka75",
                        "date_created": "2020-05-14T19:14:50.307Z",
                        "date_updated": "2020-05-14T19:14:50.717Z",
                        "brand": "visa",
                        "holder_name": "f dc",
                        "first_digits": "470373",
                        "last_digits": "6565",
                        "country": "RUSSIA",
                        "fingerprint": "cka75cka75cka75cka75cka75",
                        "valid": true,
                        "expiration_date": "0423"
                      },
                      "split_rules": null,
                      "metadata": {
                        "order": "7A4F490570",
                        "seller-1": {
                          "name": "default",
                          "package": "7A4F490570-01"
                        }
                      },
                      "antifraud_metadata": {},
                      "reference_key": null,
                      "device": null,
                      "local_transaction_id": null,
                      "local_time": null,
                      "fraud_covered": false,
                      "fraud_reimbursed": null,
                      "order_id": null,
                      "risk_level": "very_low",
                      "receipt_url": null,
                      "payment": null,
                      "addition": null,
                      "discount": null,
                      "private_label": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Captura não efetuada junto ao adquirente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "failure": {
                    "value": {
                      "error": "Capture was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/orders/{order_code}/confirm": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Order.code"
        }
      ],
      "post": {
        "summary": "Confirma um pedido",
        "operationId": "post-api-v2-orders-order-code-confirm",
        "description": "Confirma um pedido",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "confirmation_data": {
                    "type": "string",
                    "description": "Parâmetro para incluir o retorno [da requisição de captura do pagamento](https://developers.vnda.com.br/reference/post-api-v2-orders-capture).\nEsse parâmetro é **obrigatório** para pedidos com pagamento por cartão de crédito. "
                  }
                }
              },
              "examples": {
                "Depósito": {
                  "value": {
                    "banco": "Banco do Brasil",
                    "data_credito": "2020-03-26",
                    "conferido_por": "Nome do usuário do financeiro"
                  }
                },
                "Cartão de crédito via Pagar.me": {
                  "value": {
                    "object": "transaction",
                    "status": "paid",
                    "refuse_reason": null,
                    "status_reason": "acquirer",
                    "acquirer_response_code": "0000",
                    "acquirer_name": "pagarme",
                    "acquirer_id": "5eab10915eab10915eab1091",
                    "authorization_code": "123456",
                    "soft_descriptor": "",
                    "tid": 1234567,
                    "nsu": 1234567,
                    "date_created": "2020-05-14T19:14:50.322Z",
                    "date_updated": "2020-05-15T14:19:34.699Z",
                    "amount": 1400,
                    "authorized_amount": 1400,
                    "paid_amount": 1400,
                    "refunded_amount": 0,
                    "installments": 1,
                    "id": 1234567,
                    "cost": 120,
                    "card_holder_name": "John Doe",
                    "card_last_digits": "6565",
                    "card_first_digits": "470373",
                    "card_brand": "visa",
                    "card_pin_mode": null,
                    "card_magstripe_fallback": false,
                    "cvm_pin": false,
                    "postback_url": "https://demo.vnda.com.br/api/v2/payments/pagarme/notifications",
                    "payment_method": "credit_card",
                    "capture_method": "ecommerce",
                    "antifraud_score": null,
                    "boleto_url": null,
                    "boleto_barcode": null,
                    "boleto_expiration_date": null,
                    "referer": "api_key",
                    "ip": "127.0.0.1",
                    "subscription_id": null,
                    "phone": null,
                    "address": null,
                    "customer": {
                      "object": "customer",
                      "id": 2954669,
                      "external_id": "example@vnda.com.br",
                      "type": "individual",
                      "country": "br",
                      "document_number": null,
                      "document_type": "cpf",
                      "name": "John Doe",
                      "email": "example@vnda.com.br",
                      "phone_numbers": [
                        "+5511111111111"
                      ],
                      "born_at": null,
                      "birthday": null,
                      "gender": null,
                      "date_created": "2020-05-14T19:14:50.248Z",
                      "documents": [
                        {
                          "object": "document",
                          "id": "doc_cka75cka75cka75cka75cka75",
                          "type": "cpf",
                          "number": 191
                        }
                      ]
                    },
                    "billing": {
                      "object": "billing",
                      "id": 1255695,
                      "name": "John Doe",
                      "address": {
                        "object": "address",
                        "street": "Rua João Neves da Fontoura",
                        "complementary": null,
                        "street_number": "1",
                        "neighborhood": "Azenha",
                        "city": "Porto Alegre",
                        "state": "RS",
                        "zipcode": "90050030",
                        "country": "br",
                        "id": 2808888
                      }
                    },
                    "shipping": null,
                    "items": [
                      {
                        "object": "item",
                        "id": "05.01.4.1.006",
                        "title": "Aceto Balsâmico Di Modena IGP 500ml Aceto Balsamico Di Modena IGP 500ml",
                        "unit_price": 1400,
                        "quantity": 1,
                        "category": null,
                        "tangible": true,
                        "venue": null,
                        "date": null
                      }
                    ],
                    "card": {
                      "object": "card",
                      "id": "card_cka75cka75cka75cka75cka75",
                      "date_created": "2020-05-14T19:14:50.307Z",
                      "date_updated": "2020-05-14T19:14:50.717Z",
                      "brand": "visa",
                      "holder_name": "f dc",
                      "first_digits": "470373",
                      "last_digits": "6565",
                      "country": "RUSSIA",
                      "fingerprint": "cka75cka75cka75cka75cka75",
                      "valid": true,
                      "expiration_date": "0423"
                    },
                    "split_rules": null,
                    "metadata": {
                      "order": "7A4F490570",
                      "seller-1": {
                        "name": "default",
                        "package": "7A4F490570-01"
                      }
                    },
                    "antifraud_metadata": {},
                    "reference_key": null,
                    "device": null,
                    "local_transaction_id": null,
                    "local_time": null,
                    "fraud_covered": false,
                    "fraud_reimbursed": null,
                    "order_id": null,
                    "risk_level": "very_low",
                    "receipt_url": null,
                    "payment": null,
                    "addition": null,
                    "discount": null,
                    "private_label": null
                  }
                }
              }
            }
          },
          "description": "Confirma um pedido"
        },
        "tags": [
          "Fluxo e andamento"
        ],
        "responses": {
          "200": {
            "description": "Pedido confirmado"
          },
          "404": {
            "description": "Pedido não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/api/v2/orders/{order_code}/chargeback": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Order.code"
        }
      ],
      "post": {
        "summary": "Estorna pagamento por cartão de crédito",
        "operationId": "post-api-v2-orders-order-code-chargeback",
        "description": "Faz o estorno do pagamento no adquirente do cartão de crédito\nOperação válida para pedidos pagos com cartão de crédito",
        "tags": [
          "Fluxo e andamento"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/api/v2/orders/{order_code}/cancel": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Order.code"
        }
      ],
      "post": {
        "summary": "Cancela um pedido",
        "operationId": "post-api-v2-orders-order-code-cancel",
        "description": "Altera o status do pedido para `cancelado`",
        "tags": [
          "Fluxo e andamento"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cancelation_data": {
                    "type": "string",
                    "description": "Parâmetro para incluir uma confirmação de estorno de pagamento para o cliente.\nPara pedidos com pagamento via cartão de crédito, é obrigatório que nesse campo seja incluído no parâmetro o retorno [da requisição de estorno de pagamento](https://developers.vnda.com.br/reference/post-api-v2-orders-order-code-chargeback). "
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pedido cancelado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        }
      }
    },
    "/api/v2/orders/{order_code}/items": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Order.code"
        },
        {
          "$ref": "#/components/parameters/include_customizations_in_total"
        }
      ],
      "get": {
        "summary": "Lista os itens de um pedido",
        "tags": [
          "Itens de pedido"
        ],
        "operationId": "get-api-v2-orders-items",
        "responses": {
          "200": {
            "description": "Itens retornados",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Product.order"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "description": "Retorna os itens de um pedido pelo código do pedido"
      }
    },
    "/api/v2/orders/{order_code}/items/{item_id}/customizations": {
      "parameters": [
        {
          "schema": null,
          "$ref": "#/components/parameters/Order.code"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "item_id",
          "in": "path",
          "description": "Código identificador do item",
          "required": true
        }
      ],
      "get": {
        "summary": "Retorna personalizações de um item",
        "operationId": "get-api-v2-orders-order_id-items-item_id-customizations",
        "tags": [
          "Itens de pedido"
        ],
        "description": "Lista as personalizações de um item do pedido pelos códigos do item e do pedido",
        "responses": {
          "200": {
            "description": "Personalizações listadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order_item_customization.v1"
                  }
                },
                "examples": {
                  "Com pesonalizações": {
                    "value": [
                      {
                        "id": 1,
                        "number": 1,
                        "group_name": "Color",
                        "sku": "A1",
                        "name": "Red",
                        "price": 0,
                        "intl_price": 0,
                        "handling_days": 0
                      }
                    ]
                  },
                  "Sem personalizações": {
                    "value": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quando o item não é encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/clients/{id_client}/orders": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id_client",
          "in": "path",
          "required": true,
          "description": "Código identificador do cliente"
        }
      ],
      "get": {
        "summary": "Lista os pedidos de um cliente",
        "tags": [
          "Clientes"
        ],
        "operationId": "get-api-v2-clients-id-orders",
        "responses": {
          "200": {
            "description": "Pedidos retornados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order.v1"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cliente não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "description": "Retorna os pedidos de um cliente pelo seu `id_client`"
      }
    },
    "/api/v2/orders/{order_code}/packages/{package_code}/invoices": {
      "parameters": [
        {
          "$ref": "#/components/parameters/Order.code"
        },
        {
          "$ref": "#/components/parameters/Package.code"
        }
      ],
      "get": {
        "summary": "Retorna notas fiscais de um pacote",
        "tags": [
          "Notas fiscais de pedidos"
        ],
        "responses": {
          "200": {
            "description": "Notas fiscais listadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice.v1"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pedido ou pacote não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          }
        },
        "operationId": "get-api-v2-orders-order-code-packages-package_code-invoices",
        "description": "Retorna as notas fisicais de um pacote do pedido"
      },
      "post": {
        "summary": "Inclui nota fiscal em um pedido",
        "operationId": "post-api-v2-orders-order-code-packages-package_code-invoices",
        "responses": {
          "201": {
            "description": "Nota fiscal adicionada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice.v1"
                }
              }
            }
          },
          "422": {
            "description": "Parâmetros enviados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Notas fiscais de pedidos"
        ],
        "description": "Inclui nota fiscal no pacote de um pedido",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice.v1"
              }
            }
          }
        }
      }
    },
    "/api/v2/orders/{order_code}/packages/{package_code}/invoices/{number}": {
      "parameters": [
        {
          "schema": null,
          "$ref": "#/components/parameters/Order.code"
        },
        {
          "schema": null,
          "$ref": "#/components/parameters/Package.code"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "number",
          "in": "path",
          "required": true,
          "description": "Número da nota fiscal"
        }
      ],
      "patch": {
        "summary": "Atualiza uma nota fiscal",
        "operationId": "patch-api-v2-orders-order-code-packages-package_code-invoices-number",
        "responses": {
          "204": {
            "description": "Nota fiscal atualizada"
          },
          "404": {
            "description": "Pedido ou nota fiscal não encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          },
          "422": {
            "description": "Parâmetros enviados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Notas fiscais de pedidos"
        ],
        "description": "Atualiza uma nota fiscal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice.v1"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove uma nota fiscal",
        "operationId": "delete-api-v2-orders-order-code-packages-package_code-invoices-number",
        "responses": {
          "204": {
            "description": "Nota fiscal removida"
          },
          "404": {
            "description": "Nota fiscal não encontrada"
          }
        },
        "tags": [
          "Notas fiscais de pedidos"
        ],
        "description": "Remove uma nota fiscal"
      }
    },
    "/api/feed/orders": {
      "parameters": [],
      "get": {
        "summary": "Lista os pedidos do feed",
        "tags": [
          "Order Feed"
        ],
        "operationId": "get-feed-orders",
        "description": "Permite listar os pedidos pendentes do feed",
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "enum": [
                true
              ]
            },
            "in": "query",
            "name": "include_shipping_address",
            "allowEmptyValue": true,
            "description": "Selecione `true` para incluir o endereço na resposta"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "received",
                "confirmed",
                "canceled"
              ]
            },
            "in": "query",
            "name": "status",
            "description": "Filtra os pedidos por status"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Orders"
          },
          "404": {
            "description": "Domínio de loja não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Marca os pedidos do feed",
        "operationId": "post-api-feed-orders",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Domínio de loja não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404.v1"
                }
              }
            }
          }
        },
        "tags": [
          "Order Feed"
        ],
        "description": "Permite marcar os pedidos para que eles sejam filtrados da listagem do feed",
        "requestBody": {
          "$ref": "#/components/requestBodies/Orders"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Banner": {
        "title": "Banner",
        "type": "object",
        "description": "Modelo que representa um banner na API",
        "properties": {
          "big_thumb": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "end_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time"
          },
          "external": {
            "type": "boolean"
          },
          "file_name": {
            "type": "string"
          },
          "file_uid": {
            "type": "string"
          },
          "html_description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer"
          },
          "norder": {
            "type": "integer",
            "nullable": true
          },
          "plain_description": {
            "type": "string",
            "nullable": true
          },
          "small_thumb": {
            "type": "string"
          },
          "start_at": {
            "type": "string",
            "format": "date-time"
          },
          "subtitle": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "nullable": true,
            "format": "uri"
          }
        },
        "required": [
          "big_thumb",
          "color",
          "description",
          "end_at",
          "external",
          "file_name",
          "file_uid",
          "html_description",
          "id",
          "norder",
          "plain_description",
          "small_thumb",
          "start_at",
          "subtitle",
          "tag",
          "title",
          "updated_at",
          "url"
        ]
      },
      "SlimBanner": {
        "title": "SlimBanner",
        "type": "object",
        "description": "Modelo que representa um banner simplificado na API",
        "properties": {
          "id": {
            "type": "integer"
          },
          "tag": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "external": {
            "type": "boolean"
          },
          "start_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "file_url": {
            "type": "string",
            "nullable": true
          },
          "norder": {
            "type": "integer",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "tag",
          "title",
          "subtitle",
          "description",
          "url",
          "external",
          "start_at",
          "end_at",
          "file_url",
          "norder",
          "color",
          "updated_at"
        ]
      },
      "Variant": {
        "title": "Variant",
        "type": "object",
        "description": "Modelo que representa uma variante na API",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Código identificador da variante"
          },
          "main": {
            "type": "boolean",
            "description": "Identifica se é a variante principal do produto. Para `true` a variante é principal e `false` a variante é secundária"
          },
          "available": {
            "type": "boolean",
            "description": "Identifica se a variante está ativa em `true` e desativa em `false`"
          },
          "sku": {
            "type": "string",
            "description": "Código SKU da variante"
          },
          "name": {
            "type": "string",
            "description": "Nome da variante"
          },
          "slug": {
            "type": "string",
            "description": "Slug da URL da variante"
          },
          "min_quantity": {
            "type": "integer",
            "description": "Quantidade mínima para venda"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantidade física"
          },
          "quantity_sold": {
            "type": "integer",
            "description": ""
          },
          "stock": {
            "type": "integer",
            "description": "Quantidade disponível"
          },
          "custom_attributes": {
            "type": "object",
            "description": "Customização da variante"
          },
          "properties": {
            "type": "object",
            "properties": {
              "property1": {
                "$ref": "#/components/schemas/Variant_property.v1"
              },
              "property2": {
                "$ref": "#/components/schemas/Variant_property.v1"
              },
              "property3": {
                "$ref": "#/components/schemas/Variant_property.v1"
              }
            },
            "description": "[Atributos](https://developers.vnda.com.br/docs/atributos-de-produto) da variante"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data e horário da última atualização da variante"
          },
          "price": {
            "type": "number",
            "description": "Preço do item"
          },
          "installments": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Relação das parcelas para pagamento do item parcelado"
          },
          "available_quantity": {
            "type": "integer",
            "description": "Unidades reservadas e não reservadas do item"
          },
          "weight": {
            "type": "number",
            "description": "Massa do produto, em gramas"
          },
          "width": {
            "type": "number",
            "description": "Largura do produto, em centímetros"
          },
          "height": {
            "type": "number",
            "description": "Altura do produto, em centímetros"
          },
          "length": {
            "type": "number",
            "description": "Comprimento do produito, em centímetros"
          },
          "handling_days": {
            "type": "integer",
            "description": "Dias de manuseio da variante"
          },
          "inventories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variant_inventory.v1"
            },
            "description": "Relação de itens por estoque (armazém)"
          },
          "sale_price": {
            "type": "number",
            "description": "Preço promocional"
          },
          "intl_price": {
            "type": "number",
            "description": "Preço internacional"
          },
          "image_url": {
            "type": "string",
            "description": "URL da imagem da variante"
          },
          "product_id": {
            "type": "integer",
            "description": "Código identificador `ID` do produto"
          },
          "barcode": {
            "type": "string",
            "nullable": true,
            "description": "Código de barra da variante"
          },
          "norder": {
            "type": "integer"
          }
        },
        "x-examples": {
          "example-1": {
            "id": 27,
            "main": false,
            "available": true,
            "sku": "13001",
            "name": "Tamanho: PP | Cor: Branca",
            "slug": "camiseta",
            "min_quantity": 1,
            "quantity": 85,
            "stock": 83,
            "custom_attributes": {
              "size": "PP",
              "color": "#FFFFFF"
            },
            "properties": {},
            "updated_at": "2019-08-01T18:36:52.718-03:00",
            "price": 169.9,
            "installments": [
              169.9
            ],
            "available_quantity": 83,
            "weight": 0.1,
            "width": 11,
            "height": 2,
            "length": 16,
            "handling_days": 0,
            "inventories": [],
            "sale_price": 169.9,
            "intl_price": 33.98,
            "image_url": "//b0.vnda.com.br/x120/shop/2014/07/08/camiseta.jpg",
            "product_id": 6,
            "barcode": null,
            "norder": 1
          }
        }
      },
      "ProductImage": {
        "title": "ProductImage",
        "type": "object",
        "description": "Modelo que representa uma imagem de um produto",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Código identificador `ID` da imagem"
          },
          "url": {
            "type": "string",
            "description": "URL da imagem"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data e horário da última atualização da imagem do produto"
          },
          "variant_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Códigos das variantes que utilizam a imagem"
          }
        },
        "required": [
          "id",
          "url",
          "updated_at",
          "variant_ids"
        ]
      },
      "ProductSearch": {
        "title": "ProductSearch",
        "type": "object",
        "description": "Modelo que representa um produto retornado via busca no Elasticsearch",
        "properties": {
          "id": {
            "type": "integer"
          },
          "active": {
            "type": "boolean"
          },
          "available": {
            "type": "boolean"
          },
          "subscription": {
            "type": "boolean"
          },
          "slug": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "reference_lowercase": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name",
                "title",
                "subtitle",
                "description",
                "importance",
                "type",
                "image_url"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "pattern": "[a-z0-9\\-_]+"
                },
                "title": {
                  "type": "string"
                },
                "subtitle": {
                  "type": "string",
                  "nullable": true
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "importance": {
                  "type": "number",
                  "nullable": true
                },
                "type": {
                  "type": "string"
                },
                "image_url": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "price": {
            "type": "number",
            "description": "Preço do item"
          },
          "on_sale": {
            "type": "boolean"
          },
          "sale_price": {
            "type": "number",
            "description": "Preço promocional"
          },
          "intl_price": {
            "type": "number"
          },
          "discount_id": {
            "type": "integer"
          },
          "discount_rule": {
            "type": "object",
            "nullable": true,
            "required": [
              "type",
              "amount"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "fixed",
                  "percentage"
                ]
              },
              "amount": {
                "type": "number"
              }
            }
          },
          "discount": {
            "type": "object",
            "nullable": true,
            "required": [
              "name",
              "description",
              "facebook",
              "valid_to"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "facebook": {
                "type": "boolean",
                "description": "Em desuso",
                "default": false
              },
              "valid_to": {
                "type": "string"
              }
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "sku",
                "url"
              ],
              "properties": {
                "sku": {
                  "type": "string"
                },
                "url": {
                  "nullable": true,
                  "type": "string"
                }
              }
            }
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantProductSearch"
            }
          },
          "installments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductInstallment"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data e horário da última atualização do produto"
          }
        },
        "required": [
          "id",
          "active",
          "available",
          "subscription",
          "slug",
          "reference",
          "reference_lowercase",
          "name",
          "description",
          "image_url",
          "url",
          "tags",
          "price",
          "on_sale",
          "sale_price",
          "intl_price",
          "discount_id",
          "discount_rule",
          "discount",
          "images",
          "variants",
          "installments",
          "created_at",
          "updated_at"
        ]
      },
      "VariantProductSearch": {
        "title": "VariantProductSearch",
        "type": "object",
        "description": "Modelo que representa uma variante retornada via busca no Elasticsearch",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 1
          },
          "sku": {
            "type": "string",
            "minLength": 1
          },
          "sku_lowercase": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "full_name": {
            "type": "string",
            "minLength": 1
          },
          "main": {
            "type": "boolean"
          },
          "available": {
            "type": "boolean"
          },
          "image_url": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "Preço do item"
          },
          "sale_price": {
            "type": "number",
            "description": "Preço promocional"
          },
          "intl_price": {
            "type": "number"
          },
          "installments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductInstallment"
            }
          },
          "stock": {
            "type": "integer",
            "description": "Quantidade de itens disponíveis"
          },
          "quantity": {
            "type": "integer"
          },
          "quantity_sold": {
            "type": "integer",
            "description": "Quantidade de itens vendidos"
          },
          "min_quantity": {
            "type": "integer",
            "description": "Quantidade mínima para venda"
          },
          "available_quantity": {
            "type": "integer"
          },
          "custom_attributes": {
            "type": "object",
            "nullable": true,
            "description": "Customização da variante"
          },
          "properties": {
            "type": "object",
            "properties": {
              "property1": {
                "$ref": "#/components/schemas/VariantPropertyProductSearch"
              },
              "property2": {
                "$ref": "#/components/schemas/VariantPropertyProductSearch"
              },
              "property3": {
                "$ref": "#/components/schemas/VariantPropertyProductSearch"
              }
            },
            "description": "[Atributos](https://developers.vnda.com.br/docs/atributos-de-produto) da variante"
          },
          "inventories": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name",
                "slug",
                "available",
                "price",
                "sale_price",
                "quantity",
                "quantity_sold",
                "place"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": true
                },
                "slug": {
                  "type": "string",
                  "minLength": 1
                },
                "available": {
                  "type": "boolean"
                },
                "price": {
                  "type": "number",
                  "description": "Preço do item"
                },
                "sale_price": {
                  "type": "number",
                  "description": "Preço promocional"
                },
                "quantity": {
                  "type": "number",
                  "nullable": true
                },
                "quantity_sold": {
                  "type": "number",
                  "description": "Quantidade de itens vendidos"
                },
                "place": {
                  "type": "object",
                  "required": [
                    "id",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "handling_days": {
            "type": "integer",
            "description": "Dias de manuseio da variante"
          },
          "barcode": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "description": "Massa do produto, em gramas"
          },
          "width": {
            "type": "number",
            "description": "Largura do produto, em centímetros"
          },
          "height": {
            "type": "number",
            "description": "Altura do produto, em centímetros"
          },
          "length": {
            "type": "number",
            "description": "Comprimento do produito, em centímetros"
          }
        },
        "required": [
          "id",
          "sku",
          "sku_lowercase",
          "name",
          "full_name",
          "main",
          "available",
          "image_url",
          "price",
          "sale_price",
          "intl_price",
          "installments",
          "stock",
          "quantity",
          "quantity_sold",
          "min_quantity",
          "available_quantity",
          "custom_attributes",
          "properties",
          "inventories",
          "handling_days",
          "barcode",
          "weight",
          "width",
          "height",
          "length"
        ]
      },
      "VariantPropertyProductSearch": {
        "title": "VariantPropertyProductSearch",
        "type": "object",
        "description": "Modelo que representa uma propriedade de uma variante quando retornada via Elasticsearch",
        "nullable": true,
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "defining": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "value",
          "defining"
        ]
      },
      "Cart": {
        "type": "object",
        "title": "Cart",
        "description": "Modelo que representa um carrinho na API",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "shipping_method": {
            "type": "string",
            "nullable": true
          },
          "items_count": {
            "type": "integer"
          },
          "quotation_responses_count": {
            "type": "integer"
          },
          "payment_responses_count": {
            "type": "integer"
          },
          "has_payment_responses": {
            "type": "boolean"
          },
          "has_phone": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "email",
          "shipping_method",
          "items_count",
          "quotation_responses_count",
          "payment_responses_count",
          "has_payment_responses",
          "has_phone",
          "updated_at"
        ]
      },
      "CartItemCustomization": {
        "type": "object",
        "title": "CartItemCustomization",
        "description": "Modelo que representa uma personalização de item do carrinho na API",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Código identificador do produto"
          },
          "group_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "integer"
          },
          "price": {
            "type": "number",
            "description": "Preço unitário"
          },
          "intl_price": {
            "type": "number",
            "description": "Preço internacional"
          },
          "handling_days": {
            "type": "integer",
            "description": "Número de dias para manuseio"
          },
          "sku": {
            "type": "string",
            "nullable": true,
            "description": "Código SKU do produto"
          }
        },
        "required": [
          "id",
          "group_name",
          "name",
          "number",
          "price",
          "intl_price",
          "handling_days",
          "sku"
        ]
      },
      "ProductInstallment": {
        "title": "ProductInstallment",
        "type": "object",
        "properties": {
          "number": {
            "type": "integer"
          },
          "price": {
            "type": "number",
            "description": "Preço do item"
          },
          "interest": {
            "type": "boolean"
          },
          "interest_rate": {
            "type": "number"
          },
          "total": {
            "type": "number"
          }
        },
        "required": [
          "number",
          "price",
          "interest",
          "interest_rate",
          "total"
        ],
        "description": "Modelo que representa uma parcela",
        "x-internal": false
      },
      "VariantProperty": {
        "title": "VariantProperty",
        "type": "object",
        "description": "Modelo que representa uma propriedade de uma variante",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome da propriedade"
          },
          "value": {
            "type": "string",
            "description": "Valor da propriedade"
          },
          "defining": {
            "type": "boolean",
            "description": "Indica se a variante possui uma definição (`true`) ou se a variante não possui (`false`)"
          }
        },
        "required": [
          "name",
          "value",
          "defining"
        ],
        "example": {
          "example-property1": {
            "name": "Tamanho",
            "value": "G",
            "defining": true
          },
          "example-property2": {
            "name": "Cor",
            "value": "Amarelo",
            "defining": true
          }
        }
      },
      "ProductPriceVariant": {
        "title": "ProductPriceVariant",
        "type": "object",
        "description": "Modelo que representa os preços de uma variante",
        "properties": {
          "main": {
            "type": "boolean",
            "description": "Define se a variante do produto é a principal"
          },
          "sku": {
            "type": "string",
            "description": "Código SKU da variante"
          },
          "price": {
            "type": "number",
            "description": "Preço do item"
          },
          "on_sale": {
            "type": "boolean"
          },
          "sale_price": {
            "type": "number",
            "description": "Preço promocional"
          },
          "intl_price": {
            "type": "number"
          },
          "available": {
            "type": "boolean"
          },
          "properties": {
            "type": "object",
            "properties": {
              "property1": {
                "$ref": "#/components/schemas/VariantProperty"
              },
              "property2": {
                "$ref": "#/components/schemas/VariantProperty"
              },
              "property3": {
                "$ref": "#/components/schemas/VariantProperty"
              }
            },
            "description": "[Atributos](https://developers.vnda.com.br/docs/atributos-de-produto) da variante"
          },
          "stock": {
            "type": "number",
            "description": "Quantidade de itens disponíveis"
          },
          "installments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductInstallment"
            }
          }
        },
        "required": [
          "main",
          "sku",
          "price",
          "on_sale",
          "sale_price",
          "intl_price",
          "available",
          "properties",
          "stock",
          "installments"
        ],
        "x-internal": false
      },
      "Mapping": {
        "type": "object",
        "description": "Modelo que representa um mapeamento na API",
        "properties": {
          "id": {
            "type": "integer"
          },
          "key": {
            "type": "string"
          },
          "from": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "to": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "key"
        ]
      },
      "Package": {
        "title": "Package",
        "type": "object",
        "description": "Modelo que representa um pacote na API",
        "properties": {
          "actual_shipping_method": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "minLength": 1,
            "description": "Código identificador do pacote"
          },
          "delivered_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de entrega do pacote"
          },
          "delivered_email_sent_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "delivery_days": {
            "type": "integer",
            "minimum": 0,
            "description": "Número de dias para entrega"
          },
          "delivery_type": {
            "type": "string",
            "minLength": 1,
            "description": "Tipo de envio do pacote"
          },
          "delivery_work_days": {
            "type": "integer",
            "minimum": 0,
            "description": "Quantidade de dias úteis para entrega"
          },
          "fulfillment_company": {
            "type": "string",
            "nullable": true,
            "description": "Transportadora"
          },
          "fulfillment_status": {
            "type": "string",
            "minLength": 1,
            "enum": [
              "waiting",
              "shipped",
              "delivered"
            ],
            "description": "Status de envio"
          },
          "integrated": {
            "type": "boolean",
            "default": false
          },
          "invoiced": {
            "type": "boolean",
            "default": false
          },
          "label": {
            "type": "string",
            "minLength": 1
          },
          "properties": {
            "type": "object"
          },
          "quoted_shipping_price": {
            "type": "number",
            "minimum": 0
          },
          "shipped_at": {
            "type": "string",
            "format": "date-time"
          },
          "shipped_email_sent_at": {
            "type": "string",
            "format": "date-time"
          },
          "shipping_label": {
            "type": "string"
          },
          "shipping_name": {
            "type": "string"
          },
          "shipping_price": {
            "type": "number"
          },
          "total": {
            "type": "number",
            "minimum": 0
          },
          "tracked_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data e horário da última atualização do código de rastreio do pacote"
          },
          "tracking_code": {
            "type": "string",
            "nullable": true,
            "description": "Código de rastreio do pacote"
          }
        },
        "required": [
          "actual_shipping_method",
          "code",
          "delivered_at",
          "delivered_email_sent_at",
          "delivery_days",
          "delivery_type",
          "delivery_work_days",
          "fulfillment_company",
          "fulfillment_status",
          "integrated",
          "invoiced",
          "label",
          "properties",
          "quoted_shipping_price",
          "shipped_at",
          "shipped_email_sent_at",
          "shipping_label",
          "shipping_name",
          "shipping_price",
          "total",
          "tracked_at",
          "tracking_code"
        ]
      },
      "404.v1": {
        "title": "404",
        "type": "object",
        "x-examples": {
          "Not found": {
            "error": "not found"
          }
        },
        "description": "Modelo que representa uma mensagem de erro 404",
        "properties": {
          "error": {
            "type": "string",
            "enum": [
              "not found"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "422.v1": {
        "title": "422",
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "properties": {
              "{field}": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "description": "Modelo que representa um erro de validação na criação e atualização de registros"
      },
      "Address.v1": {
        "title": "Address",
        "type": "object",
        "description": "Modelo que representa um endereço na API",
        "properties": {
          "id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "documents": {
            "type": "object",
            "properties": {
              "cpf": {
                "type": "string"
              },
              "cnpj": {
                "type": "string"
              }
            }
          },
          "street_name": {
            "type": "string"
          },
          "street_number": {
            "type": "string"
          },
          "complement": {
            "type": "string"
          },
          "neighborhood": {
            "type": "string"
          },
          "first_phone_area": {
            "type": "string"
          },
          "first_phone": {
            "type": "string"
          },
          "second_phone_area": {
            "type": "string"
          },
          "second_phone": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "recipient_name": {
            "type": "string"
          }
        }
      },
      "Audience_member.v1": {
        "title": "Audience Member",
        "type": "object",
        "description": "Modelo que representa um membro do público",
        "properties": {
          "id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone_area": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "email"
        ]
      },
      "Bonus.v1": {
        "title": "Bonus",
        "type": "object",
        "description": "Modelo que representa um bônus na API",
        "properties": {
          "amount": {
            "type": "number"
          },
          "token": {
            "type": "string"
          },
          "valid_from": {
            "type": "string",
            "format": "date-time"
          },
          "valid_thru": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Cart.v1": {
        "title": "Cart",
        "type": "object",
        "description": "Modelo que representa um carrinho na API",
        "properties": {
          "agent": {
            "type": "string",
            "nullable": true,
            "description": "Agente que criou o carrinho"
          },
          "billing_address_id": {
            "type": "integer",
            "nullable": true,
            "description": "Código identificador `ID` do endereço de cobrança do carrinho"
          },
          "channel": {
            "type": "string",
            "nullable": true,
            "description": "Canal de venda que originou o carrinho"
          },
          "client_id": {
            "type": "integer",
            "nullable": true,
            "description": "Código identificador `ID` do cliente"
          },
          "code": {
            "type": "string",
            "description": "Código identificador `ID` do carrinho"
          },
          "coupon_code": {
            "type": "string",
            "nullable": true,
            "description": "Código de cupom de desconto utilizado no carrinho"
          },
          "discount": {
            "type": "object",
            "nullable": true,
            "required": [
              "id",
              "name",
              "description",
              "facebook",
              "valid_to",
              "seal_uid",
              "seal_url",
              "start_at",
              "end_at",
              "email",
              "cpf",
              "tags"
            ],
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "facebook": {
                "type": "boolean",
                "default": false
              },
              "valid_to": {
                "type": "string",
                "enum": [
                  "store",
                  "cart"
                ]
              },
              "seal_uid": {
                "type": "string",
                "description": "DEPRECATED"
              },
              "seal_url": {
                "type": "string",
                "description": "DEPRECATED"
              },
              "start_at": {
                "type": "string",
                "format": "date-time"
              },
              "end_at": {
                "type": "string",
                "nullable": true,
                "format": "date-time"
              },
              "email": {
                "type": "string",
                "nullable": true
              },
              "cpf": {
                "type": "string",
                "nullable": true
              },
              "tags": {
                "type": "string",
                "nullable": true
              }
            },
            "$ref": "#/components/schemas/Discount.v1",
            "description": "Promoção aplicada no carrinho"
          },
          "discount_price": {
            "type": "number",
            "deprecated": true,
            "description": "Valor do desconto"
          },
          "extra": {
            "type": "object",
            "description": "Campo para registro de observações, chave ou valores necessários"
          },
          "id": {
            "type": "integer",
            "description": "Código identificador `ID` do carrinho"
          },
          "items": {
            "type": "array",
            "description": "Itens do carrinho",
            "items": {
              "$ref": "#/components/schemas/Cart_item.v1"
            }
          },
          "items_count": {
            "type": "integer",
            "description": "Unidades do item no carrinho"
          },
          "shipping_address_id": {
            "type": "integer",
            "nullable": true,
            "description": "Código identificador `ID` do endereço de entrega do carrinho"
          },
          "shipping_method": {
            "type": "string",
            "nullable": true,
            "description": "Método de envio selecionado para o carrinho, como por exemplo: normal, expressa e agendada."
          },
          "shipping_methods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "package": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "price": {
                  "type": "string"
                },
                "delivery_days": {
                  "type": "string"
                },
                "delivery_type": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "short_description": {
                  "type": "string"
                },
                "fulfillment_company": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "package",
                "name",
                "label",
                "price",
                "delivery_days",
                "delivery_type",
                "description",
                "short_description",
                "fulfillment_company"
              ],
              "$ref": "#/components/schemas/Shipping_methods.v1"
            },
            "description": "Lista com as entregas disponíveis para os itens do carrinho de acordo com o endereço de envio"
          },
          "shipping_price": {
            "type": "number",
            "nullable": true,
            "description": "Preço de envio"
          },
          "subtotal": {
            "type": "number",
            "description": "Valor da soma dos itens do carrinho, sem considerar descontos de cupom, carrinho e frete."
          },
          "token": {
            "type": "string",
            "description": "Token do carrinho"
          },
          "total": {
            "type": "number",
            "description": "Valor final do carrinho"
          },
          "total_for_deposit": {
            "type": "number",
            "description": "Valor total do carrinho para pagamento por depósito"
          },
          "total_for_slip": {
            "type": "number",
            "description": "Valor total do carrinho para pagamento por boleto"
          },
          "total_for_pix": {
            "type": "number",
            "description": "Valor do carrinho para pagamento por PIX"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data da última atualização do carrinho"
          },
          "rebate_token": {
            "type": "string",
            "nullable": true,
            "description": "Código identificador `ID` do desconto por bônus"
          },
          "rebate_discount": {
            "type": "number",
            "description": "Desconto por bônus do cliente"
          },
          "handling_days": {
            "type": "number",
            "description": "Número de dias para manuseio dos itens"
          },
          "subtotal_discount": {
            "type": "number",
            "description": "Valor de desconto de promoções aplicadas ao subtotal do carrinho"
          },
          "total_discount": {
            "type": "number",
            "description": "Valor de desconto de promoções aplicadas ao valor total do carrinho"
          },
          "installments": {
            "$ref": "#/components/schemas/Cart_installment.v1",
            "description": "Parcelas para pagamento parcelado"
          },
          "user_id": {
            "type": "string",
            "description": "Código identificador `ID` do cliente"
          }
        },
        "required": [
          "agent",
          "billing_address_id",
          "channel",
          "client_id",
          "code",
          "coupon_code",
          "discount",
          "discount_price",
          "extra",
          "id",
          "items",
          "items_count",
          "shipping_address_id",
          "shipping_method",
          "shipping_methods",
          "shipping_price",
          "subtotal",
          "token",
          "total",
          "total_for_deposit",
          "total_for_slip",
          "total_for_pix",
          "updated_at",
          "rebate_token",
          "rebate_discount",
          "handling_days",
          "subtotal_discount",
          "total_discount"
        ]
      },
      "Cart_installment.v1": {
        "title": "Cart Installment",
        "type": "object",
        "description": "Modelo que representa uma parcela do total de um carrinho",
        "properties": {
          "interest": {
            "type": "boolean",
            "description": "Identifica se há (`true`) ou não (`false`) juros no parcelamento"
          },
          "interest_rate": {
            "type": "number",
            "description": "Taxa de juros do parcelamento"
          },
          "number": {
            "type": "integer",
            "description": "Número de parcelas"
          },
          "price": {
            "type": "number",
            "description": "Valor de cada parcela"
          },
          "total": {
            "type": "number",
            "description": "Valor total das parcelas"
          }
        },
        "required": [
          "interest",
          "interest_rate",
          "number",
          "price",
          "total"
        ],
        "x-examples": {
          "Primeira parcela": {
            "interest": false,
            "interest_rate": 0,
            "number": 1,
            "price": 837,
            "total": 837
          },
          "Segunda parcela": {
            "interest": false,
            "interest_rate": 0,
            "number": 2,
            "price": 418.5,
            "total": 837
          }
        }
      },
      "Cart_item.v1": {
        "title": "Cart Item",
        "type": "object",
        "description": "Modelo que representa um item no carrinho na API",
        "x-tags": [
          "Carrinhos"
        ],
        "properties": {
          "available_quantity": {
            "type": "integer",
            "description": "Unidades disponíveis do produto"
          },
          "delivery_days": {
            "type": "integer",
            "description": "Número de dias para a entrega"
          },
          "extra": {
            "type": "object",
            "description": "Campo para registro de observações, chave ou valores necessários"
          },
          "place_id": {
            "type": "integer",
            "nullable": true,
            "description": "Código identificador do local do produto"
          },
          "price": {
            "type": "number",
            "description": "Preço do produto"
          },
          "intl_price": {
            "type": "number",
            "description": "Preço internacional"
          },
          "product_id": {
            "type": "integer",
            "description": "Código identificador `ID` do produto"
          },
          "product_name": {
            "type": "string",
            "description": "Nome do produto"
          },
          "product_reference": {
            "type": "string",
            "description": "Código de referência do produto"
          },
          "product_url": {
            "type": "string",
            "description": "URL do produto no e-commerce"
          },
          "quantity": {
            "type": "integer",
            "description": "Unidades do produto no carrinho"
          },
          "seller": {
            "type": "string",
            "nullable": true,
            "description": "Identificador do seller"
          },
          "seller_name": {
            "type": "string",
            "nullable": true,
            "description": "Nome do seller"
          },
          "subtotal": {
            "type": "number",
            "description": "Valor do produto sem descontos e promoções"
          },
          "total": {
            "type": "number",
            "description": "Valor total do produto"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data da última atualização do carrinho"
          },
          "variant_attributes": {
            "type": "object",
            "description": "Atributos da variante"
          },
          "variant_min_quantity": {
            "type": "integer",
            "description": "Quantidade miníma de variantes para compra"
          },
          "variant_name": {
            "type": "string",
            "description": "Nome da variante"
          },
          "variant_price": {
            "type": "number",
            "description": "Preço da variante"
          },
          "variant_intl_price": {
            "type": "number",
            "description": "Preço internacional da variante"
          },
          "variant_properties": {
            "type": "object",
            "$ref": "#/components/schemas/Variant"
          },
          "variant_sku": {
            "type": "string",
            "description": "Código SKU da [Variante](https://developers.vnda.com.br/docs/cat%C3%A1logo-de-produtos#produto-atributo-e-variante)"
          },
          "id": {
            "type": "string",
            "description": "Código identificador do item no carrinho"
          },
          "product_type": {
            "type": "string",
            "description": "Tipo de produto"
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "URL da imagem da variante"
          }
        },
        "required": [
          "available_quantity",
          "delivery_days",
          "extra",
          "place_id",
          "price",
          "intl_price",
          "product_id",
          "product_name",
          "product_reference",
          "product_url",
          "quantity",
          "seller",
          "seller_name",
          "subtotal",
          "total",
          "updated_at",
          "variant_attributes",
          "variant_min_quantity",
          "variant_name",
          "variant_price",
          "variant_intl_price",
          "variant_properties",
          "variant_sku"
        ]
      },
      "Client.v1": {
        "title": "Client",
        "type": "object",
        "description": "Modelo que representa um cliente na API",
        "properties": {
          "id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "gender": {
            "type": "string"
          },
          "phone_area": {
            "type": "string",
            "pattern": "[0-9]+"
          },
          "phone": {
            "type": "string",
            "pattern": "[0-9]+"
          },
          "document_type": {
            "type": "string",
            "enum": [
              "CPF",
              "CNPJ"
            ]
          },
          "document_number": {
            "type": "string",
            "description": "Número de documento cadastrado pelo cliente"
          },
          "cpf": {
            "type": "string",
            "pattern": "[0-9]+"
          },
          "cnpj": {
            "type": "string",
            "pattern": "[0-9]+"
          },
          "ie": {
            "type": "string"
          },
          "tags": {
            "type": "string"
          },
          "lists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "facebook_uid": {
            "type": "string"
          },
          "liked_facebook_page": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "birthdate": {
            "type": "string",
            "format": "date"
          },
          "recent_address": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "company_name": {
                  "type": "string"
                },
                "street_name": {
                  "type": "string"
                },
                "street_number": {
                  "type": "string"
                },
                "neighborhood": {
                  "type": "string"
                },
                "complement": {
                  "type": "string"
                },
                "reference": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "zip": {
                  "type": "string"
                },
                "first_phone_area": {
                  "type": "string"
                },
                "first_phone": {
                  "type": "string"
                },
                "second_phone_area": {
                  "type": "string"
                },
                "second_phone": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "documents": {
                  "type": "object",
                  "properties": {
                    "cpf": {
                      "type": "string"
                    },
                    "cnpj": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "auth_token": {
            "type": "string"
          },
          "last_confirmed_order_at": {
            "type": "string",
            "format": "date-time"
          },
          "received_orders_count": {
            "type": "integer"
          },
          "confirmed_orders_count": {
            "type": "integer"
          },
          "canceled_orders_count": {
            "type": "integer"
          },
          "renew_password": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "ClientAddress.v1": {
        "title": "Client",
        "type": "object",
        "description": "Modelo que representa os endereços cadastrados pelo cliente na API",
        "properties": {
          "id": {
            "type": "integer"
          },
          "street_name": {
            "type": "string"
          },
          "street_number": {
            "type": "string"
          },
          "complement": {
            "type": "string"
          },
          "neighborhood": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "client_id": {
            "type": "integer"
          }
        }
      },
      "Coupon.v1": {
        "title": "Coupon",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "uses_per_code": {
            "type": "integer"
          },
          "uses_per_user": {
            "type": "integer"
          },
          "referrer_email": {
            "type": "string",
            "format": "email"
          },
          "user_id": {
            "type": "integer"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "orders_count": {
            "type": "integer"
          }
        },
        "description": "Modelo que representa um cupom de desconto"
      },
      "Customization.v1": {
        "title": "Customization",
        "type": "object",
        "description": "Modelo que representa uma customização",
        "properties": {
          "id": {
            "type": "integer"
          },
          "group_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "image_uid": {
            "type": "string"
          },
          "image_name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "intl_price": {
            "type": "number"
          },
          "quantity": {
            "type": "integer"
          },
          "handling_days": {
            "type": "integer"
          },
          "tag_id": {
            "type": "integer"
          },
          "sku": {
            "type": "string"
          },
          "pattern": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Products_attributes.v1": {
        "title": "Products Attributes",
        "type": "object",
        "description": "Modelo que representa um atributo customizado de produto",
        "properties": {
          "index": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "mandatory": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "Discount.v1": {
        "title": "Discount",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Código identificador `ID` do desconto"
          },
          "name": {
            "type": "string",
            "description": "Nome do desconto ou promoção"
          },
          "description": {
            "type": "string",
            "description": "Descrição do desconto"
          },
          "start_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data de início da regra do desconto"
          },
          "end_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data de fim da regra do desconto"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Indica se o desconto está habilitado (`true`) ou desabilitado (`false`)"
          },
          "facebook": {
            "type": "boolean",
            "description": "Em desuso",
            "default": false
          },
          "valid_to": {
            "type": "string",
            "description": "Indica a regra da promoção: se o desconto é aplicado na vitrine ou no carrinho da loja "
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do cliente, no caso de promoções direcionadas para clientes específicos"
          },
          "cpf": {
            "type": "string",
            "pattern": "[0-9]{11}",
            "description": "Cadastro de Pessoa Física (CPF) do cliente, no caso de promoções direcionadas para clientes específicos"
          },
          "tags": {
            "type": "string",
            "description": "Tag de agrupamento de promoção"
          }
        },
        "required": [
          "name",
          "start_at",
          "enabled"
        ],
        "description": "Modelo que representa uma promoção na API"
      },
      "Discount_rule.v1": {
        "title": "Discount Rule",
        "type": "object",
        "description": "Modelo que representa uma regra de desconto na API",
        "properties": {
          "id": {
            "type": "integer"
          },
          "amount": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": false,
            "exclusiveMaximum": false
          },
          "type": {
            "type": "string",
            "enum": [
              "fixed",
              "percentage"
            ]
          },
          "apply_to": {
            "type": "string"
          },
          "min_quantity": {
            "type": "integer",
            "default": 0
          },
          "product": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "reference": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "tag": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "combined_product": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "reference": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "min_subtotal": {
            "type": "number"
          },
          "shipping_method": {
            "type": "string"
          },
          "shipping_rule": {
            "type": "string",
            "enum": [
              "any",
              "all"
            ]
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "agent_tag": {
            "type": "string"
          },
          "channel": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "amount",
          "type",
          "apply_to",
          "min_quantity",
          "min_subtotal"
        ]
      },
      "Invoice.v1": {
        "title": "Invoice",
        "type": "object",
        "description": "Modelo que representa uma nota fiscal na API",
        "properties": {
          "number": {
            "type": "integer",
            "description": "Número da nota fiscal"
          },
          "series": {
            "type": "integer",
            "description": "Número de série da nota fiscal"
          },
          "issued_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data e horário da criação da nota fiscal"
          },
          "key": {
            "type": "string",
            "description": "Chave da nota fiscal"
          },
          "volumes": {
            "type": "integer"
          }
        },
        "required": [
          "number"
        ]
      },
      "Menu.v1": {
        "title": "Menu",
        "type": "object",
        "description": "Modelo que representa um menu na API",
        "properties": {
          "id": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "external": {
            "type": "boolean"
          },
          "parent_id": {
            "type": "integer"
          },
          "tag_id": {
            "type": "integer"
          },
          "tag_name": {
            "type": "string"
          },
          "page_id": {
            "type": "integer"
          },
          "page_slug": {
            "type": "string"
          },
          "items_count": {
            "type": "integer"
          },
          "updated_at": {
            "type": "string",
            "format": "date"
          },
          "tooltip": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Menu.v1"
            }
          },
          "image_url": {
            "type": "string"
          },
          "simple_url": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "norder": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Menu_in_tree.v1": {
        "title": "Menu (Tree)",
        "type": "object",
        "description": "Modelo que representa um menu na API quando retornado pela ação de menu em árvore",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "external": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "tag_id": {
            "type": "integer"
          },
          "page_id": {
            "type": "integer"
          },
          "items_count": {
            "type": "integer"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Menu_in_tree.v1"
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date"
          },
          "tooltip": {
            "type": "string"
          },
          "image_url": {
            "type": "string"
          },
          "simple_url": {
            "type": "string"
          },
          "norder": {
            "type": "integer"
          }
        }
      },
      "Order.v1": {
        "title": "Order",
        "type": "object",
        "description": "Modelo que representa um pedido na API",
        "properties": {
          "rebate_discount": {
            "type": "number",
            "minimum": 0,
            "description": "Desconto por bônus do cliente"
          },
          "rebate_token": {
            "type": "string",
            "nullable": true,
            "description": "Código identificador `ID` do desconto por bônus"
          },
          "user_id": {
            "type": "integer",
            "description": "Código identificador `ID` do cliente"
          },
          "updated_at": {
            "type": "string",
            "description": "Data da última atualização do pedido"
          },
          "tracking_code_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lista com os códigos de rastreio dos pacotes do pedido"
          },
          "tracking_code": {
            "type": "string",
            "description": "Código de rastreio do pacote"
          },
          "total": {
            "type": "number",
            "minimum": 0,
            "description": "Valor final do pedido"
          },
          "token": {
            "type": "string"
          },
          "taxes": {
            "type": "number",
            "minimum": 0
          },
          "subtotal": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Valor da soma dos itens do pedido, desconsiderando descontos e frete."
          },
          "status": {
            "type": "string",
            "enum": [
              "received",
              "confirmed",
              "canceled"
            ],
            "description": "Status do pedido"
          },
          "payment_due_date": {
            "type": "string",
            "format": "date"
          },
          "slip_url": {
            "type": "string"
          },
          "slip_token": {
            "type": "string"
          },
          "slip_due_date": {
            "type": "string",
            "format": "date"
          },
          "slip": {
            "type": "boolean"
          },
          "shipping_tracked_at": {
            "type": "string",
            "format": "date-time"
          },
          "shipping_price": {
            "type": "number"
          },
          "shipping_label": {
            "type": "string"
          },
          "shipped_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Data e horário de envio do pedido"
          },
          "received_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Data e horário de recebimento do pedido"
          },
          "payment_tid": {
            "type": "string",
            "nullable": true
          },
          "payment_method": {
            "type": "string",
            "description": "Método de pagamento do pedido"
          },
          "payment_gateway": {
            "type": "string",
            "nullable": true
          },
          "payment_authorization": {
            "type": "string",
            "nullable": true
          },
          "paid_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Data e horário do pagamento do pedido"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "extra": {
                  "type": "object"
                },
                "height": {
                  "type": "number"
                },
                "id": {
                  "type": "integer"
                },
                "length": {
                  "type": "number"
                },
                "original_price": {
                  "type": "number"
                },
                "package": {
                  "type": "string"
                },
                "picture_url": {
                  "type": "string"
                },
                "place_city": {
                  "type": "string",
                  "nullable": true
                },
                "place_id": {
                  "type": "integer"
                },
                "place_name": {
                  "type": "string",
                  "nullable": true
                },
                "price": {
                  "type": "number"
                },
                "product_id": {
                  "type": "integer"
                },
                "product_name": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                },
                "reference": {
                  "type": "string"
                },
                "sku": {
                  "type": "string"
                },
                "total": {
                  "type": "number",
                  "minimum": 0
                },
                "variant_id": {
                  "type": "integer"
                },
                "variant_name": {
                  "type": "string",
                  "nullable": true
                },
                "weight": {
                  "type": "number"
                },
                "width": {
                  "type": "number"
                },
                "barcode": {
                  "type": "string"
                }
              },
              "required": [
                "extra",
                "product_id",
                "product_name",
                "quantity",
                "reference",
                "sku",
                "total",
                "variant_id",
                "variant_name",
                "weight",
                "width"
              ],
              "$ref": "#/components/schemas/Product.order"
            }
          },
          "installments": {
            "type": "number",
            "minimum": 1,
            "description": "Parcelas do pagamento parcelado"
          },
          "id": {
            "type": "integer",
            "description": "Código identificador do pedido"
          },
          "extra": {
            "type": "object",
            "description": "Campo de observações do pedido"
          },
          "expected_delivery_date": {
            "type": "string",
            "format": "date"
          },
          "email": {
            "type": "string",
            "description": "Email do cliente"
          },
          "discount_price": {
            "type": "number",
            "description": "Valor do desconto aplicado no pedido"
          },
          "deposit": {
            "type": "boolean"
          },
          "delivery_type": {
            "type": "string"
          },
          "delivery_message": {
            "type": "string"
          },
          "delivery_days": {
            "type": "integer",
            "description": "Dias para entrega"
          },
          "delivered_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Data de entrega do pedido"
          },
          "coupon_code": {
            "type": "string",
            "nullable": true,
            "description": "Código de cupom do pedido"
          },
          "confirmed_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Data e horário de confirmação do pedido"
          },
          "code": {
            "type": "string",
            "description": "Código do pedido"
          },
          "client_id": {
            "type": "integer",
            "description": "Código identificador (`ID`) do cliente"
          },
          "channel": {
            "type": "string",
            "enum": [
              "ecommerce",
              "direct"
            ],
            "description": "Canal de venda que originou o pedido"
          },
          "cart_id": {
            "type": "integer",
            "description": "Código identificador do carrinho que originou o pedido"
          },
          "card_validity": {
            "type": "string",
            "nullable": true,
            "description": "Data de validade do cartão de crédito"
          },
          "card_number": {
            "type": "string",
            "pattern": "^[*]{10,12}[0-9]{4}$",
            "description": "Número do cartão de crédito"
          },
          "card": {
            "type": "boolean",
            "description": "Retorna `true` se o método de pagamento do pedido é por cartão de crédito."
          },
          "canceled_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Data e horário do cancelamento do pedido"
          },
          "browser_ip": {
            "type": "string",
            "format": "ipv4",
            "description": "Endereço IP de origem do pedido"
          },
          "agent": {
            "type": "string",
            "nullable": true,
            "description": "Agente do pedido"
          },
          "affiliate_tag": {
            "type": "string",
            "nullable": true
          },
          "pix_qr_code": {
            "type": "string",
            "nullable": true
          },
          "payment_authorization_code": {
            "type": "string",
            "nullable": true,
            "description": "Código de autorização do pagamento"
          },
          "bonus_granted": {
            "type": "boolean",
            "description": "Indica se o pedido gerou bônus"
          },
          "has_split": {
            "type": "boolean"
          },
          "pix": {
            "type": "boolean",
            "description": "Indica se o pedido foi pago usando o Pix"
          },
          "ame_qr_code": {
            "type": "string",
            "nullable": true
          },
          "ame": {
            "type": "boolean",
            "description": "Indica se o pedido foi pago usando o Ame"
          },
          "antifraud_assurance": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "rebate_discount",
          "updated_at",
          "total",
          "token",
          "taxes",
          "subtotal",
          "status",
          "slip",
          "shipped_at",
          "received_at",
          "payment_method",
          "payment_gateway",
          "payment_authorization",
          "paid_at",
          "email",
          "discount_price",
          "deposit",
          "delivered_at",
          "coupon_code",
          "confirmed_at",
          "code",
          "client_id",
          "channel",
          "cart_id",
          "card_validity",
          "card_number",
          "card",
          "browser_ip",
          "pix",
          "ame"
        ]
      },
      "Order_item_customization.v1": {
        "title": "Order Item Customization",
        "type": "object",
        "description": "Modelo que representa uma personalização de item do pedido na API",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Código identificador `ID` da personalização"
          },
          "number": {
            "type": "integer",
            "minimum": 1,
            "description": "Número de tipos diferentes de personalizações em produtos do pedido"
          },
          "group_name": {
            "type": "string",
            "description": "Grupo em que se enquadra a personalização"
          },
          "name": {
            "type": "string",
            "description": "Nome do produto"
          },
          "price": {
            "type": "number",
            "description": "Preço do produto"
          },
          "intl_price": {
            "type": "number",
            "description": "Preço internacional"
          },
          "handling_days": {
            "type": "integer",
            "description": "Dias de manuseio do produto"
          },
          "sku": {
            "type": "string",
            "nullable": true,
            "description": "Código SKU da variante de produto"
          }
        },
        "required": [
          "id",
          "number",
          "group_name",
          "name",
          "price",
          "intl_price",
          "handling_days",
          "sku"
        ]
      },
      "Payables.v1": {
        "title": "Recebíveis do usuário",
        "description": "Valores que o usuário possui a receber",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "fee": {
            "type": "number"
          },
          "installment": {
            "type": "number"
          },
          "credit_date": {
            "type": "string",
            "format": "date-time"
          },
          "order_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_id": {
            "type": "number"
          }
        }
      },
      "Payment_recipient.v1": {
        "title": "Payment Recipient",
        "type": "object",
        "description": "Modelo que representa um recebedor na API",
        "properties": {
          "id": {
            "type": "integer"
          },
          "percentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "charge_processing_fee": {
            "type": "boolean",
            "default": false
          },
          "liable": {
            "type": "boolean",
            "default": false
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tag_name": {
            "type": "string"
          },
          "place_id": {
            "type": "integer"
          },
          "recipient_id": {
            "type": "integer"
          },
          "tag_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "include_shipping": {
            "type": "boolean",
            "default": true,
            "description": "Indica se o frete deve ser incluído no split do pagamento"
          }
        },
        "required": [
          "id",
          "percentage",
          "recipient_id"
        ]
      },
      "Place.v1": {
        "title": "Place",
        "type": "object",
        "description": "Modelo que representa um local na API",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "address_line_1": {
            "type": "string",
            "maxLength": 80
          },
          "address_line_2": {
            "type": "string",
            "maxLength": 80
          },
          "city": {
            "type": "string",
            "maxLength": 80
          },
          "neighborhood": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "home_page": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "maxLength": 200
          },
          "email": {
            "type": "string"
          },
          "first_phone": {
            "type": "string"
          },
          "second_phone": {
            "type": "string"
          },
          "mobile_phone": {
            "type": "string"
          },
          "only_cash": {
            "type": "boolean",
            "default": false
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "marker_url": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "opening_hours": {
            "type": "string"
          },
          "warehouse": {
            "type": "boolean",
            "default": false
          },
          "legal_name": {
            "type": "string"
          },
          "cnpj": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "address_line_1",
          "city",
          "email"
        ]
      },
      "Product.v1": {
        "title": "Product",
        "type": "object",
        "description": "Modelo que representa um produto na API",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Código identificador `ID` do priduto"
          },
          "active": {
            "type": "boolean",
            "description": "Indica se o produto está ativo (`true`) ou invativo (`false`)"
          },
          "available": {
            "type": "boolean",
            "description": "Indica se o produto está disponível (`true`) ou indisponível (`false`)"
          },
          "category_tags": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tag_type": {
                  "type": "string",
                  "description": "Tipo de tag"
                },
                "name": {
                  "type": "string",
                  "description": "Nome da tag"
                },
                "title": {
                  "type": "string",
                  "description": "Título da tag"
                }
              }
            },
            "example": [
              {
                "tag_type": "flag",
                "name": "tag-veganos",
                "title": "Veg"
              },
              {
                "tag_type": "flag",
                "name": "liquida10",
                "title": "10OFF"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Descrição do produto"
          },
          "discount_id": {
            "type": "integer",
            "description": "Código de desconto"
          },
          "html_description": {
            "type": "string",
            "description": "Descrição do produto em HTML"
          },
          "image_url": {
            "type": "string",
            "description": "URL da imagem do produto"
          },
          "installments": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Relação das parcelas para pagamento parcelado"
          },
          "min_quantity": {
            "type": "string",
            "description": "Quantidade mínima para venda do produto"
          },
          "name": {
            "type": "string",
            "description": "Nome do produto"
          },
          "on_sale": {
            "type": "boolean",
            "description": "Indica se o produto está em promoção (`true`) ou não (`false`)"
          },
          "plain_description": {
            "type": "string",
            "description": "Descrição simplificada"
          },
          "price": {
            "type": "number",
            "description": "Preço do item"
          },
          "rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "integer"
              },
              "votes": {
                "type": "integer"
              }
            },
            "description": "Média de avaliação do produto"
          },
          "reference": {
            "type": "string",
            "description": "Código de referência do produto"
          },
          "sale_price": {
            "type": "number",
            "description": "Preço promocional"
          },
          "slug": {
            "type": "string",
            "description": "slug do produto"
          },
          "tag_names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lista de tags que o produto é associado"
          },
          "updated_at": {
            "type": "string",
            "description": "Data e horário da última atualização do produto"
          },
          "url": {
            "type": "string",
            "description": "URL do produto"
          },
          "variants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "{id}": {
                  "$ref": "#/components/schemas/Product_variant.v1"
                }
              }
            },
            "description": "Variantes do produto"
          },
          "discount_rule": {
            "type": "object",
            "nullable": true,
            "required": [
              "type",
              "amount"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "fixed",
                  "percentage"
                ]
              },
              "amount": {
                "type": "number"
              }
            },
            "description": "Regras de desconto de uma promoção"
          },
          "images": {
            "type": "array",
            "description": "Imagens do produto",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "id do produto"
                },
                "url": {
                  "type": "string",
                  "description": "Url do produto"
                },
                "updated_at": {
                  "type": "string",
                  "description": "Data e horário da última atualização do produto"
                },
                "variant_ids": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            },
            "example": [
              {
                "id": 0,
                "url": "https://b0.vnda.com.br/product.gif?v=1514479363",
                "updated_at": "2017-12-28T14:42:43.000-02:00",
                "variant_ids": [
                  0
                ]
              }
            ]
          }
        },
        "required": [
          "discount_rule"
        ]
      },
      "Product_variant.v1": {
        "description": "Modelo que representa uma variante na API",
        "type": "object",
        "properties": {
          "available": {
            "type": "boolean"
          },
          "available_quantity": {
            "type": "integer"
          },
          "custom_attributes": {
            "type": "object",
            "description": "Customização da variante"
          },
          "handling_days": {
            "type": "integer",
            "description": "Dias de manuseio da variante"
          },
          "height": {
            "type": "number"
          },
          "id": {
            "type": "integer",
            "minimum": 1
          },
          "image_url": {
            "type": "string",
            "minLength": 1,
            "description": "URL da imagem da variante"
          },
          "installments": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "inventories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product_variant_inventory.v1"
            }
          },
          "length": {
            "type": "number"
          },
          "main": {
            "type": "boolean"
          },
          "min_quantity": {
            "type": "integer",
            "description": "Quantidade mínima para venda"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "Nome da variante"
          },
          "norder": {
            "type": "integer"
          },
          "price": {
            "type": "number",
            "description": "Preço do item"
          },
          "product_id": {
            "type": "integer"
          },
          "properties": {
            "type": "object",
            "properties": {
              "property1": {
                "$ref": "#/components/schemas/Variant_property.v1"
              },
              "property2": {
                "$ref": "#/components/schemas/Variant_property.v1"
              },
              "property3": {
                "$ref": "#/components/schemas/Variant_property.v1"
              }
            },
            "description": "[Atributos](https://developers.vnda.com.br/docs/atributos-de-produto) da variante"
          },
          "quantity": {
            "type": "integer"
          },
          "quantity_sold": {
            "type": "integer",
            "description": "Quantidade de itens vendidos"
          },
          "sale_price": {
            "type": "number",
            "description": "Preço promocional"
          },
          "sku": {
            "type": "string",
            "minLength": 1
          },
          "slug": {
            "type": "string",
            "minLength": 1
          },
          "stock": {
            "type": "integer",
            "description": "Quantidade de itens disponíveis"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data e horário da última atualização da variante"
          },
          "weight": {
            "type": "number",
            "description": "Massa do produto, em gramas"
          },
          "width": {
            "type": "number",
            "description": "Largura do produto, em centímetros"
          }
        },
        "required": [
          "available",
          "available_quantity",
          "custom_attributes",
          "handling_days",
          "height",
          "image_url",
          "installments",
          "length",
          "main",
          "min_quantity",
          "name",
          "norder",
          "price",
          "product_id",
          "properties",
          "quantity",
          "sale_price",
          "sku",
          "slug",
          "stock",
          "updated_at",
          "weight",
          "width"
        ]
      },
      "Product_variant_inventory.v1": {
        "description": "Modelo que representa um inventory da variante na API",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Código identificador `ID` do inventário"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Nome do inventário"
          },
          "place_id": {
            "type": "integer",
            "description": "Código identificador do local"
          },
          "place_name": {
            "type": "string",
            "nullable": true,
            "description": "Nome do local"
          },
          "price": {
            "type": "number",
            "description": "Preço do item"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantidade de itens no inventário"
          },
          "quantity_sold": {
            "type": "integer",
            "description": "Quantidade de itens vendidos"
          },
          "sale_price": {
            "type": "number",
            "description": "Preço promocional"
          },
          "slug": {
            "type": "string",
            "minLength": 1,
            "description": "Slug do inventário"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data e horário da última atualização da variante no inventário"
          },
          "variant_id": {
            "type": "integer",
            "description": "Código da variante"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data de criação do inventário"
          }
        },
        "required": [
          "created_at",
          "id",
          "place_id",
          "price",
          "quantity",
          "quantity_sold",
          "sale_price",
          "slug",
          "updated_at",
          "variant_id"
        ],
        "example": {
          "inventories": {
            "id": 524,
            "slug": "normandia",
            "price": 132,
            "sale_price": 0,
            "quantity": 500,
            "quantity_sold": 0,
            "name": null,
            "variant_id": 532,
            "updated_at": "2022-12-15T10:44:36.456-03:00",
            "place_id": 3
          }
        }
      },
      "Shipping_methods.v1": {
        "title": "Shipping Methods",
        "type": "object",
        "description": "Modelo que representa as formas de entrega na API",
        "x-examples": {
          "Forma de entrega": {
            "name": "Normal",
            "value": "pac",
            "price": 1.99,
            "description": "Prazo de até 7 dias corridos para a entrega do pedido",
            "delivery_days": 7,
            "value_needed_to_discount": null,
            "shipping_method_id": 423,
            "notice": null
          }
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do tipo de entrega, como por exemplo Normal, Expressa e Agendada"
          },
          "value": {
            "type": "string",
            "description": "Identificador do método de envio"
          },
          "price": {
            "type": "number",
            "description": "Preço de envio"
          },
          "description": {
            "type": "string",
            "description": "Descrição do tipo de envio e prazo"
          },
          "delivery_days": {
            "type": "integer",
            "description": "Número em dias do prazo de envio"
          },
          "value_needed_to_discount": {
            "type": "number",
            "nullable": true,
            "description": "Valor restante da compra para que o carrinho fique elegível para frete grátis"
          },
          "shipping_method_id": {
            "type": "integer",
            "description": "Código identificador `ID` do tipo de envio"
          },
          "notice": {
            "type": "string",
            "nullable": true,
            "description": "Mensagem ou observação sobre a forma de envio"
          },
          "fulfillment_company": {
            "type": "string",
            "nullable": true,
            "description": "Empresa responsável pelo envio"
          }
        },
        "required": [
          "name",
          "value",
          "price",
          "description",
          "delivery_days",
          "shipping_method_id",
          "fulfillment_company"
        ]
      },
      "Order_items.v1": {
        "title": "Order Items",
        "type": "object",
        "description": "Modelo que representa a lista de itens do pedido",
        "properties": {
          "id": {
            "type": "integer"
          },
          "variant_id": {
            "type": "integer"
          },
          "product_id": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          },
          "price": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "length": {
            "type": "number"
          },
          "extra": {
            "type": "object",
            "properties": {
              "customization": {
                "type": "string"
              }
            }
          },
          "picture_url": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "product_name": {
            "type": "string"
          },
          "variant_name": {
            "type": "string"
          },
          "original_price": {
            "type": "string"
          },
          "place_id": {
            "type": "string"
          },
          "place_name": {
            "type": "number"
          },
          "place_city": {
            "type": "number"
          },
          "total": {
            "type": "integer"
          },
          "package": {
            "type": "number"
          },
          "has_customizations": {
            "type": "integer"
          },
          "barcode": {
            "type": "integer"
          }
        }
      },
      "Shop_asset.v1": {
        "title": "Shop Asset",
        "type": "object",
        "description": "Modelo que representa as imagens da loja na API",
        "properties": {
          "id": {
            "type": "integer"
          },
          "position": {
            "type": "string"
          },
          "file_uid": {
            "type": "string"
          },
          "file_name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "Shop_property.v1": {
        "title": "Shop Property",
        "type": "object",
        "description": "Modelo que representa o atributo dos produtos da loja na API",
        "properties": {
          "name": {
            "type": "string"
          },
          "defining": {
            "type": "boolean"
          }
        }
      },
      "Shop_properties.v1": {
        "title": "Shop Properties",
        "type": "object",
        "description": "Modelo que representa os atributos dos produtos da loja na API",
        "properties": {
          "property1": {
            "$ref": "#/components/schemas/Shop_property.v1"
          },
          "property2": {
            "$ref": "#/components/schemas/Shop_property.v1"
          },
          "property3": {
            "$ref": "#/components/schemas/Shop_property.v1"
          }
        }
      },
      "Site_message.v1": {
        "title": "Site Message",
        "type": "object",
        "description": "Modelo que representa as mensagens do site na API",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "call_to_action": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date"
          },
          "updated_at": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Tag.v1": {
        "title": "Tag",
        "type": "object",
        "description": "Modelo que representa uma tag na API",
        "properties": {
          "name": {
            "type": "string",
            "pattern": "[a-z0-9\\-_]+"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "products_count": {
            "type": "integer"
          },
          "image_url": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name"
        ]
      },
      "Template.v1": {
        "title": "Template",
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "path",
          "updated_at"
        ],
        "description": "Modelo que representa um template na API"
      },
      "User.v1": {
        "title": "User",
        "type": "object",
        "description": "Modelo que representa um usuário na API",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Código identificador do usuário"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do usuário"
          },
          "access_token": {
            "type": "string",
            "description": "Token de validação de usuário logado (`access_token`)\n      \nO `access_token` é gerado quando o usuário loga no Admin"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Nome do usuário"
          },
          "admin": {
            "type": "boolean",
            "description": "Identificador de usuários administradores\n\nEsse atributo retorna `true` para um usuário administrador do ambiente de loja"
          },
          "renew_password": {
            "type": "boolean",
            "description": "Identificador de usuários que atualizaram a senha inicial\n\nEsse atributo retorna `true` para um usuário que já redefiniu sua senha pelo menos uma vez"
          },
          "role": {
            "type": "integer",
            "description": "Código da função do usuário na loja:\n\n  - Agente: `0`;\n  - Gestor: `1`;\n  - Local: `2`;\n  - Agente Social Selling: `3`."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags para agrupamento de usuários\nAs tags podem ser são utilizadas para direcionar promoções para determinados usuários, organizar os recebedores em uma divisão de pagamentos, definir regras de comissão"
          },
          "external_code": {
            "type": "string",
            "nullable": true,
            "description": "Código externo do Vendedor. Esse campo é destinado para cadastrar um código de vendedor já existente em outro sistema."
          },
          "phone_area": {
            "type": "string",
            "maxLength": 2,
            "minLength": 2,
            "description": "Código de  Discagem Direta a Distância (DDD) do telefone do usuário"
          },
          "phone": {
            "type": "string",
            "maxLength": 9,
            "minLength": 8,
            "description": "Número de telefone do usuário"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data de inclusão do usuário no Admin"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data de atualização das informações do usuário"
          }
        },
        "required": [
          "email"
        ]
      },
      "Variant_inventory.v1": {
        "description": "Model que representa um inventory da variante",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "place_id": {
            "type": "integer"
          },
          "price": {
            "type": "number",
            "description": "Preço do item"
          },
          "quantity": {
            "type": "integer"
          },
          "quantity_sold": {
            "type": "integer",
            "description": "Quantidade de itens vendidos"
          },
          "sale_price": {
            "type": "number",
            "description": "Preço promocional"
          },
          "slug": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "place_id",
          "price",
          "quantity",
          "quantity_sold",
          "sale_price",
          "slug"
        ]
      },
      "Variant_property.v1": {
        "title": "variant_property",
        "type": "object",
        "properties": {
          "defining": {
            "type": "boolean",
            "description": "Indica se a variante possui uma definição (`true`) ou se a variante não possui (`false`)"
          },
          "name": {
            "type": "string",
            "description": "Nome da propriedade"
          },
          "value": {
            "type": "string",
            "description": "Valor da propriedade"
          }
        },
        "required": [
          "defining",
          "name"
        ],
        "description": "Modelo que representa uma propriedade customizada na API",
        "example": {
          "example-property1": {
            "name": "Tamanho",
            "value": "G",
            "defining": true
          },
          "example-property2": {
            "name": "Cor",
            "value": "Amarelo",
            "defining": true
          }
        }
      },
      "User.v0": {
        "title": "Campos de cadastro de usuário",
        "type": "object",
        "description": "Modelo que representa o cadastro de usuário",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do usuário"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Nome do usuário"
          },
          "role_name": {
            "type": "string",
            "enum": [
              "Agente",
              "Gestor",
              "Local",
              "Agente Social Selling"
            ],
            "description": "Função do usuário na loja"
          },
          "password": {
            "type": "string",
            "description": "Senha do usuário"
          },
          "password_confirmation": {
            "type": "string",
            "description": "Confirmação de senha do usuário"
          },
          "external_code": {
            "type": "string",
            "description": "Código externo do Vendedor. Esse campo é destinado para cadastrar um código de vendedor já existente em outro sistema."
          },
          "phone_area": {
            "type": "string",
            "maxLength": 2,
            "minLength": 2,
            "description": "Código de  Discagem Direta a Distância (DDD) do telefone do usuário"
          },
          "phone": {
            "type": "string",
            "maxLength": 9,
            "minLength": 8,
            "description": "Número de telefone do usuário"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags para agrupamento de usuários\nCom as tags o lojista pode agrupar usuários para direcionar promoções para determinados usuários, fazer uma divisão de pagamentos, definir regras de comissão, entre outras aplicações com usuários"
          }
        },
        "required": [
          "email"
        ]
      },
      "SimpleProduct": {
        "title": "SimpleProduct",
        "type": "object",
        "description": "Modelo simplificado de um produto para atualização e criação",
        "properties": {
          "reference": {
            "type": "string",
            "description": "Código de Referência do produto"
          },
          "name": {
            "type": "string",
            "description": "Nome do produto"
          },
          "description": {
            "type": "string",
            "description": "Descrição do produto"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "Indica se o produto está ativo (`true`) ou invativo (`false`)"
          },
          "tag_list": {
            "type": "string",
            "example": "tag1, tag2",
            "description": "Tags associadas ao produto"
          },
          "product_type": {
            "type": "string",
            "description": "Tipo de produto",
            "enum": [
              "product",
              "sample",
              "subscription"
            ],
            "default": "product"
          }
        },
        "required": [
          "reference",
          "name"
        ]
      },
      "Cart.simple": {
        "title": "Parâmetros de carrinho resumido",
        "description": "Parâmetros criação e atualização de carrinho",
        "type": "object",
        "properties": {
          "agent": {
            "type": "string",
            "description": "Agente que criou o carrinho"
          },
          "zip": {
            "type": "string",
            "description": "Código de Endereçamento Postal (CEP) do destinatário do pedido"
          },
          "client_id": {
            "type": "integer",
            "minimum": 0,
            "description": "Código identificador `ID` do cliente"
          },
          "coupon_code": {
            "type": "string",
            "description": "Código identificador `ID` do desconto do carrinho"
          },
          "email": {
            "type": "string",
            "deprecated": true,
            "format": "email",
            "description": "Email do cliente"
          },
          "rebate_token": {
            "type": "string",
            "description": "Token do desconto"
          },
          "user_id": {
            "type": "number",
            "description": "Id do agente"
          }
        }
      },
      "Cart.v2": {
        "title": "Lista de carrinhos",
        "description": "Modelo de lista de carrinhos",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Cart.v1"
        }
      },
      "Product.v0": {
        "type": "object",
        "title": "Produto",
        "description": "Modelo de carcaterística de produto para item no carrinho",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Código SKU da variante do produto"
          },
          "quantity": {
            "type": "integer",
            "minimum": 0,
            "description": "Unidades do produto disponíveis fisicamente"
          },
          "extra": {
            "type": "object",
            "description": "Campo para registro de observações, chave ou valores necessários"
          },
          "place_id": {
            "type": "integer",
            "description": "Código identificador do local do produto",
            "minimum": 0
          },
          "store_coupon_code": {
            "type": "string",
            "description": "Código de cupom"
          },
          "customizations": {
            "type": "array",
            "description": "[Personalização](http://ajuda.vnda.com.br/pt-BR/articles/1763398-funcionalidades-produtos-personalizados) do produto",
            "items": {
              "properties": {
                "Customization": {
                  "type": "string",
                  "description": "[Personalização](http://ajuda.vnda.com.br/pt-BR/articles/1763398-funcionalidades-produtos-personalizados) incluídas no Admin da loja. \nSe por exemplo a customização do produto é a cor, o parâmetro para a requisição deve ser `Color` ao invés de `CUstomization`.  "
                }
              }
            },
            "required": [
              "sku",
              "quantity"
            ]
          }
        }
      },
      "Shipping_address": {
        "title": "Endereço de envio",
        "description": "Modelo de endereço de envio para carrinho e pedido",
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "Nome do cliente"
          },
          "last_name": {
            "type": "string",
            "description": "Sobrenome do cliente"
          },
          "company_name": {
            "type": "string",
            "description": "Nome da empresa (para clientes jurídicos)"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do cliente"
          },
          "first_phone_area": {
            "type": "string",
            "description": "Código de Discagem Direta à Distância (DDD)"
          },
          "first_phone": {
            "type": "string",
            "description": "Telefone do cliente"
          },
          "second_phone_area": {
            "type": "string",
            "description": "Código de Discagem Direta à Distância (DDD)"
          },
          "second_phone": {
            "type": "string",
            "description": "Telefone do cliente"
          },
          "recipient_name": {
            "description": "Nome do recebedor"
          },
          "street_name": {
            "type": "string",
            "description": "Logradouro"
          },
          "street_number": {
            "description": "Número",
            "type": "string"
          },
          "complement": {
            "type": "string",
            "description": "Complemento"
          },
          "neighborhood": {
            "type": "string",
            "description": "Bairro"
          },
          "reference": {
            "type": "string",
            "description": "Ponto de referência"
          },
          "zip": {
            "type": "string",
            "description": "Código de Endereçamento Postal (CEP)"
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "cpf": {
                  "description": "Cadastro de Pessoa Física",
                  "type": "string"
                },
                "rg": {
                  "description": "Registro Geral",
                  "type": "string"
                },
                "cnpj": {
                  "description": "Cadastro Nacional de Pessoas Jurídicas",
                  "type": "string"
                },
                "ie": {
                  "type": "string",
                  "description": "Inscrição Estadual"
                }
              }
            }
          }
        },
        "required": [
          "zip"
        ]
      },
      "Product.order": {
        "title": "Produto em um pedido",
        "description": "Modelo de produto em um pedido",
        "type": "object",
        "properties": {
          "extra": {
            "type": "object",
            "description": "Dados extra do produto"
          },
          "height": {
            "type": "number",
            "description": "Altura do produto, em centímetros."
          },
          "id": {
            "type": "integer",
            "description": "código identificador do produto"
          },
          "length": {
            "type": "number",
            "description": "Comprimento do produito, em centímetros."
          },
          "original_price": {
            "type": "number",
            "description": "Preço original"
          },
          "package": {
            "type": "string",
            "description": "Pacote do produto"
          },
          "picture_url": {
            "type": "string",
            "description": "URL da imagem do produto"
          },
          "place_city": {
            "type": "string",
            "nullable": true,
            "description": "Cidade que o produto está"
          },
          "place_id": {
            "type": "integer",
            "description": "Código identificador do local do produto"
          },
          "place_name": {
            "type": "string",
            "nullable": true,
            "description": "Nome do local do produto"
          },
          "price": {
            "type": "number",
            "description": "Preço do produto"
          },
          "product_id": {
            "type": "integer"
          },
          "product_name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "description": "Unidades do produto"
          },
          "reference": {
            "type": "string",
            "description": "Código de referência do produto"
          },
          "sku": {
            "type": "string",
            "description": "Código SKU da variante do produto"
          },
          "total": {
            "type": "number",
            "minimum": 0,
            "description": "Valor total do produto"
          },
          "variant_id": {
            "type": "integer",
            "description": "Código identificador da variante do produto"
          },
          "variant_name": {
            "type": "string",
            "nullable": true,
            "description": "Nome da variante do produto"
          },
          "weight": {
            "type": "number",
            "description": "Massa do produto, em gramas"
          },
          "width": {
            "type": "number",
            "description": "Largura do produto, em centímetros"
          },
          "barcode": {
            "type": "string",
            "description": "Código de barras do produto"
          },
          "has_customizations": {
            "type": "boolean",
            "description": "Indica se o produto possui customização."
          }
        },
        "required": [
          "extra",
          "product_id",
          "product_name",
          "quantity",
          "reference",
          "sku",
          "total",
          "variant_id",
          "variant_name",
          "weight",
          "width"
        ]
      }
    },
    "securitySchemes": {
      "Token": {
        "type": "http",
        "scheme": "bearer",
        "description": "Token que deve ser enviado em todas as requisições. [Este token](http://ajuda.vnda.com.br/pt-BR/articles/1506726-chave-token-de-api) pode ser gerado pelo painel admin e não possui data de expiração. O Token e URLs gerados e utilizados no ambiente de produção serão diferentes dos que foram gerados no [ambiente de testes](http://ajuda.vnda.com.br/pt-BR/articles/3760960-ambiente-de-testes-staging). O valor de Authorization será 'Bearer seu_token'"
      },
      "X-Shop-Host": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Shop-Host",
        "description": "Domínio da loja como `www.nomedaloja.com.br`"
      }
    },
    "responses": {
      "204": {
        "description": "Quando um registro é atualizado",
        "content": {
          "application/json": {
            "schema": {
              "nullable": true
            }
          }
        },
        "headers": {
          "X-Request-Id": {
            "schema": {
              "type": "string"
            },
            "description": "Id da requisição"
          }
        }
      },
      "404": {
        "description": "Quando o registro não é encontrado",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              },
              "required": [
                "error"
              ]
            },
            "examples": {
              "Não encontrado": {
                "value": {
                  "error": "not found"
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "headers": {
          "X-Request-Id": {
            "schema": {
              "type": "string"
            },
            "description": "Id da requisição"
          }
        }
      },
      "422": {
        "description": "Quando os parâmetros enviados são inválidos",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/422.v1"
            }
          }
        },
        "headers": {
          "X-Request-Id": {
            "schema": {
              "type": "string"
            },
            "description": "Id da requisição"
          }
        }
      },
      "Banners": {
        "description": "Resposta que representa uma lista de banners",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Banner"
              }
            }
          }
        }
      },
      "Banner": {
        "description": "Quando um banner é encontrado",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Banner"
            },
            "examples": {
              "example-1": {
                "value": {
                  "big_thumb": "//b3.vnda.com.br/200x/demo%2F2019%2F02%2F25%2F19_49_32_754_home1b.jpg",
                  "color": "",
                  "description": "[COLEÇAO LA MEDINAi](https://exemplo.com/ovos-mexidos.pdf)",
                  "end_at": "2019-12-01T08:50:00.000-03:00",
                  "external": false,
                  "file_name": "demo%2F2019%2F02%2F25%2F19_49_32_754_home1b.jpg",
                  "file_uid": "demo%2F2019%2F02%2F25%2F19_49_32_754_home1b.jpg",
                  "html_description": "<p><a href=\"https://exemplo.com/ovos-mexidos.pdf\">COLEÇAO LA MEDINAi</a></p>\n",
                  "id": 2,
                  "norder": null,
                  "plain_description": "COLEÇAO LA MEDINAi (https://exemplo.com/ovos-mexidos.pdf)",
                  "small_thumb": "//b3.vnda.com.br/26x26/demo%2F2019%2F02%2F25%2F19_49_32_754_home1b.jpg",
                  "start_at": "2018-12-13T00:00:00.000-02:00",
                  "subtitle": null,
                  "tag": "fullbanner",
                  "title": "Fullbanner 2",
                  "updated_at": "2021-01-11T17:14:48.999-03:00",
                  "url": null
                }
              }
            }
          }
        }
      },
      "AllBanners": {
        "description": "Quando existem banners dentro do período de validade",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SlimBanner"
                }
              }
            }
          }
        }
      },
      "Carts": {
        "description": "Resposta que representa uma lista de carrinhos",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Cart"
              },
              "example": [
                {
                  "updated_at": "2020-07-13T16:35:14.999-03:00",
                  "has_phone": false,
                  "shipping_method": null,
                  "items_count": 1,
                  "has_payment_responses": false,
                  "id": 23,
                  "email": null,
                  "quotation_responses_count": 0,
                  "payment_responses_count": 0,
                  "code": "799594D6EB",
                  "extra": {},
                  "total": 12.1,
                  "token": "zX89SG241cST3lpzQ2nkkqJXppUJYou1jTgL"
                },
                {
                  "shipping_method": null,
                  "has_phone": false,
                  "updated_at": "2020-07-06T22:51:17.171-03:00",
                  "has_payment_responses": false,
                  "items_count": 1,
                  "id": 22,
                  "quotation_responses_count": 0,
                  "payment_responses_count": 0,
                  "email": null,
                  "code": "FDF4819129",
                  "extra": {},
                  "total": 123.1,
                  "token": "gt2hvYm96LNzVhcKGbR9BJnQlpaqL4kMVYAs"
                }
              ]
            },
            "examples": {
              "example-1": {
                "value": [
                  {
                    "updated_at": "2020-07-13T16:35:14.999-03:00",
                    "has_phone": false,
                    "shipping_method": null,
                    "items_count": 1,
                    "has_payment_responses": false,
                    "id": 23,
                    "email": null,
                    "quotation_responses_count": 0,
                    "payment_responses_count": 0,
                    "code": "799594D6EB",
                    "extra": {},
                    "total": 12.1,
                    "token": "zX89SG241cST3zQ2nkkqJXUJYou1jTgL"
                  },
                  {
                    "shipping_method": null,
                    "has_phone": false,
                    "updated_at": "2020-07-06T22:51:17.171-03:00",
                    "has_payment_responses": false,
                    "items_count": 1,
                    "id": 22,
                    "quotation_responses_count": 0,
                    "payment_responses_count": 0,
                    "email": null,
                    "code": "FDF4819129",
                    "extra": {},
                    "total": 123.1,
                    "token": "gt2hvYmLNzVhcKGbR9BJnQaqL4kMVYAs"
                  }
                ]
              }
            }
          }
        }
      },
      "Channels": {
        "description": "Resposta que representa uma lista de channels",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Lista de channels": {
                "value": [
                  "direct",
                  "direct_app",
                  "ecommerce"
                ]
              }
            }
          }
        },
        "headers": {}
      },
      "CartItemCustomizationList": {
        "description": "Resposta que representa uma lista de customizações de um item",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CartItemCustomization"
                }
              },
              "items": {
                "$ref": "#/components/schemas/CartItemCustomization"
              }
            }
          }
        }
      },
      "States": {
        "description": "Resposta que representa uma lista de estados",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Lista de estados": {
                "value": [
                  "RS",
                  "PE",
                  "MG"
                ]
              }
            }
          }
        }
      },
      "ProductPrice": {
        "description": "Resposta que representa os dados de preços de um produto e suas variantes",
        "content": {
          "application/json": {
            "schema": {
              "description": "",
              "type": "object",
              "x-examples": {
                "example-1": {
                  "available": true,
                  "on_sale": false,
                  "price": 10,
                  "sale_price": 10,
                  "intl_price": 0,
                  "discount_rule": null,
                  "installments": [
                    {
                      "number": 1,
                      "price": 10,
                      "interest": false,
                      "interest_rate": 0,
                      "total": 10
                    },
                    {
                      "number": 2,
                      "price": 5.15,
                      "interest": true,
                      "interest_rate": 1.5,
                      "total": 10.3
                    }
                  ],
                  "updated_at": "",
                  "variants": [
                    {
                      "main": true,
                      "sku": "CSMT-1",
                      "price": 10,
                      "on_sale": false,
                      "sale_price": 10,
                      "intl_price": 0,
                      "available": true,
                      "properties": {},
                      "stock": 1,
                      "installments": [
                        {
                          "number": 1,
                          "price": 10,
                          "interest": false,
                          "interest_rate": 0,
                          "total": 10
                        },
                        {
                          "number": 2,
                          "price": 5.15,
                          "interest": true,
                          "interest_rate": 1.5,
                          "total": 10.3
                        }
                      ]
                    },
                    {
                      "main": false,
                      "sku": "CSMT-2",
                      "price": 10,
                      "on_sale": false,
                      "sale_price": 10,
                      "intl_price": 0,
                      "available": true,
                      "properties": {},
                      "stock": 1,
                      "installments": [
                        {
                          "number": 1,
                          "price": 10,
                          "interest": false,
                          "interest_rate": 0,
                          "total": 10
                        },
                        {
                          "number": 2,
                          "price": 5.15,
                          "interest": true,
                          "interest_rate": 1.5,
                          "total": 10.3
                        }
                      ]
                    }
                  ]
                }
              },
              "properties": {
                "available": {
                  "type": "boolean"
                },
                "on_sale": {
                  "type": "boolean"
                },
                "price": {
                  "type": "number"
                },
                "sale_price": {
                  "type": "number"
                },
                "intl_price": {
                  "type": "number"
                },
                "discount_rule": {},
                "installments": {
                  "type": "array",
                  "uniqueItems": true,
                  "minItems": 1,
                  "items": {
                    "$ref": "#/components/schemas/ProductInstallment"
                  }
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Data e horário da última atualização"
                },
                "variants": {
                  "type": "array",
                  "uniqueItems": true,
                  "minItems": 1,
                  "items": {
                    "$ref": "#/components/schemas/ProductPriceVariant"
                  }
                }
              },
              "required": [
                "available",
                "on_sale",
                "price",
                "sale_price",
                "intl_price",
                "installments",
                "updated_at",
                "variants"
              ]
            }
          }
        },
        "headers": {}
      },
      "Mappings": {
        "description": "Quando os mapeamentos são listados",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Mapping"
              }
            }
          }
        }
      },
      "Mapping": {
        "description": "Quando o mapeamento é encontrado",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Mapping"
            }
          }
        }
      },
      "MappingCreate": {
        "description": "Quando o mapeamento é criado",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Mapping"
            }
          }
        }
      },
      "Packages": {
        "description": "Resposta que representa uma lista de pacotes",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Package"
              }
            }
          }
        }
      },
      "ProductImage": {
        "description": "Resposta que representa uma imagem de produto",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductImage"
              }
            }
          }
        }
      },
      "ProductImages": {
        "description": "Resposta que representa uma lista de imagens de produto",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductImage"
              }
            }
          }
        }
      },
      "VariantImages": {
        "description": "Quando as imagens são listadas",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Data e horário da última atualização da imagem do produto"
                  }
                },
                "required": [
                  "url",
                  "updated_at"
                ]
              }
            },
            "examples": {
              "Lista de imagens": {
                "value": [
                  {
                    "url": "//b1.vnda.com.br/demo/2020/01/01/001-produto-teste-01-nome-do-produto-123.jpg?v=1234567890",
                    "updated_at": "2020-01-01T00:00:00.000-03:00"
                  },
                  {
                    "url": "//b1.vnda.com.br/demo/2020/01/01/002-produto-teste-02-nome-do-produto-456.jpg?v=1357902468",
                    "updated_at": "2020-01-01T01:01:01.001-03:00"
                  }
                ]
              }
            }
          }
        }
      },
      "VariantShippings": {
        "description": "Quando as formas de entrega são listadas",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "delivery_days": {
                    "type": "integer"
                  },
                  "value_needed_to_discount": {
                    "type": "number",
                    "nullable": true
                  },
                  "shipping_method_id": {
                    "type": "integer",
                    "nullable": true
                  },
                  "notice": {
                    "type": "string",
                    "nullable": true
                  },
                  "fulfillment_company": {
                    "type": "string",
                    "nullable": true
                  },
                  "countries": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "object",
                      "properties": {
                        "country": {
                          "type": "string"
                        },
                        "price": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "value",
                  "price",
                  "description",
                  "delivery_days",
                  "value_needed_to_discount",
                  "shipping_method_id",
                  "notice",
                  "fulfillment_company",
                  "countries"
                ]
              }
            },
            "examples": {
              "Lista de formas de entrega": {
                "value": [
                  {
                    "name": "Normal",
                    "value": "normal",
                    "price": 1.25,
                    "description": "Prazo de até 7 dias corridos para a entrega do pedido",
                    "delivery_days": 7,
                    "value_needed_to_discount": 2.2,
                    "shipping_method_id": 1,
                    "notice": "Notice 1",
                    "fulfillment_company": "olist_envios",
                    "countries": [
                      {
                        "country": "ARG",
                        "price": "1.0"
                      },
                      {
                        "country": "RUS",
                        "price": "2.0"
                      }
                    ]
                  },
                  {
                    "name": "Expressa",
                    "value": "expressa",
                    "price": 2.25,
                    "description": "Prazo de 1 dia corrido para a entrega do pedido",
                    "delivery_days": 1,
                    "value_needed_to_discount": null,
                    "shipping_method_id": null,
                    "fulfillment_company": null,
                    "notice": null,
                    "countries": null
                  }
                ]
              }
            }
          }
        }
      },
      "Orders": {
        "description": "Lista de pedidos",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Order.v1"
              }
            }
          }
        },
        "headers": {
          "X-Request-Id": {
            "schema": {
              "type": "string"
            },
            "description": "ID da requisição"
          },
          "X-Pagination": {
            "schema": {
              "type": "string"
            },
            "description": "JSON com dados da paginação"
          }
        }
      }
    },
    "parameters": {
      "only_valid": {
        "name": "only_valid",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "true"
        },
        "description": "Booleano indicando para filtrar banners fora do prazo de validade"
      },
      "only_scheduled": {
        "name": "only_scheduled",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "true"
        },
        "description": "Booleano indicando para filtrar banners agendados"
      },
      "only_expired": {
        "name": "only_expired",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "true"
        },
        "description": "Booleano indicando para filtrar banners com prazo de validade expirados"
      },
      "tag": {
        "name": "tag",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Lista separada por vírgula com nomes de tags"
      },
      "title": {
        "name": "title",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Texto livre que permite filtrar os banners pelo título"
      },
      "no_paginate": {
        "name": "no_paginate",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Booleano indicando para não fazer paginação dos resultados"
      },
      "page": {
        "name": "page",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1
        },
        "description": "Número da página atual. Os dados de paginação estarão disponíveis, em formato JSON, no header X-Pagination no response da API, caso exista paginação"
      },
      "per_page": {
        "name": "per_page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 100,
          "maximum": 100
        },
        "description": "Número máximo de registros que deve ser retornado por página"
      },
      "coupon_codes": {
        "name": "coupon_codes",
        "in": "query",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowEmptyValue": true,
        "description": "Array com os códigos de cupons"
      },
      "start": {
        "name": "start",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date"
        },
        "description": "Retorna os resultados a partir desta data, no formato 'yyyy-mm-dd'"
      },
      "finish": {
        "name": "finish",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date"
        },
        "description": "Retorna os resultados até esta data, no formato 'yyyy-mm-dd'"
      },
      "status": {
        "name": "status",
        "in": "query",
        "schema": {
          "type": "string",
          "example": "confirmed"
        }
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "schema": {
          "type": "string",
          "example": "updated_at,desc",
          "enum": [
            "newest"
          ]
        },
        "description": "Ordena o resultado da busca de produtos em ordem crescente de cadastro "
      },
      "order_code": {
        "name": "order_code",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Código do pedido"
      },
      "invoiced": {
        "name": "invoiced",
        "in": "query",
        "schema": {
          "type": "boolean"
        },
        "description": "Se \"true\" retorna somente os pedidos que tenham nota fiscal. Se \"false\" retorna somente os pedidos que não tenham nota fiscal"
      },
      "product_id": {
        "name": "product_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "ID do produto"
      },
      "cart_id": {
        "name": "cart_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "ID do carrinho"
      },
      "sku": {
        "name": "sku",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "SKU da variante"
      },
      "include_customizations_in_total": {
        "name": "include_customizations_in_total",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": false
        },
        "description": "Se \"true\" inclui o preço dos produtos customizados no total do pedido. Se \"false\" retorna o total do pedido sem a somatória do preço de produtos customizados.",
        "required": false,
        "allowEmptyValue": true
      },
      "limit": {
        "schema": {
          "type": "integer"
        },
        "in": "query",
        "name": "limit",
        "description": "Limite da quantidade de itens retornados"
      },
      "reference": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "reference",
        "description": "Código de referência do produto"
      },
      "ids": {
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "in": "query",
        "name": "ids",
        "description": "Filtra pelo `ID` de produtos"
      },
      "updated_after": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "updated_after",
        "description": "Filtra produtos alterados depois da data"
      },
      "include_inactive": {
        "schema": {
          "type": "boolean"
        },
        "in": "query",
        "name": "include_inactive",
        "description": "Inclui na requisição os produtos inativos"
      },
      "include_images": {
        "schema": {
          "type": "boolean"
        },
        "in": "query",
        "name": "include_images",
        "description": "Inclui na requisição se deseja que venham todas as imagens do produto"
      },
      "image_id": {
        "schema": {
          "type": "string"
        },
        "name": "image_id",
        "in": "path",
        "required": true,
        "description": "Código identificador `ID` da imagem"
      },
      "Cart.id": {
        "in": "path",
        "schema": {
          "type": "string"
        },
        "name": "cart_id",
        "required": true,
        "description": "Código identificador `ID` ou `token` do carrinho"
      },
      "Order.code": {
        "in": "path",
        "schema": {
          "type": "string",
          "minLength": 10,
          "maxLength": 64
        },
        "name": "order_code",
        "required": true,
        "description": "Código identificador (`code`) ou `token` do pedido"
      },
      "Package.code": {
        "in": "path",
        "schema": {
          "type": "string",
          "minLength": 1
        },
        "name": "package_code",
        "required": true,
        "description": "Código identificador do pacote"
      }
    },
    "requestBodies": {
      "Product": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "reference": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "active": {
                  "type": "boolean",
                  "default": true
                },
                "product_type": {
                  "type": "string",
                  "enum": [
                    "product",
                    "sample",
                    "subscription"
                  ],
                  "default": "product"
                }
              },
              "required": [
                "reference",
                "name"
              ]
            }
          }
        },
        "description": ""
      },
      "Variant": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                },
                "main": {
                  "type": "boolean"
                },
                "width": {
                  "type": "number",
                  "description": "Largura do produto, em centímetros"
                },
                "height": {
                  "type": "number",
                  "description": "Altura do produto, em centímetros"
                },
                "length": {
                  "type": "number",
                  "description": "Comprimento do produito, em centímetros"
                },
                "weight": {
                  "type": "number",
                  "description": "Massa do produto, em gramas"
                },
                "handling_days": {
                  "type": "integer",
                  "description": "Dias de manuseio da variante"
                },
                "price": {
                  "type": "number",
                  "description": "Preço do item"
                },
                "custom_attributes": {
                  "type": "object",
                  "description": "Customização da variante"
                },
                "min_quantity": {
                  "type": "integer"
                },
                "norder": {
                  "type": "integer"
                },
                "property1": {
                  "$ref": "#/components/schemas/VariantProperty"
                },
                "property2": {
                  "$ref": "#/components/schemas/VariantProperty"
                },
                "property3": {
                  "$ref": "#/components/schemas/VariantProperty"
                },
                "barcode": {
                  "type": "string"
                },
                "quantity_sold": {
                  "type": "integer",
                  "description": "Quantidade de itens vendidos"
                }
              },
              "required": [
                "sku",
                "quantity",
                "price"
              ]
            }
          }
        }
      },
      "Orders": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "orders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Código do pedido"
                      }
                    },
                    "required": [
                      "code"
                    ]
                  }
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "orders": [
                    {
                      "code": "A1B2C3D4E5"
                    },
                    {
                      "code": "5E4D3C2B1A"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Usuários"
    },
    {
      "name": "Créditos"
    },
    {
      "name": "Pedidos"
    },
    {
      "name": "Pacotes"
    },
    {
      "name": "Produtos"
    },
    {
      "name": "Variantes"
    },
    {
      "name": "Estoque"
    },
    {
      "name": "Tags"
    },
    {
      "name": "Templates"
    },
    {
      "name": "Carrinhos"
    },
    {
      "name": "Itens do carrinho"
    },
    {
      "name": "Locais"
    },
    {
      "name": "Notas fiscais"
    },
    {
      "name": "Recebedores"
    },
    {
      "name": "Pagamentos"
    },
    {
      "name": "Público"
    },
    {
      "name": "Clientes"
    },
    {
      "name": "Rastreios"
    },
    {
      "name": "Promoções"
    },
    {
      "name": "Regras de desconto"
    },
    {
      "name": "Cupons de desconto"
    },
    {
      "name": "Menus"
    },
    {
      "name": "Mensagens do site"
    },
    {
      "name": "Loja"
    },
    {
      "name": "Personalizações"
    },
    {
      "name": "Mapeamentos"
    },
    {
      "name": "Mídias"
    },
    {
      "name": "Eventos"
    }
  ],
  "security": [
    {
      "Token": []
    }
  ],
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  },
  "_id": "6387a48156e90b009a6ce710",
  "x-stoplight": {
    "id": "baml4bcuaujvs"
  }
}
