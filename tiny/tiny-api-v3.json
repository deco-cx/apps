{
  "openapi": "3.0.0",
  "info": {
    "title": "Tiny API v3",
    "description": "<h2>\n Autenticação e autorização \n </h2>\n\n\n\n<h3> Solicitação de autorização </h3>\n\n\n<p> Seu aplicativo solicita autorização ao usuário para acessar seus dados. Isso é feito redirecionando o usuário para uma página de login do Tiny </p>\n\n\n<p>Exemplo de URL de solicitação de autorização: <code>https://accounts.tiny.com.br/realms/tiny/protocol/openid-connect/auth?client_id=CLIENT_ID&redirect_uri=REDIRECT_URI&scope=openid&response_type=code</code> </p>\n\n\n\n<h3> Obtenção do código de autorização </h3>\n\n\n<p> Após o usuário conceder a autorização, o Tiny o redireciona de volta para seu aplicativo com um código de autorização </p>\n\n\n\n<h3> Solicitação de token de acesso </h3>\n\n\n<p> Seu aplicativo envia o código de autorização, juntamente com as credenciais do aplicativo, para o Tiny para solicitar um token de acesso </p>\n\n\n<p> <code> curl --location 'https://accounts.tiny.com.br/realms/tiny/protocol/openid-connect/token' \\ <br/>\n--header 'Content-Type: application/x-www-form-urlencoded' \\ <br/>\n--data-urlencode 'grant_type=authorization_code' \\ <br/>\n--data-urlencode 'client_id=CLIENT_ID' \\ <br/>\n--data-urlencode 'client_secret=CLIENT_SECRET' \\ <br/>\n--data-urlencode 'redirect_uri=REDIRECT_URI' \\ <br/>\n--data-urlencode 'code=AUTHORIZATION_CODE' </code> </p>\n\n\n\n<h3> Utilização do token de acesso </h3>\n\n\n<p> Finalmente, seu aplicativo pode usar o token de acesso para fazer solicitações à API em nome do usuário </p>\n\n\n<p> <code> Authorization: Bearer {access_token} </code>\n\n\n\n<h3> Solicitação do refresh token </h3>\n\n\n<p> Considere que o token de acesso gerado expirará após 4 horas. Depois disso será necessária a renovação do token, utilizando o refresh token adquirido no passo anterior. O refresh token tem duração de 1 dia.</p>\n\n\n<p> <code> curl --location 'https://accounts.tiny.com.br/realms/tiny/protocol/openid-connect/token' \\ <br/>\n--header 'Content-Type: application/x-www-form-urlencoded' \\ <br/>\n--data-urlencode 'grant_type=refresh_token' \\ <br/>\n--data-urlencode 'client_id=CLIENT_ID' \\ <br/>\n--data-urlencode 'client_secret=CLIENT_SECRET' \\ <br/>\n--data-urlencode 'refresh_token=REFRESH_TOKEN' </code> </p>\n\n\n\n",
    "version": "3.0"
  },
  "servers": [
    {
      "url": "https://api.tiny.com.br/public-api/v3"
    }
  ],
  "paths": {
    "/categorias/todas": {
      "get": {
        "tags": [
          "Categorias"
        ],
        "operationId": "ListarArvoreCategoriasAction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListarArvoreCategoriasModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categorias-receita-despesa": {
      "get": {
        "tags": [
          "Categorias de receita e despesa"
        ],
        "operationId": "ListarCategoriasReceitaDespesaAction",
        "parameters": [
          {
            "parameter": "descricaoCategoriasReceitaDespesa",
            "name": "descricao",
            "in": "query",
            "description": "Pesquisa por descrição completa da categorias de receita e despesa",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "grupoCategoriasReceitaDespesa",
            "name": "grupo",
            "in": "query",
            "description": "Pesquisa por grupo de categorias de receita e despesa",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "orderBy",
            "name": "orderBy",
            "in": "query",
            "description": "Define a ordenação da listagem por ordem crescente ou decrescente",
            "required": false,
            "schema": {
              "enum": [
                "asc - Crescente",
                "desc - Descrescente"
              ]
            },
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemCategoriasReceitaDespesaResponseModel"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contas-pagar": {
      "get": {
        "tags": [
          "Contas a pagar"
        ],
        "operationId": "ListarContasPagarAction",
        "parameters": [
          {
            "parameter": "nomeClienteContasPagar",
            "name": "nomeCliente",
            "in": "query",
            "description": "Pesquisa por nome do cliente de contas a pagar",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "situacaoContasPagar",
            "name": "situacao",
            "in": "query",
            "description": "Pesquisa por situação de contas a pagar",
            "required": false,
            "schema": {
              "enum": [
                "aberto - Aberto",
                "cancelada - Cancelada",
                "pago - Pago",
                "parcial - Parcial",
                "prevista - Prevista"
              ]
            },
            "example": "aberto"
          },
          {
            "parameter": "dataInicialEmissaoContasPagar",
            "name": "dataInicialEmissao",
            "in": "query",
            "description": "Pesquisa por data inicial da emissão de contas a pagar",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2024-01-01"
            }
          },
          {
            "parameter": "dataFinalEmissaoContasPagar",
            "name": "dataFinalEmissao",
            "in": "query",
            "description": "Pesquisa por data final da emissão de contas a pagar",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2024-01-01"
            }
          },
          {
            "parameter": "dataInicialVencimentoContasPagar",
            "name": "dataInicialVencimento",
            "in": "query",
            "description": "Pesquisa por data inicial do vencimento de contas a pagar",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2024-01-01"
            }
          },
          {
            "parameter": "dataFinalVencimentoContasPagar",
            "name": "dataFinalVencimento",
            "in": "query",
            "description": "Pesquisa por data final do vencimento de contas a pagar",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2024-01-01"
            }
          },
          {
            "parameter": "numeroDocumentoContasPagar",
            "name": "numeroDocumento",
            "in": "query",
            "description": "Pesquisa por número do documento de contas a pagar",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "numeroBancoContasPagar",
            "name": "numeroBanco",
            "in": "query",
            "description": "Pesquisa por número do banco de contas a pagar",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "marcadoresContaPagar",
            "name": "marcadores",
            "in": "query",
            "description": "Pesquisa por marcadores",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "parameter": "idContatoContaPagar",
            "name": "idContato",
            "in": "query",
            "description": "Pesquisa por ID do contato de contas a pagar",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 123
          },
          {
            "parameter": "orderBy",
            "name": "orderBy",
            "in": "query",
            "description": "Define a ordenação da listagem por ordem crescente ou decrescente",
            "required": false,
            "schema": {
              "enum": [
                "asc - Crescente",
                "desc - Descrescente"
              ]
            },
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListagemContasPagarResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Contas a pagar"
        ],
        "operationId": "CriarContaPagarAction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarContaPagarRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriarContaPagarResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contas-pagar/{idContaPagar}": {
      "get": {
        "tags": [
          "Contas a pagar"
        ],
        "operationId": "ObterContaPagarAction",
        "parameters": [
          {
            "name": "idContaPagar",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterContaPagarModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contas-pagar/{idContaPagar}/marcadores": {
      "get": {
        "tags": [
          "Contas a pagar"
        ],
        "operationId": "ObterMarcadoresContaPagarAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador da Conta a Pagar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObterMarcadorResponseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contas-receber/{idContaReceber}": {
      "get": {
        "tags": [
          "Contas a receber"
        ],
        "operationId": "ObterContaReceberAction",
        "parameters": [
          {
            "name": "idContaReceber",
            "in": "path",
            "description": "Identificador da conta receber",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterContaReceberResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Contas a receber"
        ],
        "operationId": "AtualizarContaReceberAction",
        "parameters": [
          {
            "name": "idContaReceber",
            "in": "path",
            "description": "Identificador da conta receber",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarContaReceberRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contas-receber/{idContaReceber}/baixar": {
      "post": {
        "tags": [
          "Contas a receber"
        ],
        "operationId": "BaixarContaReceberAction",
        "parameters": [
          {
            "name": "idContaReceber",
            "in": "path",
            "description": "Identificador da conta a receber",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaixarContaReceberModelRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contas-receber": {
      "get": {
        "tags": [
          "Contas a receber"
        ],
        "operationId": "ListarContasReceberAction",
        "parameters": [
          {
            "parameter": "nomeClienteContasReceber",
            "name": "nomeCliente",
            "in": "query",
            "description": "Pesquisa por nome do cliente de contas a receber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "situacaoContasReceber",
            "name": "situacao",
            "in": "query",
            "description": "Pesquisa por situação de contas a receber",
            "required": false,
            "schema": {
              "enum": [
                "aberto - Aberto",
                "cancelada - Cancelada",
                "pago - Pago",
                "parcial - Parcial",
                "prevista - Prevista"
              ]
            },
            "example": "aberto"
          },
          {
            "parameter": "dataInicialEmissaoContasReceber",
            "name": "dataInicialEmissao",
            "in": "query",
            "description": "Pesquisa por data inicial da emissão de contas a receber",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2024-01-01"
            }
          },
          {
            "parameter": "dataFinalEmissaoContasReceber",
            "name": "dataFinalEmissao",
            "in": "query",
            "description": "Pesquisa por data final da emissão de contas a receber",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2024-01-01"
            }
          },
          {
            "parameter": "dataInicialVencimentoContasReceber",
            "name": "dataInicialVencimento",
            "in": "query",
            "description": "Pesquisa por data inicial do vencimento de contas a receber",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2024-01-01"
            }
          },
          {
            "parameter": "dataFinalVencimentoContasReceber",
            "name": "dataFinalVencimento",
            "in": "query",
            "description": "Pesquisa por data final do vencimento de contas a receber",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2024-01-01"
            }
          },
          {
            "parameter": "numeroDocumentoContasReceber",
            "name": "numeroDocumento",
            "in": "query",
            "description": "Pesquisa por número do documento de contas a receber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "numeroBancoContasReceber",
            "name": "numeroBanco",
            "in": "query",
            "description": "Pesquisa por número do banco de contas a receber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "idNotaContasReceber",
            "name": "idNota",
            "in": "query",
            "description": "Pesquisa por identificador da nota de contas a receber",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "parameter": "idVendaContasReceber",
            "name": "idVenda",
            "in": "query",
            "description": "Pesquisa por identificador da venda de contas a receber",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "parameter": "marcadoresContaReceber",
            "name": "marcadores",
            "in": "query",
            "description": "Pesquisa por marcadores",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "parameter": "orderBy",
            "name": "orderBy",
            "in": "query",
            "description": "Define a ordenação da listagem por ordem crescente ou decrescente",
            "required": false,
            "schema": {
              "enum": [
                "asc - Crescente",
                "desc - Descrescente"
              ]
            },
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemContasReceberResponseModel"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Contas a receber"
        ],
        "operationId": "CriarContaReceberAction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarContaReceberRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriarContaReceberResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contas-receber/{idContaReceber}/marcadores": {
      "get": {
        "tags": [
          "Contas a receber"
        ],
        "operationId": "ObterMarcadoresContaReceberAction",
        "parameters": [
          {
            "name": "idContaReceber",
            "in": "path",
            "description": "Identificador da conta receber",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObterMarcadorResponseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contatos/{idContato}": {
      "get": {
        "tags": [
          "Contatos"
        ],
        "operationId": "ObterContatoAction",
        "parameters": [
          {
            "name": "idContato",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterContatoModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Contatos"
        ],
        "operationId": "AtualizarContatoAction",
        "parameters": [
          {
            "name": "idContato",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarContatoModelRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contatos/{idContato}/pessoas/{idPessoa}": {
      "get": {
        "tags": [
          "Contatos"
        ],
        "operationId": "ObterContatoContatoAction",
        "parameters": [
          {
            "name": "idContato",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "idPessoa",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterContatoContatoModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Contatos"
        ],
        "operationId": "AtualizarContatoContatoAction",
        "parameters": [
          {
            "name": "idContato",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "idPessoa",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarContatoContatoModelRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Contatos"
        ],
        "operationId": "ExcluirContatoContatoAction",
        "parameters": [
          {
            "name": "idContato",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "idPessoa",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contatos": {
      "get": {
        "tags": [
          "Contatos"
        ],
        "operationId": "ListarContatosAction",
        "parameters": [
          {
            "parameter": "nomeContato",
            "name": "nome",
            "in": "query",
            "description": "Pesquisa por nome parcial ou completo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "codigoContato",
            "name": "codigo",
            "in": "query",
            "description": "Pesquisa por codigo completo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "situacaoContato",
            "name": "situacao",
            "in": "query",
            "description": "Pesquisa por situacao",
            "required": false,
            "schema": {
              "enum": [
                "B - Ativo",
                "A - Ativo Com Acesso Sistema",
                "I - Inativo",
                "E - Excluido"
              ]
            },
            "example": "B"
          },
          {
            "parameter": "idVendedorContato",
            "name": "idVendedor",
            "in": "query",
            "description": "Pesquisa por vendedor padrão",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "parameter": "cpfCnpjContato",
            "name": "cpfCnpj",
            "in": "query",
            "description": "Pesquisa por CPF ou CNPJ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "celularContato",
            "name": "celular",
            "in": "query",
            "description": "Pesquisa pelo celular",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "dataCriacaoContato",
            "name": "dataCriacao",
            "in": "query",
            "description": "Pesquisa por data de criação",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2023-01-01 10:00:00"
            }
          },
          {
            "parameter": "dataAtualizacaoContato",
            "name": "dataAtualizacao",
            "in": "query",
            "description": "Pesquisa por data de atualização",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2023-01-01 10:00:00"
            }
          },
          {
            "parameter": "orderBy",
            "name": "orderBy",
            "in": "query",
            "description": "Define a ordenação da listagem por ordem crescente ou decrescente",
            "required": false,
            "schema": {
              "enum": [
                "asc - Crescente",
                "desc - Descrescente"
              ]
            },
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemContatoModelResponse"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Contatos"
        ],
        "operationId": "CriarContatoAction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarContatoModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriarContatoModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contatos/{idContato}/pessoas": {
      "get": {
        "tags": [
          "Contatos"
        ],
        "operationId": "ListarContatosContatoAction",
        "parameters": [
          {
            "name": "idContato",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemContatosContatoModelResponse"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Contatos"
        ],
        "operationId": "CriarContatoContatoAction",
        "parameters": [
          {
            "name": "idContato",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarContatoContatoModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriarContatoContatoModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contatos/tipos": {
      "get": {
        "tags": [
          "Contatos"
        ],
        "operationId": "ListarTiposDeContatosAction",
        "parameters": [
          {
            "parameter": "nomeTipoContato",
            "name": "nome",
            "in": "query",
            "description": "Pesquisa por nome parcial ou completo do tipo de contato",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListarTiposDeContatosModelResponse"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/info": {
      "get": {
        "tags": [
          "Dados da empresa"
        ],
        "operationId": "ObterInfoContaAction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterInfoContaModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/estoque/{idProduto}": {
      "get": {
        "tags": [
          "Estoque"
        ],
        "operationId": "ObterProdutoEstoqueAction",
        "parameters": [
          {
            "name": "idProduto",
            "in": "path",
            "description": "Identificador do produto",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterEstoqueProdutoModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Estoque"
        ],
        "operationId": "AtualizarProdutoEstoqueAction",
        "parameters": [
          {
            "name": "idProduto",
            "in": "path",
            "description": "Identificador do produto",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarProdutoEstoqueModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtualizarProdutoEstoqueModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/expedicao/{idAgrupamento}/origens": {
      "post": {
        "tags": [
          "Expedição"
        ],
        "operationId": "AdicionarOrigensAgrupamentoAction",
        "parameters": [
          {
            "name": "idAgrupamento",
            "in": "path",
            "description": "Identificador do agrupamento",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarAgrupamentoRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/expedicao/{idAgrupamento}/expedicao/{idExpedicao}": {
      "put": {
        "tags": [
          "Expedição"
        ],
        "operationId": "AlterarExpedicaoAgrupamentoAction",
        "parameters": [
          {
            "name": "idAgrupamento",
            "in": "path",
            "description": "Identificador do agrupamento",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "idExpedicao",
            "in": "path",
            "description": "Identificador da expedição",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpedicaoRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/expedicao/{idAgrupamento}/concluir": {
      "post": {
        "tags": [
          "Expedição"
        ],
        "operationId": "ConcluirAgrupamentoAction",
        "parameters": [
          {
            "name": "idAgrupamento",
            "in": "path",
            "description": "Identificador do agrupamento",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/expedicao": {
      "get": {
        "tags": [
          "Expedição"
        ],
        "operationId": "ListarAgrupamentosAction",
        "parameters": [
          {
            "parameter": "idFormaEnvioAgrupamento",
            "name": "idFormaEnvio",
            "in": "query",
            "description": "Pesquisa através do identificador da forma de envio",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "parameter": "dataInicialAgrupamento",
            "name": "dataInicial",
            "in": "query",
            "description": "Pesquisa através da data inicial dos agrupamentos",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2024-01-01"
            }
          },
          {
            "parameter": "dataFinaAgrupamento",
            "name": "dataFinal",
            "in": "query",
            "description": "Pesquisa através da data final dos agrupamentos",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2024-01-01"
            }
          },
          {
            "parameter": "orderBy",
            "name": "orderBy",
            "in": "query",
            "description": "Define a ordenação da listagem por ordem crescente ou decrescente",
            "required": false,
            "schema": {
              "enum": [
                "asc - Crescente",
                "desc - Descrescente"
              ]
            },
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemAgrupamentosModel"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Expedição"
        ],
        "operationId": "CriarAgrupamentoAction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarAgrupamentoRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriarAgrupamentoResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/expedicao/{idAgrupamento}": {
      "get": {
        "tags": [
          "Expedição"
        ],
        "operationId": "ObterAgrupamentoAction",
        "parameters": [
          {
            "name": "idAgrupamento",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterAgrupamentoResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/expedicao/{idAgrupamento}/etiquetas": {
      "get": {
        "tags": [
          "Expedição"
        ],
        "operationId": "ObterEtiquetasAgrupamentoAction",
        "parameters": [
          {
            "name": "idAgrupamento",
            "in": "path",
            "description": "Identificador do agrupamento",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterEtiquetasResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/expedicao/{idAgrupamento}/expedicao/{idExpedicao}/etiquetas": {
      "get": {
        "tags": [
          "Expedição"
        ],
        "operationId": "ObterEtiquetasExpedicaoAgrupamentoAction",
        "parameters": [
          {
            "name": "idAgrupamento",
            "in": "path",
            "description": "Identificador do agrupamento",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "idExpedicao",
            "in": "path",
            "description": "Identificador da expedição",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterEtiquetasResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/formas-envio": {
      "get": {
        "tags": [
          "Logistica"
        ],
        "operationId": "ListarFormasEnvioAction",
        "parameters": [
          {
            "parameter": "nomeFormaEnvio",
            "name": "nome",
            "in": "query",
            "description": "Pesquisa por nome parcial ou completo da forma de envio",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "tipoFormaEnvio",
            "name": "tipo",
            "in": "query",
            "description": "Pesquisa por tipo de forma de envio",
            "required": false,
            "schema": {
              "enum": [
                "0 - Sem Frete",
                "1 - Correios",
                "2 - Transportadora",
                "3 - Mercado Envios",
                "4 - B2w Entrega",
                "5 - Correios Ff",
                "6 - Customizado",
                "7 - Jadlog",
                "8 - Totalexpress",
                "9 - Olist",
                "10 - Gateway",
                "11 - Magalu Entregas",
                "12 - Shopee Envios",
                "13 - Ns Entregas",
                "14 - Viavarejo Envvias",
                "15 - Madeira Envios",
                "16 - Ali Envios",
                "17 - Loggi",
                "18 - Conecta La Etiquetas",
                "19 - Amazon Dba",
                "20 - Magalu Fulfillment",
                "21 - Ns Magalu Entregas",
                "22 - Shein Envios",
                "23 - Mandae",
                "24 - Olist Envios",
                "25 - Kwai Envios",
                "26 - Beleza Envios"
              ]
            },
            "example": "0"
          },
          {
            "parameter": "situacaoFormaEnvio",
            "name": "situacao",
            "in": "query",
            "description": "Pesquisa por situação da forma de envio",
            "required": false,
            "schema": {
              "enum": [
                "0 - Sem Frete",
                "1 - Correios",
                "2 - Transportadora",
                "3 - Mercado Envios",
                "4 - B2w Entrega",
                "5 - Correios Ff",
                "6 - Customizado",
                "7 - Jadlog",
                "8 - Totalexpress",
                "9 - Olist",
                "10 - Gateway",
                "11 - Magalu Entregas",
                "12 - Shopee Envios",
                "13 - Ns Entregas",
                "14 - Viavarejo Envvias",
                "15 - Madeira Envios",
                "16 - Ali Envios",
                "17 - Loggi",
                "18 - Conecta La Etiquetas",
                "19 - Amazon Dba",
                "20 - Magalu Fulfillment",
                "21 - Ns Magalu Entregas",
                "22 - Shein Envios",
                "23 - Mandae",
                "24 - Olist Envios",
                "25 - Kwai Envios",
                "26 - Beleza Envios"
              ]
            },
            "example": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemFormasEnvioResponseModel"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/formas-envio/{idFormaEnvio}": {
      "get": {
        "tags": [
          "Logistica"
        ],
        "operationId": "ObterFormaEnvioAction",
        "parameters": [
          {
            "name": "idFormaEnvio",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterFormaEnvioResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/formas-pagamento": {
      "get": {
        "tags": [
          "Formas de pagamento"
        ],
        "operationId": "ListarFormasPagamentoAction",
        "parameters": [
          {
            "parameter": "nomeFormaPagamento",
            "name": "nome",
            "in": "query",
            "description": "Pesquisa por nome parcial ou completo da forma de pagamento",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "situacaoFormaPagamento",
            "name": "situacao",
            "in": "query",
            "description": "Pesquisa por situação da forma de pagamento",
            "required": false,
            "schema": {
              "enum": [
                "1 - Habilitada",
                "2 - Desabilitada"
              ]
            },
            "example": "1"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemFormasPagamentoResponseModel"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/formas-pagamento/{idFormaPagamento}": {
      "get": {
        "tags": [
          "Formas de pagamento"
        ],
        "operationId": "ObterFormaPagamentoAction",
        "parameters": [
          {
            "name": "idFormaPagamento",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterFormaPagamentoResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/intermediadores": {
      "get": {
        "tags": [
          "Intermediadores"
        ],
        "operationId": "ListarIntermediadoresAction",
        "parameters": [
          {
            "parameter": "nomeIntermediador",
            "name": "nome",
            "in": "query",
            "description": "Pesquisa por nome parcial ou completo do intermediador",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "cnpjIntermediador",
            "name": "cnpj",
            "in": "query",
            "description": "Pesquisa por cnpj do intermediador",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemIntermediadoresResponseModel"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/intermediadores/{idIntermediador}": {
      "get": {
        "tags": [
          "Intermediadores"
        ],
        "operationId": "ObterIntermediadorAction",
        "parameters": [
          {
            "name": "idIntermediador",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterIntermediadorResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/listas-precos": {
      "get": {
        "tags": [
          "Lista de Preços"
        ],
        "operationId": "ListarListasDePrecosAction",
        "parameters": [
          {
            "parameter": "nomeListaPreco",
            "name": "nome",
            "in": "query",
            "description": "Pesquisa por nome parcial ou completo da lista de preços",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemListaDePrecosModelResponse"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/listas-precos/{idListaDePreco}": {
      "get": {
        "tags": [
          "Lista de Preços"
        ],
        "operationId": "ObterListaDePrecosAction",
        "parameters": [
          {
            "name": "idListaDePreco",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterListaDePrecosModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/marcas/{idMarca}": {
      "put": {
        "tags": [
          "Marcas"
        ],
        "operationId": "AtualizarMarcaAction",
        "parameters": [
          {
            "name": "idMarca",
            "in": "path",
            "description": "Identificador da marca",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseMarcaModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/marcas": {
      "get": {
        "tags": [
          "Marcas"
        ],
        "operationId": "ListarMarcasAction",
        "parameters": [
          {
            "parameter": "descricaoMarca",
            "name": "descricao",
            "in": "query",
            "description": "Pesquisa por descrição completa da marca",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemMarcasResponseModel"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Marcas"
        ],
        "operationId": "CriarMarcaAction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseMarcaModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriarMarcaModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notas/{idNota}/marcadores": {
      "get": {
        "tags": [
          "Notas"
        ],
        "operationId": "ObterMarcadoresNotaFiscalAction",
        "parameters": [
          {
            "name": "idNota",
            "in": "path",
            "description": "Identificador da nota fiscal",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObterMarcadorResponseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Notas"
        ],
        "operationId": "AtualizarMarcadoresNotaFiscalAction",
        "parameters": [
          {
            "name": "idNota",
            "in": "path",
            "description": "Identificador da nota fiscal",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AtualizarMarcadorRequestModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Notas"
        ],
        "operationId": "CriarMarcadoresNotaFiscalAction",
        "parameters": [
          {
            "name": "idNota",
            "in": "path",
            "description": "Identificador da nota fiscal",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CriarMarcadorRequestModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Notas"
        ],
        "operationId": "ExcluirMarcadoresNotaFiscalAction",
        "parameters": [
          {
            "name": "idNota",
            "in": "path",
            "description": "Identificador da nota fiscal",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notas/{idNota}/emitir": {
      "post": {
        "tags": [
          "Notas"
        ],
        "operationId": "AutorizarNotaFiscalAction",
        "parameters": [
          {
            "name": "idNota",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutorizarNotaFiscalModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutorizarNotaFiscalModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notas/xml": {
      "post": {
        "tags": [
          "Notas"
        ],
        "operationId": "IncluirXmlNotaFiscalAction",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IncluirXmlNotaFiscalRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncluirXmlNotaFiscalResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notas/{idNota}/lancar-contas": {
      "post": {
        "tags": [
          "Notas"
        ],
        "operationId": "LancarContasNotaFiscalAction",
        "parameters": [
          {
            "name": "idNota",
            "in": "path",
            "description": "Identificador da nota fiscal",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notas/{idNota}/lancar-estoque": {
      "post": {
        "tags": [
          "Notas"
        ],
        "operationId": "LancarEstoqueNotaFiscalAction",
        "parameters": [
          {
            "name": "idNota",
            "in": "path",
            "description": "Identificador da nota fiscal",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notas": {
      "get": {
        "tags": [
          "Notas"
        ],
        "operationId": "ListarNotasFiscaisAction",
        "parameters": [
          {
            "parameter": "tipoNota",
            "name": "tipo",
            "in": "query",
            "description": "Pesquisa por tipo de nota",
            "required": false,
            "schema": {
              "enum": [
                "E - Entrada",
                "S - Saida"
              ]
            },
            "example": "E"
          },
          {
            "parameter": "numeroNota",
            "name": "numero",
            "in": "query",
            "description": "Pesquisa por número da nota",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "parameter": "cpfCnpjNota",
            "name": "cpfCnpj",
            "in": "query",
            "description": "Pesquisa por CPF ou CNPJ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "dataInicialNota",
            "name": "dataInicial",
            "in": "query",
            "description": "Pesquisa por data de criação",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2023-01-01"
            }
          },
          {
            "parameter": "dataFinalNota",
            "name": "dataFinal",
            "in": "query",
            "description": "Pesquisa por data de criação",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2023-01-01"
            }
          },
          {
            "parameter": "situacaoNota",
            "name": "situacao",
            "in": "query",
            "description": "Pesquisa pela situacão da nota",
            "required": false,
            "schema": {
              "enum": [
                "1 - Pendente",
                "2 - Emitida",
                "3 - Cancelada",
                "4 - Enviada Aguardando Recibo",
                "5 - Rejeitada",
                "6 - Autorizada",
                "7 - Emitida Danfe",
                "8 - Registrada",
                "9 - Enviada Aguardando Protocolo",
                "10 - Denegada"
              ]
            },
            "example": "1"
          },
          {
            "parameter": "numeroPedidoEcommerce",
            "name": "numeroPedidoEcommerce",
            "in": "query",
            "description": "Pesquisa pelo número do pedido no e-commerce",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "idVendedorNota",
            "name": "idVendedor",
            "in": "query",
            "description": "Pesquisa por identificador do vendedor",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "parameter": "idFormaEnvioNota",
            "name": "idFormaEnvio",
            "in": "query",
            "description": "Pesquisa por identificador da forma de envio",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "parameter": "marcadoresNota",
            "name": "marcadores",
            "in": "query",
            "description": "Pesquisa por marcadores",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "parameter": "orderBy",
            "name": "orderBy",
            "in": "query",
            "description": "Define a ordenação da listagem por ordem crescente ou decrescente",
            "required": false,
            "schema": {
              "enum": [
                "asc - Crescente",
                "desc - Descrescente"
              ]
            },
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemNotaFiscalModelResponse"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notas/{idNota}/link": {
      "get": {
        "tags": [
          "Notas"
        ],
        "operationId": "ObterLinkNotaFiscalAction",
        "parameters": [
          {
            "name": "idNota",
            "in": "path",
            "description": "Identificador da nota fiscal",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterLinkNotaFiscalModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notas/{idNota}": {
      "get": {
        "tags": [
          "Notas"
        ],
        "operationId": "ObterNotaFiscalAction",
        "parameters": [
          {
            "name": "idNota",
            "in": "path",
            "description": "Identificador da nota fiscal",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterNotaFiscalModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notas/{idNota}/xml": {
      "get": {
        "tags": [
          "Notas"
        ],
        "operationId": "ObterXmlNotaFiscalAction",
        "parameters": [
          {
            "name": "idNota",
            "in": "path",
            "description": "Identificador da nota fiscal",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterXmlNotaFiscalModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ordem-compra/{idOrdemCompra}": {
      "get": {
        "tags": [
          "Ordem de Compra"
        ],
        "operationId": "ObterOrdemCompraAction",
        "parameters": [
          {
            "name": "idOrdemCompra",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterOrdemCompraModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Ordem de Compra"
        ],
        "operationId": "AtualizarOrdemCompraAction",
        "parameters": [
          {
            "name": "idOrdemCompra",
            "in": "path",
            "description": "Identificador da ordem de compra",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarOrdemCompraModelRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ordem-compra/{idOrdemCompra}/situacao": {
      "put": {
        "tags": [
          "Ordem de Compra"
        ],
        "operationId": "AtualizarSituacaoOrdemCompraAction",
        "parameters": [
          {
            "name": "idOrdemCompra",
            "in": "path",
            "description": "Identificador da ordem de compra",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarSituacaoOrdemCompraRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ordem-compra": {
      "get": {
        "tags": [
          "Ordem de Compra"
        ],
        "operationId": "ListarOrdensCompraAction",
        "parameters": [
          {
            "parameter": "numeroOrdemCompra",
            "name": "numero",
            "in": "query",
            "description": "Pesquisa através do número da ordem de compra",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "parameter": "dataInicialOrdemCompra",
            "name": "dataInicial",
            "in": "query",
            "description": "Pesquisa através da data de criação da ordem de compra",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "dataFinalOrdemCompra",
            "name": "dataFinal",
            "in": "query",
            "description": "Pesquisa através da data de criação da ordem de compra",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "marcadoresOrdemCompra",
            "name": "marcadores",
            "in": "query",
            "description": "Pesquisa através dos marcadores da ordem de compra",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "parameter": "nomeFornecedorOrdemCompra",
            "name": "nomeFornecedor",
            "in": "query",
            "description": "Pesquisa através do nome do fornecedor da ordem de compra",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "codigoFornecedorOrdemCompra",
            "name": "codigoFornecedor",
            "in": "query",
            "description": "Pesquisa através do código do fornecedor da ordem de compra",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "situacaoOrdemCompra",
            "name": "situacao",
            "in": "query",
            "description": "Pesquisa através da situação da ordem de compra",
            "required": false,
            "schema": {
              "enum": [
                "0 - Em Aberto",
                "1 - Atendido",
                "2 - Cancelado",
                "3 - Em Andamento"
              ]
            },
            "example": "0"
          },
          {
            "parameter": "orderBy",
            "name": "orderBy",
            "in": "query",
            "description": "Define a ordenação da listagem por ordem crescente ou decrescente",
            "required": false,
            "schema": {
              "enum": [
                "asc - Crescente",
                "desc - Descrescente"
              ]
            },
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListarOrdemCompraModelResponse"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Ordem de Compra"
        ],
        "operationId": "CriarOrdemCompraAction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarOrdemCompraModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriarOrdemCompraModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ordem-compra/{idOrdemCompra}/lancar-contas": {
      "post": {
        "tags": [
          "Ordem de Compra"
        ],
        "operationId": "LancarContasOrdemCompraAction",
        "parameters": [
          {
            "name": "idOrdemCompra",
            "in": "path",
            "description": "Identificador da ordem de compra",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ordem-compra/{idOrdemCompra}/lancar-estoque": {
      "post": {
        "tags": [
          "Ordem de Compra"
        ],
        "operationId": "LancarEstoqueOrdemCompraAction",
        "parameters": [
          {
            "name": "idOrdemCompra",
            "in": "path",
            "description": "Identificador da ordem de compra",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LancarEstoqueOrdemCompraRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ordem-servico/{idOrdemServico}": {
      "get": {
        "tags": [
          "Ordem de Serviço"
        ],
        "operationId": "ObterOrdemServicoAction",
        "parameters": [
          {
            "name": "idOrdemServico",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterOrdemServicoModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Ordem de Serviço"
        ],
        "operationId": "AtualizarOrdemServicoAction",
        "parameters": [
          {
            "name": "idOrdemServico",
            "in": "path",
            "description": "Identificador da ordem de serviço",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarOrdemServicoRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ordem-servico/{idOrdemServico}/situacao": {
      "put": {
        "tags": [
          "Ordem de Serviço"
        ],
        "operationId": "AtualizarSituacaoOrdemServicoAction",
        "parameters": [
          {
            "name": "idOrdemServico",
            "in": "path",
            "description": "Identificador da ordem de serviço",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarSituacaoPedidoModelRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ordem-servico": {
      "get": {
        "tags": [
          "Ordem de Serviço"
        ],
        "operationId": "ListarOrdemServicoAction",
        "parameters": [
          {
            "parameter": "nomeClienteOrdemServico",
            "name": "nomeCliente",
            "in": "query",
            "description": "Pesquisa por nome do cliente de ordem de servico",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "situacaoOrdemServico",
            "name": "situacao",
            "in": "query",
            "description": "Pesquisa por situação de ordem de servico",
            "required": false,
            "schema": {
              "enum": [
                "4 - Nao Aprovada",
                "3 - Finalizada",
                "0 - Em Aberto",
                "2 - Serv Concluido",
                "1 - Orcada",
                "5 - Aprovada",
                "6 - Em Andamento",
                "7 - Cancelada"
              ]
            },
            "example": "4"
          },
          {
            "parameter": "dataInicialEmissaoOrdemServico",
            "name": "dataInicialEmissao",
            "in": "query",
            "description": "Pesquisa por data inicial da emissão de ordem de servico",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2024-01-01"
            }
          },
          {
            "parameter": "dataFinalEmissaoOrdemServico",
            "name": "dataFinalEmissao",
            "in": "query",
            "description": "Pesquisa por data final da emissão de ordem de servico",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2024-01-01"
            }
          },
          {
            "parameter": "numeroOrdemServico",
            "name": "numeroOrdemServico",
            "in": "query",
            "description": "Pesquisa por número de ordem de servico",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "marcadoresOrdemServico",
            "name": "marcadores",
            "in": "query",
            "description": "Pesquisa por marcadores",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "parameter": "idContatoOrdemServico",
            "name": "idContato",
            "in": "query",
            "description": "Pesquisa por ID do contato de ordem de servico",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 123
          },
          {
            "parameter": "orderBy",
            "name": "orderBy",
            "in": "query",
            "description": "Define a ordenação da listagem por ordem crescente ou decrescente",
            "required": false,
            "schema": {
              "enum": [
                "asc - Crescente",
                "desc - Descrescente"
              ]
            },
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListagemOrdemServicoResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Ordem de Serviço"
        ],
        "operationId": "CriarOrdemServicoAction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarOrdemServicoRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriarOrdemServicoResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ordem-servico/{idOrdemServico}/gerar-nota-fiscal": {
      "post": {
        "tags": [
          "Ordem de Serviço"
        ],
        "operationId": "GerarNotaFiscalOrdemServicoAction",
        "parameters": [
          {
            "name": "idOrdemServico",
            "in": "path",
            "description": "Identificador da ordem de serviço",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GerarNotaFiscalOrdemServicoModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ordem-servico/{idOrdemServico}/lancar-contas": {
      "post": {
        "tags": [
          "Ordem de Serviço"
        ],
        "operationId": "LancarContasOrdemServicoAction",
        "parameters": [
          {
            "name": "idOrdemServico",
            "in": "path",
            "description": "Identificador da ordem de serviço",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ordem-servico/{idOrdemServico}/lancar-estoque": {
      "post": {
        "tags": [
          "Ordem de Serviço"
        ],
        "operationId": "LancarEstoqueOrdemServicoAction",
        "parameters": [
          {
            "name": "idOrdemServico",
            "in": "path",
            "description": "Identificador da ordem de serviço",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LancarEstoqueOrdemServicoRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/pedidos/{idPedido}/despacho": {
      "put": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "AtualizarInfoRastreamentoPedidoAction",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "description": "Identificador do pedido",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarInfoRastreamentoPedidoModelRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/pedidos/{idPedido}/marcadores": {
      "get": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "ObterMarcadoresPedidoAction",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "description": "Identificador do pedido",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObterMarcadorResponseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "AtualizarMarcadoresPedidoAction",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "description": "Identificador do pedido",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AtualizarMarcadorRequestModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "CriarMarcadoresPedidoAction",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "description": "Identificador do pedido",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CriarMarcadorRequestModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "ExcluirMarcadoresPedidoAction",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "description": "Identificador do pedido",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/pedidos/{idPedido}": {
      "get": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "ObterPedidoAction",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "description": "Identificador do pedido",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterPedidoModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "AtualizarPedidoAction",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "description": "Identificador do pedido",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarPedidoModelRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/pedidos/{idPedido}/situacao": {
      "put": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "AtualizarSituacaoPedidoAction",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "description": "Identificador do pedido",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarSituacaoPedidoModelRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/pedidos": {
      "get": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "ListarPedidosAction",
        "parameters": [
          {
            "parameter": "numeroPedido",
            "name": "numero",
            "in": "query",
            "description": "Pesquisa por número do pedido",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "parameter": "nomeClientePedido",
            "name": "nomeCliente",
            "in": "query",
            "description": "Pesquisa por nome do cliente",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "codigoClientePedido",
            "name": "codigoCliente",
            "in": "query",
            "description": "Pesquisa por código do cliente",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "cpfCnpjClientePedido",
            "name": "cnpj",
            "in": "query",
            "description": "Pesquisa por CPF/CNPJ do cliente",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "dataInicialPedido",
            "name": "dataInicial",
            "in": "query",
            "description": "Pesquisa através da data de criação do pedido",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "dataFinalPedido",
            "name": "dataFinal",
            "in": "query",
            "description": "Pesquisa através da data de criação do pedido",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "dataAtualizacaoPedido",
            "name": "dataAtualizacao",
            "in": "query",
            "description": "Pesquisa através da data de atualização do pedido",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "situacaoPedido",
            "name": "situacao",
            "in": "query",
            "description": "Pesquisa com base na situação informada",
            "required": false,
            "schema": {
              "enum": [
                "8 - Dados Incompletos",
                "0 - Aberta",
                "3 - Aprovada",
                "4 - Preparando Envio",
                "1 - Faturada",
                "7 - Pronto Envio",
                "5 - Enviada",
                "6 - Entregue",
                "2 - Cancelada",
                "9 - Nao Entregue"
              ]
            },
            "example": "8"
          },
          {
            "parameter": "numeroPedidoEcommercePedido",
            "name": "numeroPedidoEcommerce",
            "in": "query",
            "description": "Pesquisa por número do pedido no e-commerce",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "idVendedorPedido",
            "name": "idVendedor",
            "in": "query",
            "description": "Pesquisa por id do vendedor",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "parameter": "marcadoresPedido",
            "name": "marcadores",
            "in": "query",
            "description": "Pesquisa por marcadores",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "parameter": "orderBy",
            "name": "orderBy",
            "in": "query",
            "description": "Define a ordenação da listagem por ordem crescente ou decrescente",
            "required": false,
            "schema": {
              "enum": [
                "asc - Crescente",
                "desc - Descrescente"
              ]
            },
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemPedidoModelResponse"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "CriarPedidoAction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarPedidoModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriarPedidoModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/pedidos/{idPedido}/estornar-contas": {
      "post": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "EstornarContasPedidoAction",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "description": "Identificador do pedido",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/pedidos/{idPedido}/estornar-estoque": {
      "post": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "EstornarEstoquePedidoAction",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "description": "Identificador do pedido",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/pedidos/{idPedido}/gerar-nota-fiscal": {
      "post": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "GerarNotaFiscalPedidoAction",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "description": "Identificador do pedido",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GerarNotaFiscalPedidoModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/pedidos/{idPedido}/lancar-contas": {
      "post": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "LancarContasPedidoAction",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "description": "Identificador do pedido",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/pedidos/{idPedido}/lancar-estoque": {
      "post": {
        "tags": [
          "Pedidos"
        ],
        "operationId": "LancarEstoquePedidoAction",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "description": "Identificador do pedido",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/produtos/{idProduto}/preco": {
      "put": {
        "tags": [
          "Produtos"
        ],
        "operationId": "AtualizarPrecoProdutoAction",
        "parameters": [
          {
            "name": "idProduto",
            "in": "path",
            "description": "Identificador do produto",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarPrecoProdutoRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtualizarPrecoProdutoResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/produtos/{idProduto}": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "operationId": "ObterProdutoAction",
        "parameters": [
          {
            "name": "idProduto",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterProdutoModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Produtos"
        ],
        "operationId": "AtualizarProdutoAction",
        "parameters": [
          {
            "name": "idProduto",
            "in": "path",
            "description": "Identificador do produto",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarProdutoRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/produtos/{idProduto}/fabricado": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "operationId": "ObterProdutoFabricadoAction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducaoProdutoResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Produtos"
        ],
        "operationId": "AtualizarProdutoFabricadoAction",
        "parameters": [
          {
            "name": "idProduto",
            "in": "path",
            "description": "Identificador do produto",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProducaoProdutoRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/produtos/{idProduto}/kit": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "operationId": "ObterProdutoKitAction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProdutoKitResponseModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Produtos"
        ],
        "operationId": "AtualizarProdutoKitAction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProdutoKitRequestModel"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/produtos/{idProduto}/variacoes/{idVariacao}": {
      "put": {
        "tags": [
          "Produtos"
        ],
        "operationId": "AtualizarProdutoVariacaoAction",
        "parameters": [
          {
            "name": "idProduto",
            "in": "path",
            "description": "Identificador do produto",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "idVariacao",
            "in": "path",
            "description": "Identificador da variação",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarProdutoVariacaoRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Produtos"
        ],
        "operationId": "DeletarProdutoVariacaoAction",
        "parameters": [
          {
            "name": "idProduto",
            "in": "path",
            "description": "Identificador do produto",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "idVariacao",
            "in": "path",
            "description": "Identificador da variação",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/produtos": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "operationId": "ListarProdutosAction",
        "parameters": [
          {
            "parameter": "nomeProduto",
            "name": "nome",
            "in": "query",
            "description": "Pesquisa por nome parcial ou completo do produto",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "codigoProduto",
            "name": "codigo",
            "in": "query",
            "description": "Pesquisa pelo código do produto",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "gtin",
            "name": "gtin",
            "in": "query",
            "description": "Pesquisa através do código GTIN do produto",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "parameter": "situacao",
            "name": "situacao",
            "in": "query",
            "description": "Pesquisa com base na situação informada",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "dataCriacao",
            "name": "dataCriacao",
            "in": "query",
            "description": "Pesquisa através da data de criação do produto",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2023-01-01 10:00:00"
            }
          },
          {
            "parameter": "dataAlteracao",
            "name": "dataAlteracao",
            "in": "query",
            "description": "Pesquisa através da data de última alteração do produto",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2023-01-01 10:00:00"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemProdutosResponseModel"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Produtos"
        ],
        "operationId": "CriarProdutoAction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarProdutoRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriarProdutoComVariacoesResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/produtos/{idProduto}/variacoes": {
      "post": {
        "tags": [
          "Produtos"
        ],
        "operationId": "CriarProdutoVariacaoAction",
        "parameters": [
          {
            "name": "idProduto",
            "in": "path",
            "description": "Identificador do produto",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VariacaoProdutoRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriarProdutoResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/produtos/{idProduto}/custos": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "operationId": "ListaCustosProdutoAction",
        "parameters": [
          {
            "name": "idProduto",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "parameter": "dataInicialCustoProduto",
            "name": "dataInicial",
            "in": "query",
            "description": "Especifica a data de início para a filtragem dos custos do produto.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2023-01-01"
            }
          },
          {
            "parameter": "dataFinalCustoProduto",
            "name": "dataFinal",
            "in": "query",
            "description": "Especifica a data de fim para a filtragem dos custos do produto.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2023-01-01"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemProdutoCustosResponseModel"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/produtos/{idProduto}/tags": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "operationId": "ObterTagsProdutoAction",
        "parameters": [
          {
            "name": "idProduto",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterTagsProdutoModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/separacao/{idSeparacao}/situacao": {
      "put": {
        "tags": [
          "Separação"
        ],
        "operationId": "AlterarSituacaoSeparacaoAction",
        "parameters": [
          {
            "name": "idSeparacao",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlterarSituacaoSeparacaoModelRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/separacao": {
      "get": {
        "tags": [
          "Separação"
        ],
        "operationId": "ListarSeparacaoAction",
        "parameters": [
          {
            "parameter": "situacaoSeparacao",
            "name": "situacao",
            "in": "query",
            "description": "Pesquisa por situacao da separação.",
            "required": false,
            "schema": {
              "enum": [
                "1 - Sit Aguardando Separacao",
                "2 - Sit Separada",
                "3 - Sit Embalada",
                "4 - Sit Em Separacao"
              ]
            },
            "example": "1"
          },
          {
            "parameter": "idFormaEnvio",
            "name": "idFormaEnvio",
            "in": "query",
            "description": "Pesquisa através do identificador da forma de envio.",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "parameter": "dataInicialVenda",
            "name": "dataInicial",
            "in": "query",
            "description": "Pesquisa através da data inicial dos pedidos.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2023-01-01"
            }
          },
          {
            "parameter": "dataFinalVenda",
            "name": "dataFinal",
            "in": "query",
            "description": "Pesquisa através da data final dos pedidos.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2023-01-01"
            }
          },
          {
            "parameter": "orderBy",
            "name": "orderBy",
            "in": "query",
            "description": "Define a ordenação da listagem por ordem crescente ou decrescente",
            "required": false,
            "schema": {
              "enum": [
                "asc - Crescente",
                "desc - Descrescente"
              ]
            },
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemSeparacaoResponseModel"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/separacao/{idSeparacao}": {
      "get": {
        "tags": [
          "Separação"
        ],
        "operationId": "ObterSeparacaoAction",
        "parameters": [
          {
            "name": "idSeparacao",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObterSeparacaoResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/servicos/{idServico}": {
      "get": {
        "tags": [
          "Serviços"
        ],
        "operationId": "ObterServicoAction",
        "parameters": [
          {
            "name": "idServico",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicosModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Serviços"
        ],
        "operationId": "AtualizarServicoAction",
        "parameters": [
          {
            "name": "idServico",
            "in": "path",
            "description": "Identificador do serviço",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarServicoRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/servicos": {
      "get": {
        "tags": [
          "Serviços"
        ],
        "operationId": "ListarServicosAction",
        "parameters": [
          {
            "parameter": "nome",
            "name": "nome",
            "in": "query",
            "description": "Pesquisa pelo nome do serviço",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "codigo",
            "name": "codigo",
            "in": "query",
            "description": "Pesquisa pelo código do serviço",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "situacaoServico",
            "name": "situacao",
            "in": "query",
            "description": "Pesquisa com base na situação informada",
            "required": false,
            "schema": {
              "enum": [
                "A - Ativo",
                "I - Inativo",
                "E - Excluido"
              ]
            },
            "example": "A"
          },
          {
            "parameter": "orderBy",
            "name": "orderBy",
            "in": "query",
            "description": "Define a ordenação da listagem por ordem crescente ou decrescente",
            "required": false,
            "schema": {
              "enum": [
                "asc - Crescente",
                "desc - Descrescente"
              ]
            },
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServicosModelResponse"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Serviços"
        ],
        "operationId": "CriarServicoAction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarServicoRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicoResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/servicos/{idServico}/transformar-produto": {
      "post": {
        "tags": [
          "Serviços"
        ],
        "operationId": "TransformarServicoEmProdutoAction",
        "parameters": [
          {
            "name": "idServico",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/vendedores": {
      "get": {
        "tags": [
          "Vendedores"
        ],
        "operationId": "ListarVendedoresAction",
        "parameters": [
          {
            "parameter": "nomeVendedor",
            "name": "nome",
            "in": "query",
            "description": "Pesquisa por nome parcial ou completo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "parameter": "codigoVendedor",
            "name": "codigo",
            "in": "query",
            "description": "Pesquisa por codigo completo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset da paginação",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "itens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListagemVendedoresModelResponse"
                      }
                    },
                    "paginacao": {
                      "$ref": "#/components/schemas/PaginatedResultModel"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorDTO": {
        "title": " ",
        "description": " ",
        "properties": {
          "mensagem": {
            "type": "string"
          },
          "detalhes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetailDTO"
            },
            "nullable": true
          }
        },
        "type": "object"
      },
      "ErrorDetailDTO": {
        "title": " ",
        "description": " ",
        "properties": {
          "campo": {
            "type": "string"
          },
          "mensagem": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AnexoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "externo": {}
        },
        "type": "object"
      },
      "AnexoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "externo": {
            "type": "boolean",
            "nullable": true
          }
        },
        "type": "object"
      },
      "CategoriaRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "CategoriaResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "caminhoCompleto": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ListarArvoreCategoriasModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "filhas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListarArvoreCategoriasModelResponse"
            },
            "nullable": true
          }
        },
        "type": "object"
      },
      "CategoriaReceitaDespesaResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListagemCategoriasReceitaDespesaResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          },
          "grupo": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContaContabilModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ContaContabilRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CriarContaPagarRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "data": {
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "numeroDocumento": {
            "type": "string",
            "nullable": true
          },
          "contato": {
            "$ref": "#/components/schemas/ContatoRequestModel"
          },
          "historico": {
            "type": "string",
            "nullable": true
          },
          "categoria": {
            "$ref": "#/components/schemas/CategoriaRequestModel"
          },
          "dataCompetencia": {
            "type": "string",
            "nullable": true
          },
          "ocorrencia": {
            "type": "string",
            "enum": [
              "U - Unica",
              "W - Semanal",
              "M - Mensal",
              "T - Trimestral",
              "S - Semestral",
              "A - Anual",
              "P - Parcelada"
            ],
            "example": "U",
            "nullable": true
          },
          "formaPagamento": {
            "type": "integer",
            "enum": [
              "0 - Nao Definida",
              "2 - Dinheiro",
              "3 - Credito",
              "4 - Debito",
              "5 - Boleto",
              "6 - Deposito",
              "7 - Cheque",
              "8 - Crediario",
              "10 - Outra",
              "12 - Duplicata Mercantil",
              "14 - Vale",
              "15 - Pix",
              "16 - Vale Alimentacao",
              "17 - Vale Refeicao",
              "18 - Vale Presente",
              "19 - Vale Combustivel",
              "20 - Deposito Bancario",
              "21 - Transferencia Bancaria Carteira Digital",
              "22 - Fidelidade Cashback Credito Virtual"
            ],
            "example": "0",
            "nullable": true
          },
          "diaVencimento": {
            "type": "integer",
            "nullable": true
          },
          "quantidadeParcelas": {
            "type": "integer",
            "nullable": true
          },
          "diaSemanaVencimento": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "CriarContaPagarResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListagemContasPagarResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "situacao": {
            "type": "string",
            "enum": [
              "aberto - Aberto",
              "cancelada - Cancelada",
              "pago - Pago",
              "parcial - Parcial",
              "prevista - Prevista"
            ],
            "example": "aberto",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "nullable": true
          },
          "historico": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "numeroDocumento": {
            "type": "string",
            "nullable": true
          },
          "numeroBanco": {
            "type": "string",
            "nullable": true
          },
          "serieDocumento": {
            "type": "string",
            "nullable": true
          },
          "cliente": {
            "$ref": "#/components/schemas/ContatoModelResponse"
          },
          "marcadores": {}
        },
        "type": "object"
      },
      "ObterContaPagarModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "situacao": {
            "type": "string",
            "enum": [
              "aberto - Aberto",
              "cancelada - Cancelada",
              "pago - Pago",
              "parcial - Parcial",
              "prevista - Prevista"
            ],
            "example": "aberto",
            "nullable": true
          },
          "data": {
            "type": "string"
          },
          "dataVencimento": {
            "type": "string"
          },
          "dataCompetencia": {
            "type": "string"
          },
          "dataLiquidacao": {
            "type": "string",
            "nullable": true
          },
          "diaVencimento": {
            "type": "integer",
            "nullable": true
          },
          "diaSemanaVencimento": {
            "type": "integer",
            "enum": [
              "0 - Domingo",
              "1 - Segunda",
              "2 - Terca",
              "3 - Quarta",
              "4 - Quinta",
              "5 - Sexta",
              "6 - Sabado"
            ],
            "example": "0",
            "nullable": true
          },
          "numeroDocumento": {
            "type": "string"
          },
          "serieDocumento": {
            "type": "string",
            "nullable": true
          },
          "ocorrencia": {
            "type": "string",
            "enum": [
              "U - Unica",
              "W - Semanal",
              "M - Mensal",
              "T - Trimestral",
              "S - Semestral",
              "A - Anual",
              "P - Parcelada"
            ],
            "example": "U",
            "nullable": true
          },
          "quantidadeParcelas": {
            "type": "integer",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "saldo": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "contato": {
            "$ref": "#/components/schemas/ContatoModelResponse"
          },
          "categoria": {
            "$ref": "#/components/schemas/CategoriaReceitaDespesaResponseModel"
          },
          "formaPagamento": {
            "$ref": "#/components/schemas/FormaPagamentoResponseModel"
          },
          "historico": {
            "type": "string"
          },
          "marcadores": {}
        },
        "type": "object"
      },
      "AtualizarContaReceberRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "taxa": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "nullable": true
          },
          "categoria": {
            "$ref": "#/components/schemas/CategoriaRequestModel"
          },
          "dataCompetencia": {
            "type": "string",
            "nullable": true
          },
          "atualizarContaRecorrente": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "BaixarContaReceberModelRequest": {
        "title": " ",
        "description": " ",
        "properties": {
          "contaDestino": {
            "$ref": "#/components/schemas/ContaContabilRequestModel"
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "categoria": {
            "$ref": "#/components/schemas/CategoriaRequestModel"
          },
          "historico": {
            "type": "string",
            "nullable": true
          },
          "taxa": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "juros": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "desconto": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "valorPago": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "acrescimo": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "CriarContaReceberRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "data": {
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "numeroDocumento": {
            "type": "string",
            "nullable": true
          },
          "contato": {
            "$ref": "#/components/schemas/ContatoRequestModel"
          },
          "historico": {
            "type": "string",
            "nullable": true
          },
          "categoria": {
            "$ref": "#/components/schemas/CategoriaRequestModel"
          },
          "dataCompetencia": {
            "type": "string",
            "nullable": true
          },
          "formaRecebimento": {
            "type": "integer",
            "enum": [
              "0 - Nao Definida",
              "1 - Multiplas",
              "2 - Dinheiro",
              "3 - Credito",
              "4 - Debito",
              "5 - Boleto",
              "6 - Deposito",
              "7 - Cheque",
              "8 - Crediario",
              "9 - Conta Receber",
              "10 - Outra",
              "11 - Personalizada",
              "12 - Duplicata Mercantil",
              "13 - Paypal",
              "14 - Vale",
              "15 - Pix",
              "23 - Link Pagamento"
            ],
            "example": "0",
            "nullable": true
          },
          "ocorrencia": {
            "type": "string",
            "enum": [
              "U - Unica",
              "W - Semanal",
              "M - Mensal",
              "T - Trimestral",
              "S - Semestral",
              "A - Anual",
              "P - Parcelada"
            ],
            "example": "U",
            "nullable": true
          },
          "diaVencimento": {
            "type": "integer",
            "nullable": true
          },
          "diaSemanaVencimento": {
            "type": "integer",
            "nullable": true
          },
          "quantidadeParcelas": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "CriarContaReceberResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListagemContasReceberResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "situacao": {
            "type": "string",
            "enum": [
              "aberto - Aberto",
              "cancelada - Cancelada",
              "pago - Pago",
              "parcial - Parcial",
              "prevista - Prevista"
            ],
            "example": "aberto",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "nullable": true
          },
          "historico": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "numeroDocumento": {
            "type": "string",
            "nullable": true
          },
          "numeroBanco": {
            "type": "string",
            "nullable": true
          },
          "serieDocumento": {
            "type": "string",
            "nullable": true
          },
          "cliente": {
            "$ref": "#/components/schemas/ContatoModelResponse"
          }
        },
        "type": "object"
      },
      "ObterContaReceberResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "situacao": {
            "type": "string",
            "enum": [
              "aberto - Aberto",
              "cancelada - Cancelada",
              "pago - Pago",
              "parcial - Parcial",
              "prevista - Prevista"
            ],
            "example": "aberto",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "nullable": true
          },
          "dataCompetencia": {
            "type": "string",
            "nullable": true
          },
          "dataLiquidacao": {
            "type": "string",
            "nullable": true
          },
          "diaVencimento": {
            "type": "integer",
            "nullable": true
          },
          "diaSemanaVencimento": {
            "type": "integer",
            "enum": [
              "0 - Domingo",
              "1 - Segunda",
              "2 - Terca",
              "3 - Quarta",
              "4 - Quinta",
              "5 - Sexta",
              "6 - Sabado"
            ],
            "example": "0",
            "nullable": true
          },
          "numeroDocumento": {
            "type": "string",
            "nullable": true
          },
          "serieDocumento": {
            "type": "string",
            "nullable": true
          },
          "ocorrencia": {
            "type": "string",
            "enum": [
              "U - Unica",
              "W - Semanal",
              "M - Mensal",
              "T - Trimestral",
              "S - Semestral",
              "A - Anual",
              "P - Parcelada"
            ],
            "example": "U",
            "nullable": true
          },
          "quantidadeParcelas": {
            "type": "integer",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "saldo": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "taxa": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "cliente": {
            "$ref": "#/components/schemas/ContatoModelResponse"
          },
          "categoria": {
            "$ref": "#/components/schemas/CategoriaReceitaDespesaResponseModel"
          },
          "formaRecebimento": {
            "$ref": "#/components/schemas/FormaRecebimentoResponseModel"
          },
          "historico": {
            "type": "string",
            "nullable": true
          },
          "linkBoleto": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "AtualizarContatoContatoModelRequest": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/BasePessoaContatoModel"
          }
        ]
      },
      "AtualizarContatoModelRequest": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/CriarAtualizarContatoModelRequest"
          }
        ]
      },
      "BaseContatoModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "fantasia": {
            "type": "string",
            "nullable": true
          },
          "tipoPessoa": {
            "type": "string",
            "enum": [
              "J - Juridica",
              "F - Fisica",
              "E - Estrangeiro",
              "X - Estrangeiro No Brasil"
            ],
            "example": "J",
            "nullable": true
          },
          "cpfCnpj": {
            "type": "string",
            "nullable": true
          },
          "inscricaoEstadual": {
            "type": "string",
            "nullable": true
          },
          "rg": {
            "type": "string",
            "nullable": true
          },
          "telefone": {
            "type": "string",
            "nullable": true
          },
          "celular": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "endereco": {
            "$ref": "#/components/schemas/EnderecoModel"
          }
        },
        "type": "object"
      },
      "BasePessoaContatoModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": true
          },
          "telefone": {
            "type": "string",
            "nullable": true
          },
          "ramal": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "setor": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ContatoModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseContatoModel"
          },
          {
            "properties": {
              "enderecoCobranca": {
                "$ref": "#/components/schemas/EnderecoModel"
              },
              "inscricaoMunicipal": {
                "type": "string",
                "nullable": true
              },
              "telefoneAdicional": {
                "type": "string",
                "nullable": true
              },
              "emailNfe": {
                "type": "string",
                "nullable": true
              },
              "site": {
                "type": "string",
                "nullable": true
              },
              "regimeTributario": {
                "type": "integer",
                "enum": [
                  "1 - Simples Nacional",
                  "2 - Simples Nacional Excesso Receita",
                  "3 - Regime Normal",
                  "4 - Mei"
                ],
                "example": "1",
                "nullable": true
              },
              "estadoCivil": {
                "type": "integer",
                "enum": [
                  "1 - Casado",
                  "2 - Solteiro",
                  "3 - Viuvo",
                  "4 - Separado",
                  "5 - Desquitado"
                ],
                "example": "1",
                "nullable": true
              },
              "profissao": {
                "type": "string",
                "nullable": true
              },
              "sexo": {
                "type": "string",
                "enum": [
                  "masculino - Masculino",
                  "feminino - Feminino"
                ],
                "example": "masculino",
                "nullable": true
              },
              "dataNascimento": {
                "type": "string",
                "nullable": true
              },
              "naturalidade": {
                "type": "string",
                "nullable": true
              },
              "nomePai": {
                "type": "string",
                "nullable": true
              },
              "nomeMae": {
                "type": "string",
                "nullable": true
              },
              "cpfPai": {
                "type": "string",
                "nullable": true
              },
              "cpfMae": {
                "type": "string",
                "nullable": true
              },
              "limiteCredito": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "situacao": {
                "type": "string",
                "enum": [
                  "B - Ativo",
                  "A - Ativo Com Acesso Sistema",
                  "I - Inativo",
                  "E - Excluido"
                ],
                "example": "B",
                "nullable": true
              },
              "observacoes": {
                "type": "string",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "ContatoModelResponse": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseContatoModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "CriarAtualizarContatoModelRequest": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ContatoModel"
          },
          {
            "properties": {
              "vendedor": {
                "$ref": "#/components/schemas/VendedorRequestModel"
              },
              "tipos": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "contatos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CriarContatoContatoModelRequest"
                },
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "CriarContatoContatoModelRequest": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/BasePessoaContatoModel"
          }
        ]
      },
      "CriarContatoContatoModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "CriarContatoModelRequest": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/CriarAtualizarContatoModelRequest"
          }
        ]
      },
      "CriarContatoModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListagemContatoModelResponse": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseContatoModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer"
              },
              "vendedor": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/VendedorResponseModel"
                  }
                ]
              },
              "situacao": {
                "type": "string",
                "enum": [
                  "B - Ativo",
                  "A - Ativo Com Acesso Sistema",
                  "I - Inativo",
                  "E - Excluido"
                ],
                "example": "B",
                "nullable": true
              },
              "dataCriacao": {
                "type": "string",
                "nullable": true
              },
              "dataAtualizacao": {
                "type": "string",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "ListagemContatosContatoModelResponse": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PessoaContatoModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "ListarTiposDeContatosModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string"
          },
          "perfilContato": {
            "type": "string",
            "enum": [
              "0 - Outro",
              "1 - Cliente",
              "2 - Fornecedor",
              "3 - Vendedor",
              "4 - Transportador",
              "5 - Funcionario"
            ],
            "example": "0"
          }
        },
        "type": "object"
      },
      "ObterContatoContatoModelResponse": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PessoaContatoModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "ObterContatoModelResponse": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ContatoModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer"
              },
              "dataCriacao": {
                "type": "string",
                "nullable": true
              },
              "dataAtualizacao": {
                "type": "string",
                "nullable": true
              },
              "vendedor": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/VendedorResponseModel"
                  }
                ]
              },
              "tipos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TipoContatoModel"
                },
                "nullable": true
              },
              "contatos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PessoaContatoModel"
                },
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "PessoaContatoModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BasePessoaContatoModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "TipoContatoModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ObterInfoContaModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "razaoSocial": {
            "type": "string"
          },
          "cpfCnpj": {
            "type": "string"
          },
          "fantasia": {
            "type": "string"
          },
          "enderecoEmpresa": {
            "$ref": "#/components/schemas/EnderecoModel"
          },
          "fone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "inscricaoEstadual": {
            "type": "string"
          },
          "regimeTributario": {
            "type": "integer",
            "enum": [
              "1 - Simples Nacional",
              "2 - Simples Nacional Excesso Receita",
              "3 - Regime Normal",
              "4 - Mei"
            ],
            "example": "1"
          }
        },
        "type": "object"
      },
      "DepositoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DepositoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "BaseEcommerceModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "EcommerceRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "numeroPedidoEcommerce": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "EcommerceResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "numeroPedidoEcommerce": {
            "type": "string",
            "nullable": true
          },
          "numeroPedidoCanalVenda": {
            "type": "string",
            "nullable": true
          },
          "canalVenda": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "EmbalagemRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "tipo": {
            "type": "integer",
            "enum": [
              "0 - Nao Definido",
              "1 - Envelope",
              "2 - Caixa",
              "3 - Cilindro"
            ],
            "example": "0",
            "nullable": true
          }
        },
        "type": "object"
      },
      "EmbalagemResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "tipo": {
            "type": "integer",
            "enum": [
              "0 - Nao Definido",
              "1 - Envelope",
              "2 - Caixa",
              "3 - Cilindro"
            ],
            "example": "0",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "EnderecoEntregaModelResponse": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EnderecoModel"
          },
          {
            "properties": {
              "nomeDestinatario": {
                "type": "string",
                "nullable": true
              },
              "cpfCnpj": {
                "type": "string",
                "nullable": true
              },
              "tipoPessoa": {
                "type": "string",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "EnderecoModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "endereco": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "type": "string",
            "nullable": true
          },
          "municipio": {
            "type": "string",
            "nullable": true
          },
          "cep": {
            "type": "string",
            "nullable": true
          },
          "uf": {
            "type": "string",
            "nullable": true
          },
          "pais": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "AtualizarProdutoEstoqueModelRequest": {
        "title": " ",
        "description": " ",
        "properties": {
          "deposito": {
            "$ref": "#/components/schemas/DepositoRequestModel"
          },
          "tipo": {
            "type": "string",
            "enum": [
              "B - Balanco",
              "E - Entrada",
              "S - Saida"
            ],
            "example": "B",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "precoUnitario": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "AtualizarProdutoEstoqueModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "idLancamento": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DepositoModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string"
          },
          "desconsiderar": {
            "type": "boolean"
          },
          "saldo": {
            "type": "number",
            "format": "float"
          },
          "reservado": {
            "type": "number",
            "format": "float"
          },
          "disponivel": {
            "type": "number",
            "format": "float"
          }
        },
        "type": "object"
      },
      "ObterEstoqueProdutoModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string"
          },
          "codigo": {
            "type": "string"
          },
          "unidade": {
            "type": "string"
          },
          "saldo": {
            "type": "number",
            "format": "float"
          },
          "reservado": {
            "type": "number",
            "format": "float"
          },
          "disponivel": {
            "type": "number",
            "format": "float"
          },
          "depositos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepositoModel"
            }
          }
        },
        "type": "object"
      },
      "CriarAgrupamentoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "idsNotasFiscais": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "idsPedidos": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "objetosAvulsos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjetoAvulsoRequestModel"
            }
          }
        },
        "type": "object"
      },
      "CriarAgrupamentoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ExpedicaoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "volume": {
            "$ref": "#/components/schemas/VolumeExpedicaoRequestModel"
          },
          "logistica": {
            "$ref": "#/components/schemas/LogisticaExpedicaoRequestModel"
          }
        },
        "type": "object"
      },
      "LogisticaExpedicaoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "formaFrete": {
            "$ref": "#/components/schemas/FormaFreteRequestModel"
          },
          "codigoRastreio": {
            "type": "string",
            "nullable": true
          },
          "urlRastreio": {
            "type": "string",
            "nullable": true
          },
          "possuiValorDeclarado": {},
          "valorDeclarado": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "possuiAvisoRecebimento": {}
        },
        "type": "object"
      },
      "VolumeExpedicaoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "embalagem": {
            "$ref": "#/components/schemas/EmbalagemRequestModel"
          },
          "largura": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "altura": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "comprimento": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "diametro": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "pesoBruto": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "quantidadeVolumes": {
            "description": "Apenas para notas e pedidos",
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ListagemAgrupamentosModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "identificacao": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "quantidadeObjetos": {
            "type": "integer"
          },
          "formaEnvio": {
            "$ref": "#/components/schemas/FormaEnvioResponseModel"
          }
        },
        "type": "object"
      },
      "LogisticaObjetoAvulsoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "formaFrete": {
            "$ref": "#/components/schemas/FormaFreteRequestModel"
          },
          "codigoRastreio": {
            "type": "string",
            "nullable": true
          },
          "urlRastreio": {
            "type": "string",
            "nullable": true
          },
          "possuiValorDeclarado": {},
          "valorDeclarado": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "possuiAvisoRecebimento": {}
        },
        "type": "object"
      },
      "ObjetoAvulsoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "destinatario": {
            "$ref": "#/components/schemas/ContatoRequestModel"
          },
          "volume": {
            "$ref": "#/components/schemas/VolumeObjetoAvulsoRequestModel"
          },
          "logistica": {
            "$ref": "#/components/schemas/LogisticaObjetoAvulsoRequestModel"
          }
        },
        "type": "object"
      },
      "VolumeObjetoAvulsoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "embalagem": {
            "$ref": "#/components/schemas/EmbalagemRequestModel"
          },
          "largura": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "altura": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "comprimento": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "diametro": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "pesoBruto": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ExpedicaoNotaResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "numero": {
            "type": "integer",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "situacao": {
            "type": "integer",
            "enum": [
              "1 - Pendente",
              "2 - Emitida",
              "3 - Cancelada",
              "4 - Enviada Aguardando Recibo",
              "5 - Rejeitada",
              "6 - Autorizada",
              "7 - Emitida Danfe",
              "8 - Registrada",
              "9 - Enviada Aguardando Protocolo",
              "10 - Denegada"
            ],
            "example": "1",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ExpedicaoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "data": {
            "type": "string"
          },
          "situacao": {
            "type": "string"
          },
          "venda": {
            "$ref": "#/components/schemas/ExpedicaoVendaResponseModel"
          },
          "notaFiscal": {
            "$ref": "#/components/schemas/ExpedicaoNotaResponseModel"
          },
          "destinatario": {
            "$ref": "#/components/schemas/ContatoModelResponse"
          },
          "volume": {
            "$ref": "#/components/schemas/VolumeExpedicaoResponseModel"
          },
          "logistica": {
            "$ref": "#/components/schemas/LogisticaExpedicaoResponseModel"
          }
        },
        "type": "object"
      },
      "ExpedicaoVendaResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "numero": {
            "type": "integer",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "situacao": {
            "type": "integer",
            "enum": [
              "8 - Dados Incompletos",
              "0 - Aberta",
              "3 - Aprovada",
              "4 - Preparando Envio",
              "1 - Faturada",
              "7 - Pronto Envio",
              "5 - Enviada",
              "6 - Entregue",
              "2 - Cancelada",
              "9 - Nao Entregue"
            ],
            "example": "8",
            "nullable": true
          }
        },
        "type": "object"
      },
      "LogisticaExpedicaoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "codigoRastreio": {
            "type": "string"
          },
          "urlRastreio": {
            "type": "string"
          },
          "possuiValorDeclarado": {
            "type": "boolean"
          },
          "valorDeclarado": {
            "type": "number",
            "format": "float"
          },
          "possuiAvisoRecebimento": {
            "type": "boolean"
          },
          "formaFrete": {
            "$ref": "#/components/schemas/FormaFreteResponseModel"
          },
          "transportador": {
            "$ref": "#/components/schemas/TransportadorExpedicaoResponseModel"
          }
        },
        "type": "object"
      },
      "ObterAgrupamentoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "identificacao": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "formaEnvio": {
            "$ref": "#/components/schemas/FormaEnvioResponseModel"
          },
          "expedicoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpedicaoResponseModel"
            }
          }
        },
        "type": "object"
      },
      "TransportadorExpedicaoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "VolumeExpedicaoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "embalagem": {
            "$ref": "#/components/schemas/EmbalagemResponseModel"
          },
          "largura": {
            "type": "number",
            "format": "float"
          },
          "altura": {
            "type": "number",
            "format": "float"
          },
          "comprimento": {
            "type": "number",
            "format": "float"
          },
          "diametro": {
            "type": "number",
            "format": "float"
          },
          "pesoBruto": {
            "type": "number",
            "format": "float"
          },
          "quantidadeVolumes": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ObterEtiquetasResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "urls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "PaginatedResultModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "FormaEnvioModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "type": "string",
            "enum": [
              "0 - Sem Frete",
              "1 - Correios",
              "2 - Transportadora",
              "3 - Mercado Envios",
              "4 - B2w Entrega",
              "5 - Correios Ff",
              "6 - Customizado",
              "7 - Jadlog",
              "8 - Totalexpress",
              "9 - Olist",
              "10 - Gateway",
              "11 - Magalu Entregas",
              "12 - Shopee Envios",
              "13 - Ns Entregas",
              "14 - Viavarejo Envvias",
              "15 - Madeira Envios",
              "16 - Ali Envios",
              "17 - Loggi",
              "18 - Conecta La Etiquetas",
              "19 - Amazon Dba",
              "20 - Magalu Fulfillment",
              "21 - Ns Magalu Entregas",
              "22 - Shein Envios",
              "23 - Mandae",
              "24 - Olist Envios",
              "25 - Kwai Envios",
              "26 - Beleza Envios"
            ],
            "example": "0",
            "nullable": true
          },
          "situacao": {
            "type": "string",
            "enum": [
              "1 - Habilitada",
              "2 - Desabilitada"
            ],
            "example": "1",
            "nullable": true
          }
        },
        "type": "object"
      },
      "FormaEnvioRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "FormaEnvioResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ListagemFormasEnvioResponseModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormaEnvioModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer"
              },
              "gatewayLogistico": {
                "$ref": "#/components/schemas/GatewayLogisticoResponseModel"
              }
            },
            "type": "object"
          }
        ]
      },
      "ObterFormaEnvioResponseModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormaEnvioModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer"
              },
              "gatewayLogistico": {
                "$ref": "#/components/schemas/GatewayLogisticoResponseModel"
              },
              "formasFrete": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FormaFreteModel"
                },
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "FormaFreteModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "codigoExterno": {
            "type": "string",
            "nullable": true
          },
          "tipoEntrega": {
            "type": "string",
            "enum": [
              "0 - Nao Definida",
              "1 - Normal",
              "2 - Expressa",
              "3 - Agendada",
              "4 - Economica",
              "5 - Super Expressa",
              "6 - Retirada"
            ],
            "example": "0",
            "nullable": true
          }
        },
        "type": "object"
      },
      "FormaFreteRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "FormaFreteResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "FormaPagamentoModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "situacao": {
            "type": "string",
            "enum": [
              "1 - Habilitada",
              "2 - Desabilitada"
            ],
            "example": "1",
            "nullable": true
          }
        },
        "type": "object"
      },
      "FormaPagamentoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "FormaPagamentoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ListagemFormasPagamentoResponseModel": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormaPagamentoModel"
          }
        ]
      },
      "ObterFormaPagamentoResponseModel": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormaPagamentoModel"
          }
        ]
      },
      "FormaRecebimentoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "GatewayLogisticoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "IntermediadorModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "cnpj": {
            "type": "string",
            "nullable": true
          },
          "canalVenda": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "IntermediadorRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "IntermediadorResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string"
          },
          "cnpj": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListagemIntermediadoresResponseModel": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/IntermediadorModel"
          }
        ]
      },
      "ObterIntermediadorResponseModel": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/IntermediadorModel"
          }
        ]
      },
      "ExcecaoListaPrecoModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "idProduto": {
            "type": "integer",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "preco": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "precoPromocional": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ListaPrecoModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "acrescimoDesconto": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ListaPrecoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ListaPrecoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string"
          },
          "acrescimoDesconto": {
            "type": "number",
            "format": "float"
          }
        },
        "type": "object"
      },
      "ListagemListaDePrecosModelResponse": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/ListaPrecoModel"
          }
        ]
      },
      "ObterListaDePrecosModelResponse": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ListaPrecoModel"
          },
          {
            "properties": {
              "excecoes": {
                "$ref": "#/components/schemas/ExcecaoListaPrecoModel"
              }
            },
            "type": "object"
          }
        ]
      },
      "MarcaRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "MarcaResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "AtualizarMarcadorRequestModel": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseMarcadorModel"
          }
        ]
      },
      "BaseMarcadorModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "descricao": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "CriarMarcadorRequestModel": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseMarcadorModel"
          }
        ]
      },
      "ObterMarcadorResponseModel": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseMarcadorModel"
          }
        ]
      },
      "BaseMarcaModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "descricao": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CriarMarcaModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListagemMarcasResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeioPagamentoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "MeioPagamentoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "NaturezaOperacaoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "NaturezaOperacaoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "AutorizarNotaFiscalModelRequest": {
        "title": " ",
        "description": " ",
        "properties": {
          "enviarEmail": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AutorizarNotaFiscalModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "chaveAcesso": {
            "type": "string"
          },
          "linkAcesso": {
            "type": "string"
          },
          "situacao": {
            "type": "integer",
            "enum": [
              "1 - Pendente",
              "2 - Emitida",
              "3 - Cancelada",
              "4 - Enviada Aguardando Recibo",
              "5 - Rejeitada",
              "6 - Autorizada",
              "7 - Emitida Danfe",
              "8 - Registrada",
              "9 - Enviada Aguardando Protocolo",
              "10 - Denegada"
            ],
            "example": "1"
          },
          "xml": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "BaseNotaFiscalModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "situacao": {
            "type": "string",
            "enum": [
              "1 - Pendente",
              "2 - Emitida",
              "3 - Cancelada",
              "4 - Enviada Aguardando Recibo",
              "5 - Rejeitada",
              "6 - Autorizada",
              "7 - Emitida Danfe",
              "8 - Registrada",
              "9 - Enviada Aguardando Protocolo",
              "10 - Denegada"
            ],
            "example": "1",
            "nullable": true
          },
          "tipo": {
            "type": "string",
            "enum": [
              "E - Entrada",
              "S - Saida"
            ],
            "example": "E",
            "nullable": true
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "serie": {
            "type": "string",
            "nullable": true
          },
          "chaveAcesso": {
            "type": "string",
            "nullable": true
          },
          "dataEmissao": {
            "type": "string",
            "nullable": true
          },
          "cliente": {
            "$ref": "#/components/schemas/NotaFiscalClienteModel"
          },
          "enderecoEntrega": {
            "$ref": "#/components/schemas/EnderecoEntregaModelResponse"
          },
          "valor": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "valorProdutos": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "valorFrete": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "vendedor": {
            "$ref": "#/components/schemas/VendedorResponseModel"
          },
          "idFormaEnvio": {
            "type": "integer",
            "nullable": true
          },
          "idFormaFrete": {
            "type": "integer",
            "nullable": true
          },
          "codigoRastreamento": {
            "type": "string",
            "nullable": true
          },
          "urlRastreamento": {
            "type": "string",
            "nullable": true
          },
          "fretePorConta": {
            "type": "string",
            "nullable": true
          },
          "qtdVolumes": {
            "type": "integer",
            "nullable": true
          },
          "pesoBruto": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "pesoLiquido": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "IncluirXmlNotaFiscalRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "xml": {
            "type": "string",
            "format": "binary"
          },
          "numeroPedido": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "IncluirXmlNotaFiscalResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "idNota": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListagemNotaFiscalModelResponse": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseNotaFiscalModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer"
              },
              "ecommerce": {
                "$ref": "#/components/schemas/EcommerceResponseModel"
              }
            },
            "type": "object"
          }
        ]
      },
      "NotaFiscalClienteModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseContatoModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "NotaFiscalEnderecoEntregaModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EnderecoModel"
          },
          {
            "properties": {
              "nomeDestinatario": {
                "type": "string",
                "nullable": true
              },
              "cpfCnpj": {
                "type": "string",
                "nullable": true
              },
              "tipoPessoa": {
                "type": "string",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "NotaFiscalItemModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "idProduto": {
            "type": "integer",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "unidade": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "valorUnitario": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "valorTotal": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "cfop": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "NotaFiscalParcelaModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "dias": {
            "type": "integer",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "idMeioPagamento": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ObterLinkNotaFiscalModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "link": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ObterNotaFiscalModelResponse": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseNotaFiscalModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer"
              },
              "finalidade": {
                "type": "string",
                "enum": [
                  "1 - Nfe Normal",
                  "2 - Nfe Complementar",
                  "3 - Nfe Ajuste",
                  "4 - Devolucao Retorno",
                  "7 - Nfe Cupom Referenciado",
                  "8 - Devolucao Retorno Sem Nfe",
                  "9 - Nfe Chave Acesso Referenciada"
                ],
                "example": "1",
                "nullable": true
              },
              "regimeTributario": {
                "type": "integer",
                "enum": [
                  "1 - Simples Nacional",
                  "2 - Simples Nacional Excesso Receita",
                  "3 - Regime Normal",
                  "4 - Mei"
                ],
                "example": "1",
                "nullable": true
              },
              "dataInclusao": {
                "type": "string",
                "nullable": true
              },
              "baseIcms": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorIcms": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "baseIcmsSt": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorIcmsSt": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorServicos": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorFrete": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorSeguro": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorOutras": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorIpi": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorIssqn": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorDesconto": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorFaturado": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "idIntermediador": {
                "type": "integer",
                "nullable": true
              },
              "idNaturezaOperacao": {
                "type": "integer",
                "nullable": true
              },
              "idFormaPagamento": {
                "type": "integer",
                "nullable": true
              },
              "idMeioPagamento": {
                "type": "integer",
                "nullable": true
              },
              "observacoes": {
                "type": "string",
                "nullable": true
              },
              "condicaoPagamento": {
                "type": "string",
                "nullable": true
              },
              "itens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NotaFiscalItemModelResponse"
                }
              },
              "parcelas": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NotaFiscalParcelaModelResponse"
                }
              },
              "ecommerce": {
                "$ref": "#/components/schemas/EcommerceResponseModel"
              }
            },
            "type": "object"
          }
        ]
      },
      "ObterXmlNotaFiscalModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "xmlNfe": {
            "type": "string"
          },
          "xmlCancelamento": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AtualizarOrdemCompraModelRequest": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/CriarAtualizarOrdemCompraModelRequest"
          }
        ]
      },
      "AtualizarSituacaoOrdemCompraRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "situacao": {
            "type": "integer",
            "enum": [
              "0 - Em Aberto",
              "1 - Atendido",
              "2 - Cancelado",
              "3 - Em Andamento"
            ],
            "example": "0",
            "nullable": true
          }
        },
        "type": "object"
      },
      "CriarAtualizarOrdemCompraModelRequest": {
        "title": " ",
        "description": " ",
        "properties": {
          "data": {
            "type": "string",
            "nullable": true
          },
          "dataPrevista": {
            "type": "string",
            "nullable": true
          },
          "desconto": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "condicao": {
            "type": "string",
            "nullable": true
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          },
          "observacoesInternas": {
            "type": "string",
            "nullable": true
          },
          "fretePorConta": {
            "type": "string",
            "enum": [
              "R - Remetente",
              "D - Destinatario",
              "T - Terceiros",
              "3 - Proprio Remetente",
              "4 - Proprio Destinatario",
              "S - Sem Transporte"
            ],
            "example": "R",
            "nullable": true
          },
          "transportador": {
            "type": "string",
            "nullable": true
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdemCompraParcelaModelRequest"
            }
          }
        },
        "type": "object"
      },
      "CriarOrdemCompraModelRequest": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CriarAtualizarOrdemCompraModelRequest"
          },
          {
            "properties": {
              "contato": {
                "$ref": "#/components/schemas/ContatoRequestModel"
              },
              "categoria": {
                "$ref": "#/components/schemas/CategoriaRequestModel"
              },
              "frete": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "itens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrdemCompraItemModelRequest"
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CriarOrdemCompraModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "numeroPedido": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "situacao": {
            "type": "string",
            "enum": [
              "0 - Em Aberto",
              "1 - Atendido",
              "2 - Cancelado",
              "3 - Em Andamento"
            ],
            "example": "0",
            "nullable": true
          }
        },
        "type": "object"
      },
      "LancarEstoqueOrdemCompraRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "deposito": {
            "$ref": "#/components/schemas/DepositoRequestModel"
          }
        },
        "type": "object"
      },
      "ListarOrdemCompraModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string"
          },
          "situacao": {
            "type": "string",
            "enum": [
              "0 - Em Aberto",
              "1 - Atendido",
              "2 - Cancelado",
              "3 - Em Andamento"
            ],
            "example": "0",
            "nullable": true
          },
          "desconto": {
            "type": "string"
          },
          "frete": {
            "type": "number",
            "format": "float"
          },
          "totalProdutos": {
            "type": "number",
            "format": "float"
          },
          "totalPedidoCompra": {
            "type": "number",
            "format": "float"
          },
          "dataPrevista": {
            "type": "string"
          },
          "contato": {
            "$ref": "#/components/schemas/ContatoModelResponse"
          },
          "categoria": {
            "$ref": "#/components/schemas/CategoriaResponseModel"
          },
          "notaFiscal": {
            "$ref": "#/components/schemas/OrdemCompraNotaFiscalModelResponse"
          },
          "fretePorConta": {
            "type": "string",
            "enum": [
              "R - Remetente",
              "D - Destinatario",
              "T - Terceiros",
              "3 - Proprio Remetente",
              "4 - Proprio Destinatario",
              "S - Sem Transporte"
            ],
            "example": "R",
            "nullable": true
          },
          "observacoes": {
            "type": "string"
          },
          "observacoesInternas": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ObterOrdemCompraModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "numeroPedido": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string"
          },
          "situacao": {
            "type": "string",
            "enum": [
              "0 - Em Aberto",
              "1 - Atendido",
              "2 - Cancelado",
              "3 - Em Andamento"
            ],
            "example": "0",
            "nullable": true
          },
          "desconto": {
            "type": "string"
          },
          "frete": {
            "type": "number",
            "format": "float"
          },
          "totalProdutos": {
            "type": "number",
            "format": "float"
          },
          "totalPedidoCompra": {
            "type": "number",
            "format": "float"
          },
          "dataPrevista": {
            "type": "string"
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdemCompraItemModelResponse"
            }
          },
          "contato": {
            "$ref": "#/components/schemas/ContatoModelResponse"
          },
          "categoria": {
            "$ref": "#/components/schemas/CategoriaResponseModel"
          },
          "notaFiscal": {
            "$ref": "#/components/schemas/OrdemCompraNotaFiscalModelResponse"
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrdemCompraParcelaModelResponse"
            }
          },
          "fretePorConta": {
            "type": "string",
            "enum": [
              "R - Remetente",
              "D - Destinatario",
              "T - Terceiros",
              "3 - Proprio Remetente",
              "4 - Proprio Destinatario",
              "S - Sem Transporte"
            ],
            "example": "R",
            "nullable": true
          },
          "observacoes": {
            "type": "string"
          },
          "observacoesInternas": {
            "type": "string",
            "nullable": true
          },
          "pvFrete": {
            "type": "number",
            "format": "float"
          }
        },
        "type": "object"
      },
      "OrdemCompraItemModelRequest": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProdutoRequestModel"
          },
          {
            "properties": {
              "produto": {
                "$ref": "#/components/schemas/ProdutoRequestModel"
              },
              "quantidade": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valor": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "informacoesAdicionais": {
                "type": "string",
                "nullable": true
              },
              "aliquotaIPI": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorICMS": {
                "type": "number",
                "format": "float",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "OrdemCompraItemModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "produto": {
            "$ref": "#/components/schemas/ProdutoResponseModel"
          },
          "gtin": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "float"
          },
          "preco": {
            "type": "number",
            "format": "float"
          },
          "ipi": {
            "type": "number",
            "format": "float"
          }
        },
        "type": "object"
      },
      "OrdemCompraNotaFiscalModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "numero": {
            "type": "string"
          },
          "dataEmissao": {
            "type": "string"
          },
          "valor": {
            "type": "string"
          },
          "natureza": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrdemCompraParcelaModelRequest": {
        "title": " ",
        "description": " ",
        "properties": {
          "dias": {
            "type": "integer"
          },
          "dataVencimento": {
            "type": "string"
          },
          "valor": {
            "type": "number",
            "format": "float"
          },
          "contaContabil": {
            "$ref": "#/components/schemas/ContaContabilModel"
          },
          "meioPagamento": {
            "type": "string",
            "enum": [
              "1 - Dinheiro",
              "2 - Cheque",
              "3 - Cartao Credito",
              "4 - Cartao Debito",
              "5 - Credito Loja",
              "10 - Vale Alimentacao",
              "11 - Vale Refeicao",
              "12 - Vale Presente",
              "13 - Vale Combustivel",
              "14 - Duplicata Mercantil",
              "15 - Boleto",
              "16 - Deposito Bancario",
              "17 - Pix",
              "18 - Transferencia Bancaria Carteira Digital",
              "19 - Fidelidade Cashback Credito Virtual",
              "90 - Sem Pagamento",
              "99 - Outros"
            ],
            "example": "1",
            "nullable": true
          },
          "observacoes": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrdemCompraParcelaModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "numero": {
            "type": "integer"
          },
          "dias": {
            "type": "integer"
          },
          "dataVencimento": {
            "type": "string"
          },
          "valor": {
            "type": "number",
            "format": "float"
          },
          "contaContabil": {
            "$ref": "#/components/schemas/ContaContabilModel"
          },
          "meioPagamento": {
            "type": "string",
            "enum": [
              "1 - Dinheiro",
              "2 - Cheque",
              "3 - Cartao Credito",
              "4 - Cartao Debito",
              "5 - Credito Loja",
              "10 - Vale Alimentacao",
              "11 - Vale Refeicao",
              "12 - Vale Presente",
              "13 - Vale Combustivel",
              "14 - Duplicata Mercantil",
              "15 - Boleto",
              "16 - Deposito Bancario",
              "17 - Pix",
              "18 - Transferencia Bancaria Carteira Digital",
              "19 - Fidelidade Cashback Credito Virtual",
              "90 - Sem Pagamento",
              "99 - Outros"
            ],
            "example": "1",
            "nullable": true
          },
          "observacoes": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AnexoOrdemServicoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "AtualizarOrdemServicoRequestModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrdemServicoRequestModel"
          },
          {
            "properties": {
              "cliente": {
                "$ref": "#/components/schemas/ContatoRequestModel"
              }
            },
            "type": "object"
          }
        ]
      },
      "AtualizarSituacaoOrdemServicoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "situacao": {
            "type": "integer",
            "enum": [
              "4 - Nao Aprovada",
              "3 - Finalizada",
              "0 - Em Aberto",
              "2 - Serv Concluido",
              "1 - Orcada",
              "5 - Aprovada",
              "6 - Em Andamento",
              "7 - Cancelada"
            ],
            "example": "4",
            "nullable": true
          }
        },
        "type": "object"
      },
      "CriarOrdemServicoRequestModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrdemServicoRequestModel"
          },
          {
            "properties": {
              "cliente": {
                "$ref": "#/components/schemas/ContatoRequestModel"
              }
            },
            "type": "object"
          }
        ]
      },
      "CriarOrdemServicoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "numero": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GerarNotaFiscalOrdemServicoModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "numero": {
            "type": "integer"
          },
          "serie": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ItemOrdemServicoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "servico": {
            "$ref": "#/components/schemas/ServicoRequestModel"
          },
          "quantidade": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "valorUnitario": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "porcentagemDesconto": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "orcar": {}
        },
        "type": "object"
      },
      "LancarEstoqueOrdemServicoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "deposito": {
            "$ref": "#/components/schemas/DepositoRequestModel"
          }
        },
        "type": "object"
      },
      "ListagemOrdemServicoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "situacao": {
            "type": "string",
            "enum": [
              "4 - Nao Aprovada",
              "3 - Finalizada",
              "0 - Em Aberto",
              "2 - Serv Concluido",
              "1 - Orcada",
              "5 - Aprovada",
              "6 - Em Andamento",
              "7 - Cancelada"
            ],
            "example": "4",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "dataPrevista": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "numeroOrdemServico": {
            "type": "string",
            "nullable": true
          },
          "cliente": {
            "$ref": "#/components/schemas/ContatoModelResponse"
          },
          "marcadores": {}
        },
        "type": "object"
      },
      "ObterOrdemServicoModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "situacao": {
            "type": "string",
            "enum": [
              "4 - Nao Aprovada",
              "3 - Finalizada",
              "0 - Em Aberto",
              "2 - Serv Concluido",
              "1 - Orcada",
              "5 - Aprovada",
              "6 - Em Andamento",
              "7 - Cancelada"
            ],
            "example": "4",
            "nullable": true
          },
          "data": {
            "type": "string"
          },
          "dataPrevista": {
            "type": "string"
          },
          "totalServicos": {
            "type": "string"
          },
          "totalOrdemServico": {
            "type": "string"
          },
          "totalPecas": {
            "type": "string"
          },
          "numeroOrdemServico": {
            "type": "string"
          },
          "equipamento": {
            "type": "string"
          },
          "equipamentoSerie": {
            "type": "string"
          },
          "descricaoProblema": {
            "type": "string"
          },
          "observacoes": {
            "type": "string"
          },
          "orcar": {
            "type": "string"
          },
          "orcado": {
            "type": "string"
          },
          "observacoesServico": {
            "type": "string"
          },
          "observacoesInternas": {
            "type": "string"
          },
          "alqComissao": {
            "type": "number",
            "format": "float"
          },
          "vlrComissao": {
            "type": "integer"
          },
          "idForma": {
            "type": "integer"
          },
          "idContaContabil": {
            "type": "integer"
          },
          "desconto": {
            "type": "string"
          },
          "idListaPreco": {
            "type": "integer"
          },
          "idLocalPrestacao": {
            "type": "string",
            "nullable": true
          },
          "idDeposito": {
            "type": "integer"
          },
          "dataConclusao": {
            "type": "string"
          },
          "vendedor": {
            "$ref": "#/components/schemas/ContatoModelResponse"
          },
          "contato": {
            "$ref": "#/components/schemas/ContatoModelResponse"
          },
          "tecnico": {
            "type": "string"
          },
          "categoria": {
            "$ref": "#/components/schemas/CategoriaReceitaDespesaResponseModel"
          },
          "formaPagamento": {
            "$ref": "#/components/schemas/FormaPagamentoResponseModel"
          }
        },
        "type": "object"
      },
      "OrdemServicoAssistenciaTecnicaRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "equipamento": {
            "type": "string",
            "nullable": true
          },
          "numeroSerieEquipamento": {
            "type": "string",
            "nullable": true
          },
          "pecas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PecaOrdemServicoRequestModel"
            },
            "nullable": true
          }
        },
        "type": "object"
      },
      "OrdemServicoPagamentoRequestModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PagamentoRequestModel"
          },
          {
            "properties": {
              "categoria": {
                "$ref": "#/components/schemas/CategoriaRequestModel"
              }
            },
            "type": "object"
          }
        ]
      },
      "OrdemServicoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "listaPreco": {
            "$ref": "#/components/schemas/ListaPrecoRequestModel"
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "consideracaoFinal": {
            "type": "string",
            "nullable": true
          },
          "dataInicio": {
            "type": "string",
            "nullable": true
          },
          "dataPrevista": {
            "type": "string",
            "nullable": true
          },
          "dataConclusao": {
            "type": "string",
            "nullable": true
          },
          "valorDesconto": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "observacao": {
            "type": "string",
            "nullable": true
          },
          "observacaoInterna": {
            "type": "string",
            "nullable": true
          },
          "servicos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemOrdemServicoRequestModel"
            },
            "nullable": true
          },
          "vendedor": {
            "$ref": "#/components/schemas/VendedorOrdemServicoRequestModel"
          },
          "tecnico": {
            "type": "string",
            "nullable": true
          },
          "marcadores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CriarMarcadorRequestModel"
            },
            "nullable": true
          },
          "anexos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnexoOrdemServicoRequestModel"
            },
            "nullable": true
          },
          "pagamento": {
            "$ref": "#/components/schemas/OrdemServicoPagamentoRequestModel"
          },
          "assistenciaTecnica": {
            "$ref": "#/components/schemas/OrdemServicoAssistenciaTecnicaRequestModel"
          }
        },
        "type": "object"
      },
      "PecaOrdemServicoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "produto": {
            "$ref": "#/components/schemas/ProdutoRequestModel"
          },
          "quantidade": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "valorUnitario": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "unidade": {
            "type": "string",
            "nullable": true
          },
          "porcentagemDesconto": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "VendedorOrdemServicoRequestModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VendedorRequestModel"
          },
          {
            "properties": {
              "porcentagemComissao": {
                "type": "number",
                "format": "float",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "PagamentoParcelasRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelaModelRequest"
            },
            "nullable": true
          }
        },
        "type": "object"
      },
      "PagamentoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "formaPagamento": {
            "$ref": "#/components/schemas/FormaPagamentoRequestModel"
          },
          "meioPagamento": {
            "$ref": "#/components/schemas/MeioPagamentoRequestModel"
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelaModelRequest"
            },
            "nullable": true
          }
        },
        "type": "object"
      },
      "PagamentoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "formaPagamento": {
            "$ref": "#/components/schemas/FormaPagamentoResponseModel"
          },
          "meioPagamento": {
            "$ref": "#/components/schemas/MeioPagamentoResponseModel"
          },
          "condicaoPagamento": {
            "type": "string",
            "nullable": true
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelaModelResponse"
            },
            "nullable": true
          }
        },
        "type": "object"
      },
      "ParcelaModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "dias": {
            "type": "integer",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ParcelaModelRequest": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ParcelaModel"
          },
          {
            "properties": {
              "formaPagamento": {
                "$ref": "#/components/schemas/FormaPagamentoRequestModel"
              },
              "meioPagamento": {
                "$ref": "#/components/schemas/MeioPagamentoRequestModel"
              }
            },
            "type": "object"
          }
        ]
      },
      "ParcelaModelResponse": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ParcelaModel"
          },
          {
            "properties": {
              "formaPagamento": {
                "$ref": "#/components/schemas/FormaPagamentoResponseModel"
              },
              "meioPagamento": {
                "$ref": "#/components/schemas/MeioPagamentoResponseModel"
              }
            },
            "type": "object"
          }
        ]
      },
      "AtualizarInfoRastreamentoPedidoModelRequest": {
        "title": " ",
        "description": " ",
        "properties": {
          "codigoRastreamento": {
            "type": "string",
            "nullable": true
          },
          "urlRastreamento": {
            "type": "string",
            "nullable": true
          },
          "formaEnvio": {
            "$ref": "#/components/schemas/FormaEnvioRequestModel"
          },
          "formaFrete": {
            "$ref": "#/components/schemas/FormaFreteRequestModel"
          },
          "fretePagoEmpresa": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "dataPrevista": {
            "type": "string",
            "nullable": true
          },
          "idContatoTransportadora": {
            "type": "integer",
            "nullable": true
          },
          "volumes": {
            "type": "integer",
            "nullable": true
          },
          "pesoBruto": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "pesoLiquido": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "AtualizarPedidoModelRequest": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BasePedidoModel"
          },
          {
            "properties": {
              "pagamento": {
                "$ref": "#/components/schemas/PagamentoParcelasRequestModel"
              }
            },
            "type": "object"
          }
        ]
      },
      "AtualizarSituacaoPedidoModelRequest": {
        "title": " ",
        "description": " ",
        "properties": {
          "situacao": {
            "type": "integer",
            "enum": [
              "8 - Dados Incompletos",
              "0 - Aberta",
              "3 - Aprovada",
              "4 - Preparando Envio",
              "1 - Faturada",
              "7 - Pronto Envio",
              "5 - Enviada",
              "6 - Entregue",
              "2 - Cancelada",
              "9 - Nao Entregue"
            ],
            "example": "8",
            "nullable": true
          }
        },
        "type": "object"
      },
      "BasePedidoModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "dataPrevista": {
            "type": "string",
            "nullable": true
          },
          "dataEnvio": {
            "type": "string",
            "nullable": true
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          },
          "observacoesInternas": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ContatoPedidoModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "fantasia": {
            "type": "string",
            "nullable": true
          },
          "tipoPessoa": {
            "type": "string",
            "nullable": true
          },
          "cnpj": {
            "type": "string",
            "nullable": true
          },
          "inscricaoEstadual": {
            "type": "string",
            "nullable": true
          },
          "rg": {
            "type": "string",
            "nullable": true
          },
          "endereco": {
            "$ref": "#/components/schemas/EnderecoContatoPedidoModel"
          },
          "fone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ContatoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "CriarPedidoModelRequest": {
        "title": " ",
        "description": " ",
        "required": [
          "idContato"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PedidoModel"
          },
          {
            "properties": {
              "idContato": {
                "type": "integer"
              },
              "listaPreco": {
                "$ref": "#/components/schemas/ListaPrecoRequestModel"
              },
              "naturezaOperacao": {
                "$ref": "#/components/schemas/NaturezaOperacaoRequestModel"
              },
              "vendedor": {
                "$ref": "#/components/schemas/VendedorRequestModel"
              },
              "enderecoEntrega": {
                "$ref": "#/components/schemas/EnderecoEntregaPedidoModelRequest"
              },
              "ecommerce": {
                "$ref": "#/components/schemas/EcommerceRequestModel"
              },
              "transportador": {
                "$ref": "#/components/schemas/TransportadorRequestModel"
              },
              "intermediador": {
                "$ref": "#/components/schemas/IntermediadorRequestModel"
              },
              "deposito": {
                "$ref": "#/components/schemas/DepositoRequestModel"
              },
              "pagamento": {
                "$ref": "#/components/schemas/PagamentoRequestModel"
              },
              "itens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemPedidoRequestModel"
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CriarPedidoModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "numeroPedido": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnderecoContatoPedidoModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "endereco": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "type": "string",
            "nullable": true
          },
          "cidade": {
            "type": "string",
            "nullable": true
          },
          "cep": {
            "type": "string",
            "nullable": true
          },
          "uf": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "EnderecoEntregaPedidoModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "endereco": {
            "type": "string",
            "nullable": true
          },
          "enderecoNro": {
            "type": "string",
            "nullable": true
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "type": "string",
            "nullable": true
          },
          "municipio": {
            "type": "string",
            "nullable": true
          },
          "cep": {
            "type": "string",
            "nullable": true
          },
          "uf": {
            "type": "string",
            "nullable": true
          },
          "fone": {
            "type": "string",
            "nullable": true
          },
          "nomeDestinatario": {
            "type": "string",
            "nullable": true
          },
          "cpfCnpj": {
            "type": "string",
            "nullable": true
          },
          "tipoPessoa": {
            "type": "string",
            "nullable": true
          },
          "ie": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "EnderecoEntregaPedidoModelRequest": {
        "title": " ",
        "description": " ",
        "allOf": [
          {
            "$ref": "#/components/schemas/EnderecoEntregaPedidoModel"
          }
        ]
      },
      "GerarNotaFiscalPedidoModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "numero": {
            "type": "integer"
          },
          "serie": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ItemPedidoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "produto": {
            "$ref": "#/components/schemas/ProdutoRequestModel"
          },
          "quantidade": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "valorUnitario": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "infoAdicional": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ItemPedidoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "produto": {
            "$ref": "#/components/schemas/ProdutoResponseModel"
          },
          "quantidade": {
            "type": "number",
            "format": "float"
          },
          "valorUnitario": {
            "type": "number",
            "format": "float"
          },
          "infoAdicional": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListagemPedidoModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "situacao": {
            "type": "integer",
            "nullable": true
          },
          "numeroPedido": {
            "type": "integer",
            "nullable": true
          },
          "ecommerce": {
            "$ref": "#/components/schemas/EcommerceResponseModel"
          },
          "dataCriacao": {
            "type": "string",
            "nullable": true
          },
          "dataPrevista": {
            "type": "string",
            "nullable": true
          },
          "cliente": {
            "$ref": "#/components/schemas/PedidoClienteModel"
          },
          "valor": {
            "type": "string",
            "nullable": true
          },
          "vendedor": {
            "$ref": "#/components/schemas/VendedorResponseModel"
          },
          "transportador": {
            "$ref": "#/components/schemas/TransportadorResponseModel"
          }
        },
        "type": "object"
      },
      "ObterPedidoModelResponse": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PedidoModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer",
                "nullable": true
              },
              "numeroPedido": {
                "type": "integer",
                "nullable": true
              },
              "idNotaFiscal": {
                "type": "integer",
                "nullable": true
              },
              "dataFaturamento": {
                "type": "string",
                "nullable": true
              },
              "valorTotalProdutos": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorTotalPedido": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "listaPreco": {
                "$ref": "#/components/schemas/ListaPrecoResponseModel"
              },
              "cliente": {
                "$ref": "#/components/schemas/PedidoClienteModel"
              },
              "enderecoEntrega": {
                "$ref": "#/components/schemas/EnderecoEntregaModelResponse"
              },
              "ecommerce": {
                "$ref": "#/components/schemas/EcommerceResponseModel"
              },
              "transportador": {
                "$ref": "#/components/schemas/TransportadorResponseModel"
              },
              "deposito": {
                "$ref": "#/components/schemas/DepositoResponseModel"
              },
              "vendedor": {
                "$ref": "#/components/schemas/VendedorResponseModel"
              },
              "naturezaOperacao": {
                "$ref": "#/components/schemas/NaturezaOperacaoResponseModel"
              },
              "intermediador": {
                "$ref": "#/components/schemas/IntermediadorResponseModel"
              },
              "pagamento": {
                "$ref": "#/components/schemas/PagamentoResponseModel"
              },
              "itens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemPedidoResponseModel"
                },
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "PedidoClienteModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseContatoModel"
          },
          {
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "PedidoModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BasePedidoModel"
          },
          {
            "properties": {
              "situacao": {
                "type": "integer",
                "enum": [
                  "8 - Dados Incompletos",
                  "0 - Aberta",
                  "3 - Aprovada",
                  "4 - Preparando Envio",
                  "1 - Faturada",
                  "7 - Pronto Envio",
                  "5 - Enviada",
                  "6 - Entregue",
                  "2 - Cancelada",
                  "9 - Nao Entregue"
                ],
                "example": "8",
                "nullable": true
              },
              "data": {
                "type": "string",
                "nullable": true
              },
              "dataEntrega": {
                "type": "string",
                "nullable": true
              },
              "numeroOrdemCompra": {
                "type": "string",
                "nullable": true
              },
              "valorDesconto": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorFrete": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "valorOutrasDespesas": {
                "type": "number",
                "format": "float",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "AtualizarPrecoProdutoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "preco": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "precoPromocional": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "AtualizarPrecoProdutoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "preco": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "precoPromocional": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "AtualizarProdutoRequestModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProdutoModel"
          },
          {
            "properties": {
              "descricao": {
                "type": "string",
                "nullable": true
              },
              "estoque": {
                "$ref": "#/components/schemas/EstoqueProdutoRequestModel"
              }
            },
            "type": "object"
          }
        ]
      },
      "AtualizarProdutoVariacaoRequestModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProdutoModel"
          },
          {
            "properties": {
              "estoque": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EstoqueProdutoRequestModel"
                  }
                ]
              }
            },
            "type": "object"
          }
        ]
      },
      "CriarProdutoComVariacoesResponseModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CriarProdutoResponseModel"
          },
          {
            "properties": {
              "variacoes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CriarProdutoResponseModel"
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CriarProdutoEstoqueRequestModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/EstoqueProdutoRequestModel"
          },
          {
            "properties": {
              "inicial": {
                "type": "number",
                "format": "float",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "CriarProdutoRequestModel": {
        "title": " ",
        "description": " ",
        "required": [
          "tipo",
          "descricao"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProdutoModel"
          },
          {
            "properties": {
              "descricao": {
                "type": "string",
                "nullable": true
              },
              "tipo": {
                "type": "string",
                "enum": [
                  "K - Kit",
                  "S - Simples",
                  "V - Com Variacoes",
                  "F - Fabricado",
                  "M - Materia Prima"
                ],
                "example": "K",
                "nullable": true
              },
              "estoque": {
                "$ref": "#/components/schemas/CriarProdutoEstoqueRequestModel"
              },
              "seo": {
                "$ref": "#/components/schemas/SeoProdutoRequestModel"
              },
              "anexos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AnexoRequestModel"
                }
              },
              "grade": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "producao": {
                "$ref": "#/components/schemas/ProducaoProdutoRequestModel"
              },
              "kit": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProdutoKitRequestModel"
                }
              },
              "variacoes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VariacaoProdutoRequestModel"
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "CriarProdutoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "codigo": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DimensoesProdutoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "embalagem": {
            "$ref": "#/components/schemas/EmbalagemRequestModel"
          },
          "largura": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "altura": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "comprimento": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "diametro": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "pesoLiquido": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "pesoBruto": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "DimensoesProdutoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "embalagem": {
            "$ref": "#/components/schemas/EmbalagemResponseModel"
          },
          "largura": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "altura": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "comprimento": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "diametro": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "pesoLiquido": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "pesoBruto": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "quantidadeVolumes": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "EstoqueProdutoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "controlar": {
            "type": "boolean"
          },
          "sobEncomenda": {
            "type": "boolean"
          },
          "minimo": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "maximo": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "diasPreparacao": {
            "type": "integer",
            "nullable": true
          },
          "localizacao": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "EstoqueProdutoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "controlar": {
            "type": "boolean",
            "nullable": true
          },
          "sobEncomenda": {
            "type": "boolean",
            "nullable": true
          },
          "diasPreparacao": {
            "type": "integer",
            "nullable": true
          },
          "localizacao": {
            "type": "string",
            "nullable": true
          },
          "minimo": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "maximo": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "EstoqueVariacaoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "inicial": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "FornecedorProdutoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "codigoProdutoNoFornecedor": {
            "type": "string",
            "nullable": true
          },
          "padrao": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "FornecedorProdutoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "codigoProdutoNoFornecedor": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "GradeVariacaoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "chave": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "GradeVariacaoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "chave": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ListagemProdutoCustosResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "data": {
            "type": "string",
            "nullable": true
          },
          "saldoAtual": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "saldoAnterior": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "precoCusto": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "custoMedio": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "precoVenda": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "impostosRecuperaveis": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ListagemProdutosResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "sku": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          },
          "tipo": {
            "type": "string",
            "enum": [
              "K - Kit",
              "S - Simples",
              "V - Com Variacoes",
              "F - Fabricado",
              "M - Materia Prima"
            ],
            "example": "K"
          },
          "situacao": {
            "type": "string",
            "enum": [
              "A - Ativo",
              "I - Inativo",
              "E - Excluido"
            ],
            "example": "A"
          },
          "dataCriacao": {
            "type": "string",
            "nullable": true
          },
          "dataAlteracao": {
            "type": "string",
            "nullable": true
          },
          "unidade": {
            "type": "string"
          },
          "gtin": {
            "type": "string"
          },
          "precos": {
            "$ref": "#/components/schemas/PrecoProdutoResponseModel"
          }
        },
        "type": "object"
      },
      "MarcaProdutoModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "MedicamentoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "codigoAnvisa": {
            "type": "string",
            "nullable": true
          },
          "valorMaximo": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "motivoIsenscao": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ObterProdutoModelResponse": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProdutoResponseModel"
          },
          {
            "properties": {
              "descricaoComplementar": {
                "type": "string",
                "nullable": true
              },
              "tipo": {
                "type": "string",
                "enum": [
                  "K - Kit",
                  "S - Simples",
                  "V - Com Variacoes",
                  "F - Fabricado",
                  "M - Materia Prima"
                ],
                "example": "K",
                "nullable": true
              },
              "situacao": {
                "type": "string",
                "enum": [
                  "A - Ativo",
                  "I - Inativo",
                  "E - Excluido"
                ],
                "example": "A",
                "nullable": true
              },
              "produtoPai": {
                "$ref": "#/components/schemas/ProdutoResponseModel"
              },
              "unidade": {
                "type": "string",
                "nullable": true
              },
              "unidadePorCaixa": {
                "type": "string",
                "nullable": true
              },
              "ncm": {
                "type": "string",
                "nullable": true
              },
              "gtin": {
                "type": "string",
                "nullable": true
              },
              "origem": {
                "type": "string",
                "enum": [
                  "0 - Nacional Exceto Codigo 3 A 5",
                  "4 - Nacional Producao Conforme Ajustes",
                  "5 - Nacional Conteudo Importacao Inferior 40",
                  "3 - Nacional Conteudo Importacao Superior 40",
                  "8 - Nacional Conteudo Importacao Superior 70",
                  "1 - Estrangeira Importacao Direta Exceto Codigo 6",
                  "6 - Estrangeira Importacao Direta Sem Similar",
                  "2 - Estrangeira Adquirida Mercado Interno",
                  "7 - Estrangeira Adquirida Mercado Interno Sem Similar"
                ],
                "example": "0"
              },
              "garantia": {
                "type": "string",
                "nullable": true
              },
              "observacoes": {
                "type": "string",
                "nullable": true
              },
              "categoria": {
                "$ref": "#/components/schemas/CategoriaResponseModel"
              },
              "marca": {
                "$ref": "#/components/schemas/MarcaResponseModel"
              },
              "dimensoes": {
                "$ref": "#/components/schemas/DimensoesProdutoResponseModel"
              },
              "precos": {
                "$ref": "#/components/schemas/PrecoProdutoResponseModel"
              },
              "estoque": {
                "$ref": "#/components/schemas/EstoqueProdutoResponseModel"
              },
              "fornecedores": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FornecedorProdutoResponseModel"
                },
                "nullable": true
              },
              "seo": {
                "$ref": "#/components/schemas/SeoProdutoModelResponse"
              },
              "tributacao": {
                "$ref": "#/components/schemas/TributacaoProdutoResponseModel"
              },
              "anexos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AnexoResponseModel"
                }
              },
              "variacoes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VariacaoProdutoResponseModel"
                }
              },
              "kit": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProdutoKitResponseModel"
                }
              },
              "producao": {
                "$ref": "#/components/schemas/ProducaoProdutoResponseModel"
              }
            },
            "type": "object"
          }
        ]
      },
      "ObterTagsProdutoModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagProdutoModelResponse"
            },
            "nullable": true
          }
        },
        "type": "object"
      },
      "PrecoProdutoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "preco": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "precoPromocional": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "precoCusto": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "PrecoProdutoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "preco": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "precoPromocional": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "precoCusto": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "precoCustoMedio": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "PrecoVariacaoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "preco": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "precoPromocional": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ProducaoProdutoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "produtos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProdutoFabricadoRequestModel"
            }
          },
          "etapas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "ProducaoProdutoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "produtos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProdutoFabricadoResponseModel"
            }
          },
          "etapas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "ProdutoFabricadoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "produto": {
            "$ref": "#/components/schemas/ProdutoRequestModel"
          },
          "quantidade": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ProdutoFabricadoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "produto": {
            "$ref": "#/components/schemas/ProdutoResponseModel"
          },
          "quantidade": {
            "type": "number",
            "format": "float"
          }
        },
        "type": "object"
      },
      "ProdutoKitRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "produto": {
            "$ref": "#/components/schemas/ProdutoRequestModel"
          },
          "quantidade": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ProdutoKitResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "produto": {
            "$ref": "#/components/schemas/ProdutoResponseModel"
          },
          "quantidade": {
            "type": "number",
            "format": "float"
          }
        },
        "type": "object"
      },
      "ProdutoModel": {
        "title": " ",
        "description": " ",
        "required": [
          "sku"
        ],
        "properties": {
          "sku": {
            "type": "string",
            "nullable": true
          },
          "descricaoComplementar": {
            "type": "string",
            "nullable": true
          },
          "unidade": {
            "type": "string",
            "nullable": true
          },
          "unidadePorCaixa": {
            "type": "string",
            "nullable": true
          },
          "ncm": {
            "type": "string",
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "nullable": true
          },
          "origem": {
            "type": "integer",
            "nullable": true
          },
          "codigoEspecificadorSubstituicaoTributaria": {
            "type": "string",
            "nullable": true
          },
          "garantia": {
            "type": "string",
            "nullable": true
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          },
          "marca": {
            "$ref": "#/components/schemas/MarcaRequestModel"
          },
          "categoria": {
            "$ref": "#/components/schemas/CategoriaRequestModel"
          },
          "precos": {
            "$ref": "#/components/schemas/PrecoProdutoRequestModel"
          },
          "dimensoes": {
            "$ref": "#/components/schemas/DimensoesProdutoRequestModel"
          },
          "tributacao": {
            "$ref": "#/components/schemas/TributacaoProdutoRequestModel"
          },
          "seo": {
            "$ref": "#/components/schemas/SeoProdutoRequestModel"
          },
          "fornecedores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FornecedorProdutoRequestModel"
            }
          }
        },
        "type": "object"
      },
      "ProdutoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ProdutoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "SeoProdutoModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "titulo": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "linkVideo": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "SeoProdutoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "titulo": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "linkVideo": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "TagProdutoModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "TributacaoProdutoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "gtinEmbalagem": {
            "type": "string",
            "nullable": true
          },
          "valorIPIFixo": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "classeIPI": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "TributacaoProdutoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "gtinEmbalagem": {
            "type": "string",
            "nullable": true
          },
          "valorIPIFixo": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "classeIPI": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "VariacaoProdutoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "sku": {
            "type": "string",
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "nullable": true
          },
          "precos": {
            "$ref": "#/components/schemas/PrecoVariacaoRequestModel"
          },
          "estoque": {
            "$ref": "#/components/schemas/EstoqueVariacaoRequestModel"
          },
          "grade": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GradeVariacaoRequestModel"
            },
            "nullable": true
          }
        },
        "type": "object"
      },
      "VariacaoProdutoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "nullable": true
          },
          "precos": {
            "$ref": "#/components/schemas/PrecoProdutoResponseModel"
          },
          "estoque": {
            "$ref": "#/components/schemas/EstoqueProdutoResponseModel"
          },
          "grade": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GradeVariacaoRequestModel"
            },
            "nullable": true
          }
        },
        "type": "object"
      },
      "AlterarSituacaoSeparacaoModelRequest": {
        "title": " ",
        "description": " ",
        "properties": {
          "situacao": {
            "type": "integer",
            "enum": [
              "1 - Sit Aguardando Separacao",
              "2 - Sit Separada",
              "3 - Sit Embalada",
              "4 - Sit Em Separacao"
            ],
            "example": "1",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ItemSeparacaoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "produto": {
            "$ref": "#/components/schemas/ProdutoResponseModel"
          },
          "quantidade": {
            "type": "number",
            "format": "float"
          },
          "unidade": {
            "type": "string"
          },
          "localizacao": {
            "type": "string"
          },
          "infoAdicional": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListagemSeparacaoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "situacao": {
            "type": "string",
            "enum": [
              "1 - Sit Aguardando Separacao",
              "2 - Sit Separada",
              "3 - Sit Embalada",
              "4 - Sit Em Separacao"
            ],
            "example": "1"
          },
          "dataCriacao": {
            "type": "string",
            "nullable": true
          },
          "dataSeparacao": {
            "type": "string",
            "nullable": true
          },
          "dataCheckout": {
            "type": "string",
            "nullable": true
          },
          "cliente": {
            "$ref": "#/components/schemas/ContatoModelResponse"
          },
          "venda": {
            "$ref": "#/components/schemas/SeparacaoVendaResponseModel"
          },
          "notaFiscal": {
            "$ref": "#/components/schemas/SeparacaoNotaResponseModel"
          },
          "ecommerce": {
            "$ref": "#/components/schemas/EcommerceResponseModel"
          },
          "formaEnvio": {
            "$ref": "#/components/schemas/FormaEnvioResponseModel"
          }
        },
        "type": "object"
      },
      "ObterSeparacaoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "situacao": {
            "type": "integer",
            "enum": [
              "1 - Sit Aguardando Separacao",
              "2 - Sit Separada",
              "3 - Sit Embalada",
              "4 - Sit Em Separacao"
            ],
            "example": "1",
            "nullable": true
          },
          "situacaoCheckout": {
            "type": "integer",
            "enum": [
              "1 - Sit Checkout Disponivel",
              "2 - Sit Checkout Bloqueado"
            ],
            "example": "1",
            "nullable": true
          },
          "dataCriacao": {
            "type": "string",
            "nullable": true
          },
          "dataSeparacao": {
            "type": "string",
            "nullable": true
          },
          "dataCheckout": {
            "type": "string",
            "nullable": true
          },
          "cliente": {
            "$ref": "#/components/schemas/ContatoModelResponse"
          },
          "venda": {
            "$ref": "#/components/schemas/SeparacaoVendaResponseModel"
          },
          "notaFiscal": {
            "$ref": "#/components/schemas/SeparacaoNotaResponseModel"
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemSeparacaoResponseModel"
            },
            "nullable": true
          },
          "ecommerce": {
            "$ref": "#/components/schemas/EcommerceResponseModel"
          },
          "formaEnvio": {
            "$ref": "#/components/schemas/FormaEnvioResponseModel"
          },
          "volumes": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "SeparacaoNotaResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "numero": {
            "type": "integer",
            "nullable": true
          },
          "dataEmissao": {
            "type": "string",
            "nullable": true
          },
          "situacao": {
            "type": "integer",
            "enum": [
              "1 - Pendente",
              "2 - Emitida",
              "3 - Cancelada",
              "4 - Enviada Aguardando Recibo",
              "5 - Rejeitada",
              "6 - Autorizada",
              "7 - Emitida Danfe",
              "8 - Registrada",
              "9 - Enviada Aguardando Protocolo",
              "10 - Denegada"
            ],
            "example": "1",
            "nullable": true
          }
        },
        "type": "object"
      },
      "SeparacaoVendaResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "numero": {
            "type": "integer",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "situacao": {
            "type": "integer",
            "enum": [
              "8 - Dados Incompletos",
              "0 - Aberta",
              "3 - Aprovada",
              "4 - Preparando Envio",
              "1 - Faturada",
              "7 - Pronto Envio",
              "5 - Enviada",
              "6 - Entregue",
              "2 - Cancelada",
              "9 - Nao Entregue"
            ],
            "example": "8",
            "nullable": true
          }
        },
        "type": "object"
      },
      "AtualizarServicoRequestModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseServicoRequestModel"
          },
          {
            "properties": {
              "nome": {
                "type": "string",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "BaseServicoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "preco": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "unidade": {
            "type": "string",
            "nullable": true
          },
          "situacao": {
            "type": "string",
            "enum": [
              "A - Ativo",
              "I - Inativo",
              "E - Excluido"
            ],
            "example": "A",
            "nullable": true
          },
          "tipoItemSped": {
            "type": "string",
            "enum": [
              "00 - Mercadoria Para Revenda",
              "01 - Materia Prima",
              "02 - Embalagem",
              "03 - Produto Em Processo",
              "04 - Produto Acabado",
              "05 - Subproduto",
              "06 - Produto Intermediario",
              "07 - Material Uso Consumo",
              "08 - Ativo Imobilizado",
              "09 - Servicos",
              "10 - Outros Insumos",
              "99 - Outras"
            ],
            "example": "00",
            "nullable": true
          },
          "codigoListaServicos": {
            "type": "string",
            "nullable": true
          },
          "nbs": {
            "type": "string",
            "nullable": true
          },
          "descricaoComplementar": {
            "type": "string",
            "nullable": true
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "CriarServicoRequestModel": {
        "title": " ",
        "description": " ",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseServicoRequestModel"
          },
          {
            "properties": {
              "nome": {
                "type": "string",
                "nullable": true
              }
            },
            "type": "object"
          }
        ]
      },
      "ServicoRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ServicoResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "codigo": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServicosModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "preco": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "situacao": {
            "type": "string",
            "nullable": true
          },
          "descricaoComplementar": {
            "type": "string",
            "nullable": true
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          },
          "unidade": {
            "type": "string",
            "nullable": true
          },
          "tipoItemSped": {
            "type": "string",
            "nullable": true
          },
          "nbs": {
            "type": "string",
            "nullable": true
          },
          "codigoListaServicos": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "TransportadorRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "fretePorConta": {
            "type": "string",
            "enum": [
              "R - Remetente",
              "D - Destinatario",
              "T - Terceiros",
              "3 - Proprio Remetente",
              "4 - Proprio Destinatario",
              "S - Sem Transporte"
            ],
            "example": "R",
            "nullable": true
          },
          "formaEnvio": {
            "$ref": "#/components/schemas/FormaEnvioRequestModel"
          },
          "formaFrete": {
            "$ref": "#/components/schemas/FormaFreteRequestModel"
          },
          "codigoRastreamento": {
            "type": "string",
            "nullable": true
          },
          "urlRastreamento": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "TransportadorResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "fretePorConta": {
            "type": "string",
            "enum": [
              "R - Remetente",
              "D - Destinatario",
              "T - Terceiros",
              "3 - Proprio Remetente",
              "4 - Proprio Destinatario",
              "S - Sem Transporte"
            ],
            "example": "R",
            "nullable": true
          },
          "formaEnvio": {
            "$ref": "#/components/schemas/FormaEnvioResponseModel"
          },
          "formaFrete": {
            "$ref": "#/components/schemas/FormaFreteResponseModel"
          },
          "codigoRastreamento": {
            "type": "string",
            "nullable": true
          },
          "urlRastreamento": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "ListagemVendedoresModelResponse": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "contato": {
            "$ref": "#/components/schemas/ContatoModelResponse"
          }
        },
        "type": "object"
      },
      "VendedorRequestModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VendedorResponseModel": {
        "title": " ",
        "description": " ",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      }
    },
    "parameters": {
      "descricaoCategoriasReceitaDespesa": {
        "name": "descricao",
        "in": "query",
        "description": "Pesquisa por descrição completa da categorias de receita e despesa",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "grupoCategoriasReceitaDespesa": {
        "name": "grupo",
        "in": "query",
        "description": "Pesquisa por grupo de categorias de receita e despesa",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nomeClienteContasPagar": {
        "name": "nomeCliente",
        "in": "query",
        "description": "Pesquisa por nome do cliente de contas a pagar",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "situacaoContasPagar": {
        "name": "situacao",
        "in": "query",
        "description": "Pesquisa por situação de contas a pagar",
        "required": false,
        "schema": {
          "enum": [
            "aberto - Aberto",
            "cancelada - Cancelada",
            "pago - Pago",
            "parcial - Parcial",
            "prevista - Prevista"
          ]
        },
        "example": "aberto"
      },
      "dataInicialEmissaoContasPagar": {
        "name": "dataInicialEmissao",
        "in": "query",
        "description": "Pesquisa por data inicial da emissão de contas a pagar",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2024-01-01"
        }
      },
      "dataFinalEmissaoContasPagar": {
        "name": "dataFinalEmissao",
        "in": "query",
        "description": "Pesquisa por data final da emissão de contas a pagar",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2024-01-01"
        }
      },
      "dataInicialVencimentoContasPagar": {
        "name": "dataInicialVencimento",
        "in": "query",
        "description": "Pesquisa por data inicial do vencimento de contas a pagar",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2024-01-01"
        }
      },
      "dataFinalVencimentoContasPagar": {
        "name": "dataFinalVencimento",
        "in": "query",
        "description": "Pesquisa por data final do vencimento de contas a pagar",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2024-01-01"
        }
      },
      "numeroDocumentoContasPagar": {
        "name": "numeroDocumento",
        "in": "query",
        "description": "Pesquisa por número do documento de contas a pagar",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "numeroBancoContasPagar": {
        "name": "numeroBanco",
        "in": "query",
        "description": "Pesquisa por número do banco de contas a pagar",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "marcadoresContaPagar": {
        "name": "marcadores",
        "in": "query",
        "description": "Pesquisa por marcadores",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "idContatoContaPagar": {
        "name": "idContato",
        "in": "query",
        "description": "Pesquisa por ID do contato de contas a pagar",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "example": 123
      },
      "nomeClienteContasReceber": {
        "name": "nomeCliente",
        "in": "query",
        "description": "Pesquisa por nome do cliente de contas a receber",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "situacaoContasReceber": {
        "name": "situacao",
        "in": "query",
        "description": "Pesquisa por situação de contas a receber",
        "required": false,
        "schema": {
          "enum": [
            "aberto - Aberto",
            "cancelada - Cancelada",
            "pago - Pago",
            "parcial - Parcial",
            "prevista - Prevista"
          ]
        },
        "example": "aberto"
      },
      "dataInicialEmissaoContasReceber": {
        "name": "dataInicialEmissao",
        "in": "query",
        "description": "Pesquisa por data inicial da emissão de contas a receber",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2024-01-01"
        }
      },
      "dataFinalEmissaoContasReceber": {
        "name": "dataFinalEmissao",
        "in": "query",
        "description": "Pesquisa por data final da emissão de contas a receber",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2024-01-01"
        }
      },
      "dataInicialVencimentoContasReceber": {
        "name": "dataInicialVencimento",
        "in": "query",
        "description": "Pesquisa por data inicial do vencimento de contas a receber",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2024-01-01"
        }
      },
      "dataFinalVencimentoContasReceber": {
        "name": "dataFinalVencimento",
        "in": "query",
        "description": "Pesquisa por data final do vencimento de contas a receber",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2024-01-01"
        }
      },
      "numeroDocumentoContasReceber": {
        "name": "numeroDocumento",
        "in": "query",
        "description": "Pesquisa por número do documento de contas a receber",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "numeroBancoContasReceber": {
        "name": "numeroBanco",
        "in": "query",
        "description": "Pesquisa por número do banco de contas a receber",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "idNotaContasReceber": {
        "name": "idNota",
        "in": "query",
        "description": "Pesquisa por identificador da nota de contas a receber",
        "required": false,
        "schema": {
          "type": "int"
        }
      },
      "idVendaContasReceber": {
        "name": "idVenda",
        "in": "query",
        "description": "Pesquisa por identificador da venda de contas a receber",
        "required": false,
        "schema": {
          "type": "int"
        }
      },
      "marcadoresContaReceber": {
        "name": "marcadores",
        "in": "query",
        "description": "Pesquisa por marcadores",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "nomeContato": {
        "name": "nome",
        "in": "query",
        "description": "Pesquisa por nome parcial ou completo",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "codigoContato": {
        "name": "codigo",
        "in": "query",
        "description": "Pesquisa por codigo completo",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "situacaoContato": {
        "name": "situacao",
        "in": "query",
        "description": "Pesquisa por situacao",
        "required": false,
        "schema": {
          "enum": [
            "B - Ativo",
            "A - Ativo Com Acesso Sistema",
            "I - Inativo",
            "E - Excluido"
          ]
        },
        "example": "B"
      },
      "idVendedorContato": {
        "name": "idVendedor",
        "in": "query",
        "description": "Pesquisa por vendedor padrão",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "cpfCnpjContato": {
        "name": "cpfCnpj",
        "in": "query",
        "description": "Pesquisa por CPF ou CNPJ",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "celularContato": {
        "name": "celular",
        "in": "query",
        "description": "Pesquisa pelo celular",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "dataCriacaoContato": {
        "name": "dataCriacao",
        "in": "query",
        "description": "Pesquisa por data de criação",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2023-01-01 10:00:00"
        }
      },
      "dataAtualizacaoContato": {
        "name": "dataAtualizacao",
        "in": "query",
        "description": "Pesquisa por data de atualização",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2023-01-01 10:00:00"
        }
      },
      "nomeTipoContato": {
        "name": "nome",
        "in": "query",
        "description": "Pesquisa por nome parcial ou completo do tipo de contato",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "idFormaEnvioAgrupamento": {
        "name": "idFormaEnvio",
        "in": "query",
        "description": "Pesquisa através do identificador da forma de envio",
        "required": false,
        "schema": {
          "type": "int"
        }
      },
      "dataInicialAgrupamento": {
        "name": "dataInicial",
        "in": "query",
        "description": "Pesquisa através da data inicial dos agrupamentos",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2024-01-01"
        }
      },
      "dataFinaAgrupamento": {
        "name": "dataFinal",
        "in": "query",
        "description": "Pesquisa através da data final dos agrupamentos",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2024-01-01"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Limite da paginação",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 100
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "Offset da paginação",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 0
        }
      },
      "orderBy": {
        "name": "orderBy",
        "in": "query",
        "description": "Define a ordenação da listagem por ordem crescente ou decrescente",
        "required": false,
        "schema": {
          "enum": [
            "asc - Crescente",
            "desc - Descrescente"
          ]
        },
        "example": "asc"
      },
      "nomeFormaEnvio": {
        "name": "nome",
        "in": "query",
        "description": "Pesquisa por nome parcial ou completo da forma de envio",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "tipoFormaEnvio": {
        "name": "tipo",
        "in": "query",
        "description": "Pesquisa por tipo de forma de envio",
        "required": false,
        "schema": {
          "enum": [
            "0 - Sem Frete",
            "1 - Correios",
            "2 - Transportadora",
            "3 - Mercado Envios",
            "4 - B2w Entrega",
            "5 - Correios Ff",
            "6 - Customizado",
            "7 - Jadlog",
            "8 - Totalexpress",
            "9 - Olist",
            "10 - Gateway",
            "11 - Magalu Entregas",
            "12 - Shopee Envios",
            "13 - Ns Entregas",
            "14 - Viavarejo Envvias",
            "15 - Madeira Envios",
            "16 - Ali Envios",
            "17 - Loggi",
            "18 - Conecta La Etiquetas",
            "19 - Amazon Dba",
            "20 - Magalu Fulfillment",
            "21 - Ns Magalu Entregas",
            "22 - Shein Envios",
            "23 - Mandae",
            "24 - Olist Envios",
            "25 - Kwai Envios",
            "26 - Beleza Envios"
          ]
        },
        "example": "0"
      },
      "situacaoFormaEnvio": {
        "name": "situacao",
        "in": "query",
        "description": "Pesquisa por situação da forma de envio",
        "required": false,
        "schema": {
          "enum": [
            "0 - Sem Frete",
            "1 - Correios",
            "2 - Transportadora",
            "3 - Mercado Envios",
            "4 - B2w Entrega",
            "5 - Correios Ff",
            "6 - Customizado",
            "7 - Jadlog",
            "8 - Totalexpress",
            "9 - Olist",
            "10 - Gateway",
            "11 - Magalu Entregas",
            "12 - Shopee Envios",
            "13 - Ns Entregas",
            "14 - Viavarejo Envvias",
            "15 - Madeira Envios",
            "16 - Ali Envios",
            "17 - Loggi",
            "18 - Conecta La Etiquetas",
            "19 - Amazon Dba",
            "20 - Magalu Fulfillment",
            "21 - Ns Magalu Entregas",
            "22 - Shein Envios",
            "23 - Mandae",
            "24 - Olist Envios",
            "25 - Kwai Envios",
            "26 - Beleza Envios"
          ]
        },
        "example": "0"
      },
      "nomeFormaPagamento": {
        "name": "nome",
        "in": "query",
        "description": "Pesquisa por nome parcial ou completo da forma de pagamento",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "situacaoFormaPagamento": {
        "name": "situacao",
        "in": "query",
        "description": "Pesquisa por situação da forma de pagamento",
        "required": false,
        "schema": {
          "enum": [
            "1 - Habilitada",
            "2 - Desabilitada"
          ]
        },
        "example": "1"
      },
      "nomeIntermediador": {
        "name": "nome",
        "in": "query",
        "description": "Pesquisa por nome parcial ou completo do intermediador",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "cnpjIntermediador": {
        "name": "cnpj",
        "in": "query",
        "description": "Pesquisa por cnpj do intermediador",
        "required": false
      },
      "nomeListaPreco": {
        "name": "nome",
        "in": "query",
        "description": "Pesquisa por nome parcial ou completo da lista de preços",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "descricaoMarca": {
        "name": "descricao",
        "in": "query",
        "description": "Pesquisa por descrição completa da marca",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "tipoNota": {
        "name": "tipo",
        "in": "query",
        "description": "Pesquisa por tipo de nota",
        "required": false,
        "schema": {
          "enum": [
            "E - Entrada",
            "S - Saida"
          ]
        },
        "example": "E"
      },
      "numeroNota": {
        "name": "numero",
        "in": "query",
        "description": "Pesquisa por número da nota",
        "required": false,
        "schema": {
          "type": "int"
        }
      },
      "cpfCnpjNota": {
        "name": "cpfCnpj",
        "in": "query",
        "description": "Pesquisa por CPF ou CNPJ",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "dataInicialNota": {
        "name": "dataInicial",
        "in": "query",
        "description": "Pesquisa por data de criação",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2023-01-01"
        }
      },
      "dataFinalNota": {
        "name": "dataFinal",
        "in": "query",
        "description": "Pesquisa por data de criação",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2023-01-01"
        }
      },
      "situacaoNota": {
        "name": "situacao",
        "in": "query",
        "description": "Pesquisa pela situacão da nota",
        "required": false,
        "schema": {
          "enum": [
            "1 - Pendente",
            "2 - Emitida",
            "3 - Cancelada",
            "4 - Enviada Aguardando Recibo",
            "5 - Rejeitada",
            "6 - Autorizada",
            "7 - Emitida Danfe",
            "8 - Registrada",
            "9 - Enviada Aguardando Protocolo",
            "10 - Denegada"
          ]
        },
        "example": "1"
      },
      "numeroPedidoEcommerce": {
        "name": "numeroPedidoEcommerce",
        "in": "query",
        "description": "Pesquisa pelo número do pedido no e-commerce",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "idVendedorNota": {
        "name": "idVendedor",
        "in": "query",
        "description": "Pesquisa por identificador do vendedor",
        "required": false,
        "schema": {
          "type": "int"
        }
      },
      "idFormaEnvioNota": {
        "name": "idFormaEnvio",
        "in": "query",
        "description": "Pesquisa por identificador da forma de envio",
        "required": false,
        "schema": {
          "type": "int"
        }
      },
      "marcadoresNota": {
        "name": "marcadores",
        "in": "query",
        "description": "Pesquisa por marcadores",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "numeroOrdemCompra": {
        "name": "numero",
        "in": "query",
        "description": "Pesquisa através do número da ordem de compra",
        "required": false,
        "schema": {
          "type": "int"
        }
      },
      "dataInicialOrdemCompra": {
        "name": "dataInicial",
        "in": "query",
        "description": "Pesquisa através da data de criação da ordem de compra",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "dataFinalOrdemCompra": {
        "name": "dataFinal",
        "in": "query",
        "description": "Pesquisa através da data de criação da ordem de compra",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "marcadoresOrdemCompra": {
        "name": "marcadores",
        "in": "query",
        "description": "Pesquisa através dos marcadores da ordem de compra",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "nomeFornecedorOrdemCompra": {
        "name": "nomeFornecedor",
        "in": "query",
        "description": "Pesquisa através do nome do fornecedor da ordem de compra",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "codigoFornecedorOrdemCompra": {
        "name": "codigoFornecedor",
        "in": "query",
        "description": "Pesquisa através do código do fornecedor da ordem de compra",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "situacaoOrdemCompra": {
        "name": "situacao",
        "in": "query",
        "description": "Pesquisa através da situação da ordem de compra",
        "required": false,
        "schema": {
          "enum": [
            "0 - Em Aberto",
            "1 - Atendido",
            "2 - Cancelado",
            "3 - Em Andamento"
          ]
        },
        "example": "0"
      },
      "nomeClienteOrdemServico": {
        "name": "nomeCliente",
        "in": "query",
        "description": "Pesquisa por nome do cliente de ordem de servico",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "situacaoOrdemServico": {
        "name": "situacao",
        "in": "query",
        "description": "Pesquisa por situação de ordem de servico",
        "required": false,
        "schema": {
          "enum": [
            "4 - Nao Aprovada",
            "3 - Finalizada",
            "0 - Em Aberto",
            "2 - Serv Concluido",
            "1 - Orcada",
            "5 - Aprovada",
            "6 - Em Andamento",
            "7 - Cancelada"
          ]
        },
        "example": "4"
      },
      "dataInicialEmissaoOrdemServico": {
        "name": "dataInicialEmissao",
        "in": "query",
        "description": "Pesquisa por data inicial da emissão de ordem de servico",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2024-01-01"
        }
      },
      "dataFinalEmissaoOrdemServico": {
        "name": "dataFinalEmissao",
        "in": "query",
        "description": "Pesquisa por data final da emissão de ordem de servico",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2024-01-01"
        }
      },
      "numeroOrdemServico": {
        "name": "numeroOrdemServico",
        "in": "query",
        "description": "Pesquisa por número de ordem de servico",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "marcadoresOrdemServico": {
        "name": "marcadores",
        "in": "query",
        "description": "Pesquisa por marcadores",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "idContatoOrdemServico": {
        "name": "idContato",
        "in": "query",
        "description": "Pesquisa por ID do contato de ordem de servico",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "example": 123
      },
      "numeroPedido": {
        "name": "numero",
        "in": "query",
        "description": "Pesquisa por número do pedido",
        "required": false,
        "schema": {
          "type": "int"
        }
      },
      "nomeClientePedido": {
        "name": "nomeCliente",
        "in": "query",
        "description": "Pesquisa por nome do cliente",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "codigoClientePedido": {
        "name": "codigoCliente",
        "in": "query",
        "description": "Pesquisa por código do cliente",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "cpfCnpjClientePedido": {
        "name": "cnpj",
        "in": "query",
        "description": "Pesquisa por CPF/CNPJ do cliente",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "dataInicialPedido": {
        "name": "dataInicial",
        "in": "query",
        "description": "Pesquisa através da data de criação do pedido",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "dataFinalPedido": {
        "name": "dataFinal",
        "in": "query",
        "description": "Pesquisa através da data de criação do pedido",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "dataAtualizacaoPedido": {
        "name": "dataAtualizacao",
        "in": "query",
        "description": "Pesquisa através da data de atualização do pedido",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "situacaoPedido": {
        "name": "situacao",
        "in": "query",
        "description": "Pesquisa com base na situação informada",
        "required": false,
        "schema": {
          "enum": [
            "8 - Dados Incompletos",
            "0 - Aberta",
            "3 - Aprovada",
            "4 - Preparando Envio",
            "1 - Faturada",
            "7 - Pronto Envio",
            "5 - Enviada",
            "6 - Entregue",
            "2 - Cancelada",
            "9 - Nao Entregue"
          ]
        },
        "example": "8"
      },
      "numeroPedidoEcommercePedido": {
        "name": "numeroPedidoEcommerce",
        "in": "query",
        "description": "Pesquisa por número do pedido no e-commerce",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "idVendedorPedido": {
        "name": "idVendedor",
        "in": "query",
        "description": "Pesquisa por id do vendedor",
        "required": false,
        "schema": {
          "type": "int"
        }
      },
      "marcadoresPedido": {
        "name": "marcadores",
        "in": "query",
        "description": "Pesquisa por marcadores",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "dataInicialCustoProduto": {
        "name": "dataInicial",
        "in": "query",
        "description": "Especifica a data de início para a filtragem dos custos do produto.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2023-01-01"
        }
      },
      "dataFinalCustoProduto": {
        "name": "dataFinal",
        "in": "query",
        "description": "Especifica a data de fim para a filtragem dos custos do produto.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2023-01-01"
        }
      },
      "nomeProduto": {
        "name": "nome",
        "in": "query",
        "description": "Pesquisa por nome parcial ou completo do produto",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "codigoProduto": {
        "name": "codigo",
        "in": "query",
        "description": "Pesquisa pelo código do produto",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "gtin": {
        "name": "gtin",
        "in": "query",
        "description": "Pesquisa através do código GTIN do produto",
        "required": false,
        "schema": {
          "type": "int"
        }
      },
      "situacao": {
        "name": "situacao",
        "in": "query",
        "description": "Pesquisa com base na situação informada",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "dataCriacao": {
        "name": "dataCriacao",
        "in": "query",
        "description": "Pesquisa através da data de criação do produto",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2023-01-01 10:00:00"
        }
      },
      "dataAlteracao": {
        "name": "dataAlteracao",
        "in": "query",
        "description": "Pesquisa através da data de última alteração do produto",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2023-01-01 10:00:00"
        }
      },
      "situacaoSeparacao": {
        "name": "situacao",
        "in": "query",
        "description": "Pesquisa por situacao da separação.",
        "required": false,
        "schema": {
          "enum": [
            "1 - Sit Aguardando Separacao",
            "2 - Sit Separada",
            "3 - Sit Embalada",
            "4 - Sit Em Separacao"
          ]
        },
        "example": "1"
      },
      "idFormaEnvio": {
        "name": "idFormaEnvio",
        "in": "query",
        "description": "Pesquisa através do identificador da forma de envio.",
        "required": false,
        "schema": {
          "type": "int"
        }
      },
      "dataInicialVenda": {
        "name": "dataInicial",
        "in": "query",
        "description": "Pesquisa através da data inicial dos pedidos.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2023-01-01"
        }
      },
      "dataFinalVenda": {
        "name": "dataFinal",
        "in": "query",
        "description": "Pesquisa através da data final dos pedidos.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "2023-01-01"
        }
      },
      "nome": {
        "name": "nome",
        "in": "query",
        "description": "Pesquisa pelo nome do serviço",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "codigo": {
        "name": "codigo",
        "in": "query",
        "description": "Pesquisa pelo código do serviço",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "situacaoServico": {
        "name": "situacao",
        "in": "query",
        "description": "Pesquisa com base na situação informada",
        "required": false,
        "schema": {
          "enum": [
            "A - Ativo",
            "I - Inativo",
            "E - Excluido"
          ]
        },
        "example": "A"
      },
      "nomeVendedor": {
        "name": "nome",
        "in": "query",
        "description": "Pesquisa por nome parcial ou completo",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "codigoVendedor": {
        "name": "codigo",
        "in": "query",
        "description": "Pesquisa por codigo completo",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    }
  }
}
