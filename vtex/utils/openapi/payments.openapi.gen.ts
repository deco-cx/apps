
// deno-fmt-ignore-file
// deno-lint-ignore-file no-explicit-any ban-types ban-unused-ignore
//
// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// To generate this file: deno task start
//        


export interface OpenAPI {
/**
 * Returns the best installment options according to the parameters informed in the request.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **View Payment Data** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/pvt/installments": {
searchParams: {
/**
 * Value to be divided into installments.
 */
"request.value": number
/**
 * Sales channel identification. Attribute created by the seller in their VTEX store configuration.
 */
"request.salesChannel"?: number
/**
 * Payment system identification.
 */
"request.paymentDetails[0].id"?: number
/**
 * Total value paid in installments. If applied in the search, it must be equal to the `request.value` field.
 */
"request.paymentDetails[0].value"?: number
/**
 * First six digits of the card number.
 */
"request.paymentDetails[0].bin"?: number
}
/**
 * Installments options response body information.
 */
response: {
/**
 * Value to be paid in installments.
 */
value: number
/**
 * Installments information.
 */
installments: {
/**
 * Payment system information.
 */
payment: {
/**
 * Payment system identification.
 */
id: number
/**
 * Payment system name.
 */
name: (null | string)
/**
 * First six digits of the card number.
 */
bin: (null | string)
/**
 * Value to be paid in installments.
 */
value: number
/**
 * Indicates whether the payment system is automatically applied by default.
 */
isDefault: boolean
/**
 * Object containing the payment system reference route.
 */
self: {
/**
 * Payment system reference route.
 */
href: string
}
}
/**
 * Array containing information about installment options.
 */
options: {
/**
 * Rule identification.
 */
ruleId: (null | string)
/**
 * Number of installments.
 */
quantity: number
/**
 * Value of each installment.
 */
value: number
/**
 * Interest rate (percent 0.1 = 10%).
 */
interestRate: number
/**
 * Indicates the external installment system (if applicable).
 */
isExternalInstallmentService: (null | number)
/**
 * Interest tax (percent 0.1 = 10%).
 */
interestTax: (null | number)
}[]
}[]
}
}
/**
 * Returns all affiliations (payment and anti-fraud providers) that are already configured in your store.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **View Payment Data** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/pvt/affiliations": {
response: {
/**
 * Provider identification.
 */
id?: string
/**
 * Provider implementation class name.
 */
implementation?: string
/**
 * Provider name.
 */
name?: string
/**
 * Array containing configuration information fields.
 */
configuration?: {
/**
 * Configuration parameter name.
 */
name: string
/**
 * Configuration parameter value.
 */
value: (null | string)
/**
 * Value key information.
 */
valueKey: (null | string)
}[]
/**
 * Indicates whether the provider is published and available for use.
 */
isdelivered?: boolean
/**
 * Indicates whether the provider is configured.
 */
isConfigured?: boolean
}[]
}
/**
 * Registers a new affiliation (payment or anti-fraud provider) in your store.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-ManageStore | **Manage Store** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/pvt/affiliations": {
/**
 * Insert new affiliation request body information.
 */
body: {
/**
 * Provider implementation class name.
 */
implementation: string
/**
 * Provider name.
 */
name: string
/**
 * Array containing provider configuration information.
 */
configuration: {
/**
 * Configuration parameter name.
 */
name: string
/**
 * Configuration parameter value.
 */
value: string
}[]
/**
 * Indicates whether the provider is published and available for use.
 */
isdelivered: boolean
/**
 * Indicates whether the provider is configured.
 */
isConfigured: boolean
}
/**
 * Affiliation by ID response body information.
 */
response: {
/**
 * Provider identification.
 */
id: string
/**
 * Provider implementation class name.
 */
implementation: string
/**
 * Provider name.
 */
name: string
/**
 * Array containing provider configuration information.
 */
configuration: {
/**
 * Configuration parameter name.
 */
name: string
/**
 * Configuration parameter value.
 */
value: string
/**
 * Value key information.
 */
valueKey: (null | string)
}[]
/**
 * Indicates whether the provider is published and available for use.
 */
isdelivered: boolean
/**
 * Indicates whether the provider is configured.
 */
isConfigured: boolean
}
}
/**
 * Returns data for a specific affiliation (payment or anti-fraud provider).
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **View Payment Data** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/pvt/affiliations/:affiliationId": {
/**
 * Affiliation by ID response body information.
 */
response: {
/**
 * Provider identification.
 */
id: string
/**
 * Provider implementation class name.
 */
implementation: string
/**
 * Provider name.
 */
name: string
/**
 * Array containing provider configuration information.
 */
configuration: {
/**
 * Configuration parameter name.
 */
name: string
/**
 * Configuration parameter value.
 */
value: string
/**
 * Value key information.
 */
valueKey: (null | string)
}[]
/**
 * Indicates whether the provider is published and available for use.
 */
isdelivered: boolean
/**
 * Indicates whether the provider is configured.
 */
isConfigured: boolean
}
}
/**
 * Updates information about an affiliation (payment or anti-fraud provider) configured in your store.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-ManageStore | **Manage Store** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"PUT /api/pvt/affiliations/:affiliationId": {
/**
 * Update affiliation by ID request body information.
 */
body: {
/**
 * Provider identification.
 */
id: string
/**
 * Provider implementation class name.
 */
implementation: string
/**
 * Provider name.
 */
name: string
/**
 * Array containing provider configuration information.
 */
configuration: {
/**
 * Configuration parameter name.
 */
name: string
/**
 * Configuration parameter value.
 */
value: string
/**
 * Value key information.
 */
valueKey: (null | string)
}[]
/**
 * Indicates whether the provider is published and available for use.
 */
isdelivered: boolean
/**
 * Indicates whether the provider is configured.
 */
isConfigured: boolean
}
/**
 * Affiliation by ID response body information.
 */
response: {
/**
 * Provider identification.
 */
id: string
/**
 * Provider implementation class name.
 */
implementation: string
/**
 * Provider name.
 */
name: string
/**
 * Array containing provider configuration information.
 */
configuration: {
/**
 * Configuration parameter name.
 */
name: string
/**
 * Configuration parameter value.
 */
value: string
/**
 * Value key information.
 */
valueKey: (null | string)
}[]
/**
 * Indicates whether the provider is published and available for use.
 */
isdelivered: boolean
/**
 * Indicates whether the provider is configured.
 */
isConfigured: boolean
}
}
/**
 * Returns all payment rules applied to the payment providers configured in your store.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **View Payment Data** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/pvt/rules": {
/**
 * Array containing payment rules information.
 */
response: {
/**
 * Rule identification.
 */
id?: string
/**
 * Rule name.
 */
name?: string
/**
 * Array containing information about the Sales channel.
 */
salesChannels?: {
/**
 * Sales channel identification.
 */
id: string
}[]
/**
 * Payment system information.
 */
paymentSystem?: {
/**
 * Payment system identification.
 */
id: number
/**
 * Payment system name.
 */
name: string
/**
 * Payment system implementation class name.
 */
implementation: (null | string)
}
/**
 * Connector (payment provider) information.
 */
connector?: (null | {
/**
 * Connector (payment provider) implementation class name.
 */
implementation: string
/**
 * Affiliation connector (payment provider) identification.
 */
affiliationId: string
})
/**
 * Card issuer information.
 */
issuer?: {
/**
 * Card issuer name.
 */
name: (null | string)
}
/**
 * Anti-fraud information.
 */
antifraud?: (null | {
/**
 * Connector (anti-fraud provider) implementation class name.
 */
implementation: (null | string)
/**
 * Affiliation connector (anti-fraud provider) identification.
 */
affiliationId: (null | string)
})
/**
 * Installment options information.
 */
installmentOptions?: (null | {
/**
 * Indicates whether the billing date will be at the end (0) or beginning of the period (1).
 */
dueDateType: (0 | 1)
/**
 * Indicates the type of interest to calculate the value of the installments (Compound Interest = `null` or `0`, Simple Interest Rate with Tax = `1` and Single Interest = `2`).
 */
interestRateMethod: (null | 0 | 1 | 2)
/**
 * Minimum value of each installment.
 */
minimumInstallmentValue: number
/**
 * Array containing installments information.
 */
installments: {
/**
 * Rule identification.
 */
ruleId: (null | string)
/**
 * Number of installments.
 */
quantity: number
/**
 * Value of each installment.
 */
value: number
/**
 * Interest rate (percent 0.1 = 10%).
 */
interestRate: number
/**
 * Indicates the external installment system (if applicable).
 */
isExternalInstallmentService: (null | number)
/**
 * Interest tax (percent 0.1 = 10%).
 */
interestTax: (null | number)
}[]
})
/**
 * Indicates whether the payment is automatically authorized.
 */
isSelfAuthorized?: (null | boolean)
/**
 * Indicates whether it is necessary to log in to make the payment.
 */
requiresAuthentication?: (null | boolean)
/**
 * Indicates whether the rule is enabled in the store.
 */
enabled?: boolean
/**
 * Indicates whether any specific type of installment service is used.
 */
installmentsService?: boolean
/**
 * Indicates whether this rule should be considered the default for a given payment condition.
 */
isDefault?: (null | boolean)
/**
 * Rule start date in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (`YYYY-MM-DDThh:mm:ss.fff`), if applicable.
 */
beginDate?: (null | string)
/**
 * Rule end date in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (`YYYY-MM-DDThh:mm:ss.fff`), if applicable.
 */
endDate?: (null | string)
/**
 * Commercial condition information.
 */
condition?: (null | {
/**
 * Commercial condition identification.
 */
id: string
/**
 * Indicates the minimum percentage of SKUs required in the cart using this commercial condition for it to be activated.
 */
pullRate: number
/**
 * Commercial condition information.
 */
name: (null | string)
})
/**
 * Indicates the names of the accounts to which the rule is being applied exclusively.
 */
multiMerchantList?: (null | string[])
/**
 * Information about rule application in a country.
 */
country?: (null | {
/**
 * Country name.
 */
name: (null | string)
/**
 * Country code (ISO 3166 alpha-2).
 */
isoCode: string
})
/**
 * Array containing information about the periods (days and hours) in which the rule is enabled.
 */
dateIntervals?: (null | {
/**
 * Time, days of the week, and GMT time zone in which the rule is activated. This data is available in [CRON format](https://en.wikipedia.org/wiki/Cron).
 */
start: string
/**
 * Time, days of the week and GMT time zone in which the rule is deactivated. This data is available in [CRON format](https://en.wikipedia.org/wiki/Cron).
 */
end: string
}[])
/**
 * Indicates whether interest can be calculated externally.
 */
externalInterest?: boolean
/**
 * Minimum payment transaction amount for the rule to be applied.
 */
minimumValue?: (null | number)
/**
 * Array containing information about the payment deadlines (applicable for credit payment method).
 */
deadlines?: {
/**
 * Array containing payment options information.
 */
paymentOptions: {
/**
 * Deadline in days to make payment.
 */
days: number
/**
 * Interest rate applied (in percentage, e.g. `3.0` means 3%).
 */
interestRate: number
}[]
}[]
/**
 * Information about the cobranded card.
 */
cobrand?: {
/**
 * Card name.
 */
name: (null | string)
}
/**
 * Information about the card category.
 */
cardLevel?: {
/**
 * Card category name (e.g. standard, gold, premium).
 */
name: (null | string)
}
/**
 * Range of card bins excluded from application of this rule.
 */
excludedBinsRanges?: (null | number)
}[]
}
/**
 * Creates a new payment rule to be applied to the payment providers configured in your store.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-ManageStore | **Manage Store** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/pvt/rules": {
/**
 * New payment rule request body information.
 */
body: {
/**
 * Rule name.
 */
name: string
/**
 * Array containing information about the Sales channel.
 */
salesChannels: {
/**
 * Sales channel identification.
 */
id: string
}[]
/**
 * Payment system information.
 */
paymentSystem: {
/**
 * Payment system identification.
 */
id: number
/**
 * Payment system name.
 */
name: string
/**
 * Payment system implementation class name.
 */
implementation: (null | string)
}
/**
 * Connector (payment provider) information.
 */
connector: (null | {
/**
 * Connector (payment provider) implementation class name.
 */
implementation: string
/**
 * Affiliation connector (payment provider) identification.
 */
affiliationId: string
})
/**
 * Card issuer information.
 */
issuer: {
/**
 * Card issuer name.
 */
name: (null | string)
}
/**
 * Anti-fraud information.
 */
antifraud: (null | {
/**
 * Connector (anti-fraud provider) implementation class name.
 */
implementation: (null | string)
/**
 * Affiliation connector (anti-fraud provider) identification.
 */
affiliationId: (null | string)
})
/**
 * Installment options information.
 */
installmentOptions: (null | {
/**
 * Indicates whether the billing date will be at the end (0) or beginning of the period (1).
 */
dueDateType: (0 | 1)
/**
 * Indicates the type of interest to calculate the value of the installments (Compound Interest = `null` or `0`, Simple Interest Rate with Tax = `1` and Single Interest = `2`).
 */
interestRateMethod: (null | 0 | 1 | 2)
/**
 * Minimum value of each installment.
 */
minimumInstallmentValue: number
/**
 * Array containing installments information.
 */
installments: {
/**
 * Rule identification.
 */
ruleId: (null | string)
/**
 * Number of installments.
 */
quantity: number
/**
 * Value of each installment.
 */
value: number
/**
 * Interest rate (percent 0.1 = 10%).
 */
interestRate: number
/**
 * Indicates the external installment system (if applicable).
 */
isExternalInstallmentService: (null | number)
/**
 * Interest tax (percent 0.1 = 10%).
 */
interestTax: (null | number)
}[]
})
/**
 * Indicates whether the payment is automatically authorized.
 */
isSelfAuthorized: (null | boolean)
/**
 * Indicates whether it is necessary to log in to make the payment.
 */
requiresAuthentication: (null | boolean)
/**
 * Indicates whether the rule is enabled in the store.
 */
enabled: boolean
/**
 * Indicates whether any specific type of installment service is used.
 */
installmentsService: boolean
/**
 * Indicates whether this rule should be considered the default for a given payment condition.
 */
isDefault: (null | boolean)
/**
 * Rule start date in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (`YYYY-MM-DDThh:mm:ss.fff`), if applicable.
 */
beginDate: (null | string)
/**
 * Rule end date in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (`YYYY-MM-DDThh:mm:ss.fff`), if applicable.
 */
endDate: (null | string)
/**
 * Commercial condition information.
 */
condition: (null | {
/**
 * Commercial condition identification.
 */
id: string
/**
 * Indicates the minimum percentage of SKUs required in the cart using this commercial condition for it to be activated.
 */
pullRate: number
/**
 * Commercial condition information.
 */
name: (null | string)
})
/**
 * Indicates the names of the accounts to which the rule is being applied exclusively.
 */
multiMerchantList: (null | string[])
/**
 * Information about rule application in a country.
 */
country: (null | {
/**
 * Country name.
 */
name: (null | string)
/**
 * Country code (ISO 3166 alpha-2).
 */
isoCode: string
})
/**
 * Array containing information about the periods (days and hours) in which the rule is enabled.
 */
dateIntervals: (null | {
/**
 * Time, days of the week, and GMT time zone in which the rule is activated. This data is available in [CRON format](https://en.wikipedia.org/wiki/Cron).
 */
start: string
/**
 * Time, days of the week and GMT time zone in which the rule is deactivated. This data is available in [CRON format](https://en.wikipedia.org/wiki/Cron).
 */
end: string
}[])
/**
 * Indicates whether interest can be calculated externally.
 */
externalInterest?: boolean
/**
 * Minimum payment transaction amount for the rule to be applied.
 */
minimumValue?: (null | number)
/**
 * Array containing information about the payment deadlines (applicable for credit payment method).
 */
deadlines?: {
/**
 * Array containing payment options information.
 */
paymentOptions: {
/**
 * Deadline in days to make payment.
 */
days: number
/**
 * Interest rate applied (in percentage, e.g. `3.0` means 3%).
 */
interestRate: number
}[]
}[]
/**
 * Information about the cobranded card.
 */
cobrand?: {
/**
 * Card name.
 */
name: (null | string)
}
/**
 * Information about the card category.
 */
cardLevel?: {
/**
 * Card category name (e.g. standard, gold, premium).
 */
name: (null | string)
}
/**
 * Range of card bins excluded from application of this rule.
 */
excludedBinsRanges?: (null | number)
}
/**
 * Payment rules information.
 */
response: {
/**
 * Rule identification.
 */
id: string
/**
 * Rule name.
 */
name: string
/**
 * Array containing information about the Sales channel.
 */
salesChannels: {
/**
 * Sales channel identification.
 */
id: string
}[]
/**
 * Payment system information.
 */
paymentSystem: {
/**
 * Payment system identification.
 */
id: number
/**
 * Payment system name.
 */
name: string
/**
 * Payment system implementation class name.
 */
implementation: (null | string)
}
/**
 * Connector (payment provider) information.
 */
connector: (null | {
/**
 * Connector (payment provider) implementation class name.
 */
implementation: string
/**
 * Affiliation connector (payment provider) identification.
 */
affiliationId: string
})
/**
 * Card issuer information.
 */
issuer: {
/**
 * Card issuer name.
 */
name: (null | string)
}
/**
 * Anti-fraud information.
 */
antifraud: (null | {
/**
 * Connector (anti-fraud provider) implementation class name.
 */
implementation: (null | string)
/**
 * Affiliation connector (anti-fraud provider) identification.
 */
affiliationId: (null | string)
})
/**
 * Installment options information.
 */
installmentOptions: (null | {
/**
 * Indicates whether the billing date will be at the end (0) or beginning of the period (1).
 */
dueDateType: (0 | 1)
/**
 * Indicates the type of interest to calculate the value of the installments (Compound Interest = `null` or `0`, Simple Interest Rate with Tax = `1` and Single Interest = `2`).
 */
interestRateMethod: (null | 0 | 1 | 2)
/**
 * Minimum value of each installment.
 */
minimumInstallmentValue: number
/**
 * Array containing installments information.
 */
installments: {
/**
 * Rule identification.
 */
ruleId: (null | string)
/**
 * Number of installments.
 */
quantity: number
/**
 * Value of each installment.
 */
value: number
/**
 * Interest rate (percent 0.1 = 10%).
 */
interestRate: number
/**
 * Indicates the external installment system (if applicable).
 */
isExternalInstallmentService: (null | number)
/**
 * Interest tax (percent 0.1 = 10%).
 */
interestTax: (null | number)
}[]
})
/**
 * Indicates whether the payment is automatically authorized.
 */
isSelfAuthorized: (null | boolean)
/**
 * Indicates whether it is necessary to log in to make the payment.
 */
requiresAuthentication: (null | boolean)
/**
 * Indicates whether the rule is enabled in the store.
 */
enabled: boolean
/**
 * Indicates whether any specific type of installment service is used.
 */
installmentsService: boolean
/**
 * Indicates whether this rule should be considered the default for a given payment condition.
 */
isDefault: (null | boolean)
/**
 * Rule start date in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (`YYYY-MM-DDThh:mm:ss.fff`), if applicable.
 */
beginDate: (null | string)
/**
 * Rule end date in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (`YYYY-MM-DDThh:mm:ss.fff`), if applicable.
 */
endDate: (null | string)
/**
 * Commercial condition information.
 */
condition: (null | {
/**
 * Commercial condition identification.
 */
id: string
/**
 * Indicates the minimum percentage of SKUs required in the cart using this commercial condition for it to be activated.
 */
pullRate: number
/**
 * Commercial condition information.
 */
name: (null | string)
})
/**
 * Indicates the names of the accounts to which the rule is being applied exclusively.
 */
multiMerchantList: (null | string[])
/**
 * Information about rule application in a country.
 */
country: (null | {
/**
 * Country name.
 */
name: (null | string)
/**
 * Country code (ISO 3166 alpha-2).
 */
isoCode: string
})
/**
 * Array containing information about the periods (days and hours) in which the rule is enabled.
 */
dateIntervals: (null | {
/**
 * Time, days of the week, and GMT time zone in which the rule is activated. This data is available in [CRON format](https://en.wikipedia.org/wiki/Cron).
 */
start: string
/**
 * Time, days of the week and GMT time zone in which the rule is deactivated. This data is available in [CRON format](https://en.wikipedia.org/wiki/Cron).
 */
end: string
}[])
/**
 * Indicates whether interest can be calculated externally.
 */
externalInterest?: boolean
/**
 * Minimum payment transaction amount for the rule to be applied.
 */
minimumValue?: (null | number)
/**
 * Array containing information about the payment deadlines (applicable for credit payment method).
 */
deadlines?: {
/**
 * Array containing payment options information.
 */
paymentOptions: {
/**
 * Deadline in days to make payment.
 */
days: number
/**
 * Interest rate applied (in percentage, e.g. `3.0` means 3%).
 */
interestRate: number
}[]
}[]
/**
 * Information about the cobranded card.
 */
cobrand?: {
/**
 * Card name.
 */
name: (null | string)
}
/**
 * Information about the card category.
 */
cardLevel?: {
/**
 * Card category name (e.g. standard, gold, premium).
 */
name: (null | string)
}
/**
 * Range of card bins excluded from application of this rule.
 */
excludedBinsRanges?: (null | number)
}
}
/**
 * Returns data for a specific payment rule applied to the payment providers configured in your store.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **View Payment Data** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/pvt/rules/:ruleId": {
/**
 * Payment rules information.
 */
response: {
/**
 * Rule identification.
 */
id: string
/**
 * Rule name.
 */
name: string
/**
 * Array containing information about the Sales channel.
 */
salesChannels: {
/**
 * Sales channel identification.
 */
id: string
}[]
/**
 * Payment system information.
 */
paymentSystem: {
/**
 * Payment system identification.
 */
id: number
/**
 * Payment system name.
 */
name: string
/**
 * Payment system implementation class name.
 */
implementation: (null | string)
}
/**
 * Connector (payment provider) information.
 */
connector: (null | {
/**
 * Connector (payment provider) implementation class name.
 */
implementation: string
/**
 * Affiliation connector (payment provider) identification.
 */
affiliationId: string
})
/**
 * Card issuer information.
 */
issuer: {
/**
 * Card issuer name.
 */
name: (null | string)
}
/**
 * Anti-fraud information.
 */
antifraud: (null | {
/**
 * Connector (anti-fraud provider) implementation class name.
 */
implementation: (null | string)
/**
 * Affiliation connector (anti-fraud provider) identification.
 */
affiliationId: (null | string)
})
/**
 * Installment options information.
 */
installmentOptions: (null | {
/**
 * Indicates whether the billing date will be at the end (0) or beginning of the period (1).
 */
dueDateType: (0 | 1)
/**
 * Indicates the type of interest to calculate the value of the installments (Compound Interest = `null` or `0`, Simple Interest Rate with Tax = `1` and Single Interest = `2`).
 */
interestRateMethod: (null | 0 | 1 | 2)
/**
 * Minimum value of each installment.
 */
minimumInstallmentValue: number
/**
 * Array containing installments information.
 */
installments: {
/**
 * Rule identification.
 */
ruleId: (null | string)
/**
 * Number of installments.
 */
quantity: number
/**
 * Value of each installment.
 */
value: number
/**
 * Interest rate (percent 0.1 = 10%).
 */
interestRate: number
/**
 * Indicates the external installment system (if applicable).
 */
isExternalInstallmentService: (null | number)
/**
 * Interest tax (percent 0.1 = 10%).
 */
interestTax: (null | number)
}[]
})
/**
 * Indicates whether the payment is automatically authorized.
 */
isSelfAuthorized: (null | boolean)
/**
 * Indicates whether it is necessary to log in to make the payment.
 */
requiresAuthentication: (null | boolean)
/**
 * Indicates whether the rule is enabled in the store.
 */
enabled: boolean
/**
 * Indicates whether any specific type of installment service is used.
 */
installmentsService: boolean
/**
 * Indicates whether this rule should be considered the default for a given payment condition.
 */
isDefault: (null | boolean)
/**
 * Rule start date in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (`YYYY-MM-DDThh:mm:ss.fff`), if applicable.
 */
beginDate: (null | string)
/**
 * Rule end date in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (`YYYY-MM-DDThh:mm:ss.fff`), if applicable.
 */
endDate: (null | string)
/**
 * Commercial condition information.
 */
condition: (null | {
/**
 * Commercial condition identification.
 */
id: string
/**
 * Indicates the minimum percentage of SKUs required in the cart using this commercial condition for it to be activated.
 */
pullRate: number
/**
 * Commercial condition information.
 */
name: (null | string)
})
/**
 * Indicates the names of the accounts to which the rule is being applied exclusively.
 */
multiMerchantList: (null | string[])
/**
 * Information about rule application in a country.
 */
country: (null | {
/**
 * Country name.
 */
name: (null | string)
/**
 * Country code (ISO 3166 alpha-2).
 */
isoCode: string
})
/**
 * Array containing information about the periods (days and hours) in which the rule is enabled.
 */
dateIntervals: (null | {
/**
 * Time, days of the week, and GMT time zone in which the rule is activated. This data is available in [CRON format](https://en.wikipedia.org/wiki/Cron).
 */
start: string
/**
 * Time, days of the week and GMT time zone in which the rule is deactivated. This data is available in [CRON format](https://en.wikipedia.org/wiki/Cron).
 */
end: string
}[])
/**
 * Indicates whether interest can be calculated externally.
 */
externalInterest?: boolean
/**
 * Minimum payment transaction amount for the rule to be applied.
 */
minimumValue?: (null | number)
/**
 * Array containing information about the payment deadlines (applicable for credit payment method).
 */
deadlines?: {
/**
 * Array containing payment options information.
 */
paymentOptions: {
/**
 * Deadline in days to make payment.
 */
days: number
/**
 * Interest rate applied (in percentage, e.g. `3.0` means 3%).
 */
interestRate: number
}[]
}[]
/**
 * Information about the cobranded card.
 */
cobrand?: {
/**
 * Card name.
 */
name: (null | string)
}
/**
 * Information about the card category.
 */
cardLevel?: {
/**
 * Card category name (e.g. standard, gold, premium).
 */
name: (null | string)
}
/**
 * Range of card bins excluded from application of this rule.
 */
excludedBinsRanges?: (null | number)
}
}
/**
 * Updates information about a specific payment rule applied to the payment providers configured in your store.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-ManageStore | **Manage Store** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"PUT /api/pvt/rules/:ruleId": {
/**
 * Payment rules information.
 */
body: {
/**
 * Rule identification.
 */
id: string
/**
 * Rule name.
 */
name: string
/**
 * Array containing information about the Sales channel.
 */
salesChannels: {
/**
 * Sales channel identification.
 */
id: string
}[]
/**
 * Payment system information.
 */
paymentSystem: {
/**
 * Payment system identification.
 */
id: number
/**
 * Payment system name.
 */
name: string
/**
 * Payment system implementation class name.
 */
implementation: (null | string)
}
/**
 * Connector (payment provider) information.
 */
connector: (null | {
/**
 * Connector (payment provider) implementation class name.
 */
implementation: string
/**
 * Affiliation connector (payment provider) identification.
 */
affiliationId: string
})
/**
 * Card issuer information.
 */
issuer: {
/**
 * Card issuer name.
 */
name: (null | string)
}
/**
 * Anti-fraud information.
 */
antifraud: (null | {
/**
 * Connector (anti-fraud provider) implementation class name.
 */
implementation: (null | string)
/**
 * Affiliation connector (anti-fraud provider) identification.
 */
affiliationId: (null | string)
})
/**
 * Installment options information.
 */
installmentOptions: (null | {
/**
 * Indicates whether the billing date will be at the end (0) or beginning of the period (1).
 */
dueDateType: (0 | 1)
/**
 * Indicates the type of interest to calculate the value of the installments (Compound Interest = `null` or `0`, Simple Interest Rate with Tax = `1` and Single Interest = `2`).
 */
interestRateMethod: (null | 0 | 1 | 2)
/**
 * Minimum value of each installment.
 */
minimumInstallmentValue: number
/**
 * Array containing installments information.
 */
installments: {
/**
 * Rule identification.
 */
ruleId: (null | string)
/**
 * Number of installments.
 */
quantity: number
/**
 * Value of each installment.
 */
value: number
/**
 * Interest rate (percent 0.1 = 10%).
 */
interestRate: number
/**
 * Indicates the external installment system (if applicable).
 */
isExternalInstallmentService: (null | number)
/**
 * Interest tax (percent 0.1 = 10%).
 */
interestTax: (null | number)
}[]
})
/**
 * Indicates whether the payment is automatically authorized.
 */
isSelfAuthorized: (null | boolean)
/**
 * Indicates whether it is necessary to log in to make the payment.
 */
requiresAuthentication: (null | boolean)
/**
 * Indicates whether the rule is enabled in the store.
 */
enabled: boolean
/**
 * Indicates whether any specific type of installment service is used.
 */
installmentsService: boolean
/**
 * Indicates whether this rule should be considered the default for a given payment condition.
 */
isDefault: (null | boolean)
/**
 * Rule start date in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (`YYYY-MM-DDThh:mm:ss.fff`), if applicable.
 */
beginDate: (null | string)
/**
 * Rule end date in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (`YYYY-MM-DDThh:mm:ss.fff`), if applicable.
 */
endDate: (null | string)
/**
 * Commercial condition information.
 */
condition: (null | {
/**
 * Commercial condition identification.
 */
id: string
/**
 * Indicates the minimum percentage of SKUs required in the cart using this commercial condition for it to be activated.
 */
pullRate: number
/**
 * Commercial condition information.
 */
name: (null | string)
})
/**
 * Indicates the names of the accounts to which the rule is being applied exclusively.
 */
multiMerchantList: (null | string[])
/**
 * Information about rule application in a country.
 */
country: (null | {
/**
 * Country name.
 */
name: (null | string)
/**
 * Country code (ISO 3166 alpha-2).
 */
isoCode: string
})
/**
 * Array containing information about the periods (days and hours) in which the rule is enabled.
 */
dateIntervals: (null | {
/**
 * Time, days of the week, and GMT time zone in which the rule is activated. This data is available in [CRON format](https://en.wikipedia.org/wiki/Cron).
 */
start: string
/**
 * Time, days of the week and GMT time zone in which the rule is deactivated. This data is available in [CRON format](https://en.wikipedia.org/wiki/Cron).
 */
end: string
}[])
/**
 * Indicates whether interest can be calculated externally.
 */
externalInterest?: boolean
/**
 * Minimum payment transaction amount for the rule to be applied.
 */
minimumValue?: (null | number)
/**
 * Array containing information about the payment deadlines (applicable for credit payment method).
 */
deadlines?: {
/**
 * Array containing payment options information.
 */
paymentOptions: {
/**
 * Deadline in days to make payment.
 */
days: number
/**
 * Interest rate applied (in percentage, e.g. `3.0` means 3%).
 */
interestRate: number
}[]
}[]
/**
 * Information about the cobranded card.
 */
cobrand?: {
/**
 * Card name.
 */
name: (null | string)
}
/**
 * Information about the card category.
 */
cardLevel?: {
/**
 * Card category name (e.g. standard, gold, premium).
 */
name: (null | string)
}
/**
 * Range of card bins excluded from application of this rule.
 */
excludedBinsRanges?: (null | number)
}
/**
 * Payment rules information.
 */
response: {
/**
 * Rule identification.
 */
id: string
/**
 * Rule name.
 */
name: string
/**
 * Array containing information about the Sales channel.
 */
salesChannels: {
/**
 * Sales channel identification.
 */
id: string
}[]
/**
 * Payment system information.
 */
paymentSystem: {
/**
 * Payment system identification.
 */
id: number
/**
 * Payment system name.
 */
name: string
/**
 * Payment system implementation class name.
 */
implementation: (null | string)
}
/**
 * Connector (payment provider) information.
 */
connector: (null | {
/**
 * Connector (payment provider) implementation class name.
 */
implementation: string
/**
 * Affiliation connector (payment provider) identification.
 */
affiliationId: string
})
/**
 * Card issuer information.
 */
issuer: {
/**
 * Card issuer name.
 */
name: (null | string)
}
/**
 * Anti-fraud information.
 */
antifraud: (null | {
/**
 * Connector (anti-fraud provider) implementation class name.
 */
implementation: (null | string)
/**
 * Affiliation connector (anti-fraud provider) identification.
 */
affiliationId: (null | string)
})
/**
 * Installment options information.
 */
installmentOptions: (null | {
/**
 * Indicates whether the billing date will be at the end (0) or beginning of the period (1).
 */
dueDateType: (0 | 1)
/**
 * Indicates the type of interest to calculate the value of the installments (Compound Interest = `null` or `0`, Simple Interest Rate with Tax = `1` and Single Interest = `2`).
 */
interestRateMethod: (null | 0 | 1 | 2)
/**
 * Minimum value of each installment.
 */
minimumInstallmentValue: number
/**
 * Array containing installments information.
 */
installments: {
/**
 * Rule identification.
 */
ruleId: (null | string)
/**
 * Number of installments.
 */
quantity: number
/**
 * Value of each installment.
 */
value: number
/**
 * Interest rate (percent 0.1 = 10%).
 */
interestRate: number
/**
 * Indicates the external installment system (if applicable).
 */
isExternalInstallmentService: (null | number)
/**
 * Interest tax (percent 0.1 = 10%).
 */
interestTax: (null | number)
}[]
})
/**
 * Indicates whether the payment is automatically authorized.
 */
isSelfAuthorized: (null | boolean)
/**
 * Indicates whether it is necessary to log in to make the payment.
 */
requiresAuthentication: (null | boolean)
/**
 * Indicates whether the rule is enabled in the store.
 */
enabled: boolean
/**
 * Indicates whether any specific type of installment service is used.
 */
installmentsService: boolean
/**
 * Indicates whether this rule should be considered the default for a given payment condition.
 */
isDefault: (null | boolean)
/**
 * Rule start date in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (`YYYY-MM-DDThh:mm:ss.fff`), if applicable.
 */
beginDate: (null | string)
/**
 * Rule end date in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (`YYYY-MM-DDThh:mm:ss.fff`), if applicable.
 */
endDate: (null | string)
/**
 * Commercial condition information.
 */
condition: (null | {
/**
 * Commercial condition identification.
 */
id: string
/**
 * Indicates the minimum percentage of SKUs required in the cart using this commercial condition for it to be activated.
 */
pullRate: number
/**
 * Commercial condition information.
 */
name: (null | string)
})
/**
 * Indicates the names of the accounts to which the rule is being applied exclusively.
 */
multiMerchantList: (null | string[])
/**
 * Information about rule application in a country.
 */
country: (null | {
/**
 * Country name.
 */
name: (null | string)
/**
 * Country code (ISO 3166 alpha-2).
 */
isoCode: string
})
/**
 * Array containing information about the periods (days and hours) in which the rule is enabled.
 */
dateIntervals: (null | {
/**
 * Time, days of the week, and GMT time zone in which the rule is activated. This data is available in [CRON format](https://en.wikipedia.org/wiki/Cron).
 */
start: string
/**
 * Time, days of the week and GMT time zone in which the rule is deactivated. This data is available in [CRON format](https://en.wikipedia.org/wiki/Cron).
 */
end: string
}[])
/**
 * Indicates whether interest can be calculated externally.
 */
externalInterest?: boolean
/**
 * Minimum payment transaction amount for the rule to be applied.
 */
minimumValue?: (null | number)
/**
 * Array containing information about the payment deadlines (applicable for credit payment method).
 */
deadlines?: {
/**
 * Array containing payment options information.
 */
paymentOptions: {
/**
 * Deadline in days to make payment.
 */
days: number
/**
 * Interest rate applied (in percentage, e.g. `3.0` means 3%).
 */
interestRate: number
}[]
}[]
/**
 * Information about the cobranded card.
 */
cobrand?: {
/**
 * Card name.
 */
name: (null | string)
}
/**
 * Information about the card category.
 */
cardLevel?: {
/**
 * Card category name (e.g. standard, gold, premium).
 */
name: (null | string)
}
/**
 * Range of card bins excluded from application of this rule.
 */
excludedBinsRanges?: (null | number)
}
}
/**
 * Deletes a specific payment rule applied to the payment providers configured in your store.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-ManageStore | **Manage Store** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"DELETE /api/pvt/rules/:ruleId": {

}
/**
 * Returns all payment methods (such as Visa, Master, among others) that can be used in your store.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **View Payment Data** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/pvt/merchants/payment-systems": {
searchParams: {
/**
 * Sales channel ([trade policy](https://help.vtex.com/en/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV)) identification. This parameter must be filled in if you wish to obtain information on payment methods available in a specific store sales channel.
 */
salesChannel?: number
}
/**
 * Payment methods information.
 */
response: {
/**
 * Payment method identification.
 */
id: number
/**
 * Payment method name.
 */
name: string
/**
 * Indicates whether a document is required.
 */
requiresDocument: boolean
/**
 * Payment method implementation class name.
 */
implementation: string
/**
 * Connector (payment provider) implementation class name.
 */
connectorImplementation: string
/**
 * Connector (anti-fraud provider) implementation class name.
 */
antifraudConnectorImplementation: (null | string)
/**
 * Payment group name.
 */
groupName: string
/**
 * Indicates whether the payment method allows redirection.
 */
redirect: boolean
/**
 * Indicates whether it is custom.
 */
isCustom: boolean
/**
 * Indicates whether the payment is automatically authorized.
 */
isSelfAuthorized: boolean
/**
 * Indicates whether it is necessary to log in to make the payment.
 */
requiresAuthentication: boolean
/**
 * Indicates whether the payment method allows installments.
 */
allowInstallments: boolean
/**
 * Indicates whether it is possible to restrict the use of specific BIN codes (only applicable for cards).
 */
allowBinExclusion: boolean
/**
 * Indicates whether the method allows multiple payments. Example of `false`: debit card.
 */
allowMultiple: boolean
/**
 * Indicates whether it is possible to identify the name of the bank responsible for issuing the card.
 */
allowIssuer: boolean
/**
 * Indicates whether it is possible to restrict a payment rule by the country where the purchase is made.
 */
allowCountry: boolean
/**
 * Indicates whether to restrict a payment rule by commercial policy type.
 */
allowCommercialPolicy: boolean
/**
 * Indicates whether to restrict a payment rule by commercial condition type.
 */
allowCommercialCondition: boolean
/**
 * Indicates whether it is possible to restrict a period for making the payment.
 */
allowPeriod: boolean
/**
 * Indicates whether the payment method is available for use.
 */
isAvailable: boolean
/**
 * Description of the payment method.
 */
description: (null | string)
/**
 * Indicates whether the payment method supports recurrence.
 */
supportRecurrence: boolean
/**
 * Validator information.
 */
validator: {
/**
 * [Regex](https://regexr.com/) information.
 */
regex: (null | string)
/**
 * Validator mask.
 */
mask: (null | string)
/**
 * Card code regular mask.
 */
cardCodeMask: (null | string)
/**
 * Card code regular expression.
 */
cardCodeRegex: (null | string)
/**
 * Array containing weigths information.
 */
weights: (null | number[])
/**
 * Indicates whether it is necessary to use the CVV code to complete a transaction with payment made by card.
 */
useCvv: boolean
/**
 * Indicates whether it is necessary to use the expiration date to complete a card payment transaction.
 */
useExpirationDate: boolean
/**
 * Indicates whether it is necessary to use the card holder name to complete a payment transaction made by card.
 */
useCardHolderName: boolean
/**
 * Indicates whether it is necessary to use the billing address to complete a card payment transaction.
 */
useBillingAddress: boolean
/**
 * Information about valid card lengths.
 */
validCardLengths: (null | string)
}
/**
 * App dependencies information.
 */
appDependencies: (null | string)
/**
 * Indicates whether a document is shown.
 */
displayDocument: boolean
/**
 * Payment due date.
 */
dueDate: string
/**
 * Indicates the possibility of payment notification (used by bank invoices and notes payable).
 */
allowNotification: boolean
/**
 * Affiliation connector (payment provider) identification.
 */
affiliationId: (null | string)
/**
 * Information about payment availability.
 */
availablePayments: (null | string)
/**
 * Amount of time (in minutes) until the payment date (`dueDate`).
 */
dueDateMinutes: number
}[]
}
/**
 * This request is the first step to create a new transaction.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **Process payments** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/pvt/transactions": {
/**
 * New transaction request body information.
 */
body: {
/**
 * Transaction value. The value must be described without using separation for decimals, e.g. for a transaction with a value equal to 201.50, send 20150.
 */
value: number
/**
 * Identification number that relates the transaction to a purchase order.
 */
referenceId: string
/**
 * Store where the transaction was initiated.
 */
channel: string
/**
 * [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) information.
 */
urn?: (null | string)
/**
 * Sales channel information.
 */
salesChannel: string
}
/**
 * New transaction response body information.
 */
response: {
/**
 * Transaction identification.
 */
id: string
/**
 * Transaction identification (same value of the `id` field).
 */
transactionId: string
/**
 * Identification number that relates the transaction to a purchase order. It can be also used for anti-fraud to identify the transaction.
 */
referenceKey: string
/**
 * Object containing the reference route of transaction interactions.
 */
interactions: {
/**
 * Transaction interaction reference route.
 */
href: string
}
/**
 * Object containing the reference route of transaction settlements.
 */
settlements: {
/**
 * Transaction settlement reference route.
 */
href: string
}
/**
 * Object containing the reference route of transaction payments.
 */
payments: {
/**
 * Transaction payment reference route.
 */
href: string
}
/**
 * Object containing the reference route of transaction refunds.
 */
refunds: {
/**
 * Transaction refund reference route.
 */
href: string
}
/**
 * Object containing the reference route of transaction cancellations.
 */
cancellations: {
/**
 * Transaction cancellation reference route.
 */
href: string
}
/**
 * Object containing the reference route of transaction capabilities.
 */
capabilities: {
/**
 * Transaction capabilities reference route.
 */
href: string
}
/**
 * Field that represents the possible transaction timeout statuses. Possible statuses and meanings: `0` = NotStarted, `1` = CancellingOrFinishing, `2` = CancellingOrFinishingByTimeout, `3` = CancelledOrFinished and `4` = TriesExceeded.
 */
timeoutStatus: (0 | 1 | 2 | 3 | 4)
/**
 * Total refunded transaction amount.
 */
totalRefunds: number
/**
 * Transaction status.
 */
status: string
/**
 * Transaction value.
 */
value: number
/**
 * Receiver [URI](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) information.
 */
receiverUri: (null | string)
/**
 * Transaction start date.
 */
startDate: string
/**
 * Transaction authorization token.
 */
authorizationToken: (null | string)
/**
 * Transaction authorization date.
 */
authorizationDate: (null | string)
/**
 * Transaction completion token.
 */
commitmentToken: (null | string)
/**
 * Transaction completion date.
 */
commitmentDate: (null | string)
/**
 * Transaction refund token.
 */
refundingToken: (null | string)
/**
 * Transaction refund date.
 */
refundingDate: (null | string)
/**
 * Transaction cancellation token.
 */
cancelationToken: (null | string)
/**
 * Transaction cancellation date.
 */
cancelationDate: (null | string)
/**
 * Field containing transaction information.
 */
fields: {
/**
 * Transaction parameter name.
 */
name: string
/**
 * Transaction parameter value.
 */
value: string
}[]
/**
 * IP address information.
 */
ipAddress: (null | string)
/**
 * Session identification.
 */
sessionId: (null | string)
/**
 * Random [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) V4 generated when the Request Capture receives a session that does not contain the macID already set. This value is set to the cookie `VtexRCMacIdv7`. The cookie has 1 year of expiration.
 */
macId: (null | string)
/**
 * VTEX fingerprint information.
 */
vtexFingerprint: (null | string)
/**
 * Chargeback information.
 */
chargeback: (null | string)
/**
 * White signature (anti-fraud list) information.
 */
whiteSignature: (null | string)
/**
 * Responsible for transaction request.
 */
owner: string
/**
 * Order identitication.
 */
orderId: (null | string)
/**
 * HTTP client used in the transaction.
 */
userAgent: (null | string)
/**
 * Type of content accepted in the transaction request header.
 */
acceptHeader: (null | string)
/**
 * Anti-fraud transaction identification.
 */
antifraudTid: (null | string)
/**
 * Anti-fraud response information.
 */
antifraudResponse: (null | string)
/**
 * Anti-fraud reference information.
 */
antifraudReference: (null | string)
/**
 * Anti-fraud affiliation identification.
 */
antifraudAffiliationId: (null | string)
/**
 * Store where the transaction was initiated.
 */
channel: string
/**
 * Sales channel information.
 */
salesChannel: string
/**
 * [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) information.
 */
urn: (null | string)
/**
 * Custom field for a transaction that can be displayed on the customer's invoice.
 */
softDescriptor: (null | string)
/**
 * Indicates whether the payment transaction should be recurring.
 */
markedForRecurrence: boolean
/**
 * Buyer information.
 */
buyer: (null | {
/**
 * Buyer first name.
 */
firstName?: string
/**
 * Buyer last name.
 */
lastName?: string
/**
 * Type of the document informed by the buyer.
 */
documentType?: string
/**
 * Document informed by the buyer.
 */
document?: string
/**
 * Buyer email address.
 */
email?: string
/**
 * Buyer address.
 */
address?: string
/**
 * Buyer phone number.
 */
phone?: string
})
}
}
/**
 * The second step to create a new transaction. This request is used to send the payment data through a public request.
 * 
 * ## Permissions
 * 
 * This endpoint does not require [authentication](https://developers.vtex.com/docs/guides/authentication) or [permissions](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).
 */
"POST /api/pub/transactions/:transactionId/payments": {
searchParams: {
/**
 * Order identification.
 */
orderId: string
}
/**
 * Payment information.
 */
body: {
/**
 * Payment system identification.
 */
paymentSystem: number
/**
 * Number of installments.
 */
installments: number
/**
 * Currency code in ISO 4217 standard.
 */
currencyCode: string
/**
 * Payment value.
 */
value: number
/**
 * The interest rate.
 */
installmentsInterestRate: number
/**
 * The value of each installment.
 */
installmentsValue: number
/**
 * Value amount of the payment without interest applied. This value is the same as the `value` field when `installmentsInterestRate` is `0.0`.
 */
referenceValue: number
/**
 * Fields information.
 */
fields: {
/**
 * Card holder name.
 */
holderName: (null | string)
/**
 * Card number information.
 */
cardNumber: (null | string)
/**
 * CVV code.
 */
validationCode: (null | string)
/**
 * Due date information. The date format is `mm/yy`.
 */
dueDate: (null | string)
/**
 * Card holder documentation.
 */
document: (null | string)
/**
 * Account identification.
 */
accountId: (null | string)
/**
 * Array containing customer address information.
 */
address: {
/**
 * Address type.
 */
addressType?: string
/**
 * Name of the receiver.
 */
receiverName?: string
/**
 * Postal code information.
 */
postalCode?: string
/**
 * City of the address.
 */
city?: string
/**
 * State of the address.
 */
state?: string
/**
 * Country of the address. ISO three-letter code.
 */
country?: (null | string)
/**
 * Street of the address.
 */
street?: string
/**
 * Number of the address.
 */
number?: number
/**
 * Neighborhood of the address.
 */
neighborhood?: string
/**
 * Complement to the address.
 */
complement?: (null | string)
/**
 * Reference that may help in the location of the address.
 */
reference?: (null | string)
/**
 * Array containing two floats with geocoordinates, first longitude, then latitude.
 */
geoCoordinates?: number[]
}[]
/**
 * Callback URL information.
 */
callbackUrl: string
}
/**
 * Transaction information.
 */
transaction: {
/**
 * Transaction identification.
 */
id: string
/**
 * Merchant name.
 */
merchantName: string
}
}[]
}
/**
 * The second step to create a new transaction. This request is used to send the payment data through a private request.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **Process payments** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/pvt/transactions/:transactionId/payments": {
/**
 * Payment information.
 */
body: {
/**
 * Payment system identification.
 */
paymentSystem: number
/**
 * Number of installments.
 */
installments: number
/**
 * Currency code in ISO 4217 standard.
 */
currencyCode: string
/**
 * Payment value.
 */
value: number
/**
 * The interest rate.
 */
installmentsInterestRate: number
/**
 * The value of each installment.
 */
installmentsValue: number
/**
 * Value amount of the payment without interest applied. This value is the same as the `value` field when `installmentsInterestRate` is `0.0`.
 */
referenceValue: number
/**
 * Fields information.
 */
fields: {
/**
 * Card holder name.
 */
holderName: string
/**
 * Card number information.
 */
cardNumber: string
/**
 * CVV code.
 */
validationCode: string
/**
 * Due date information. The date format is `mm/yy`.
 */
dueDate: string
/**
 * Card holder documentation.
 */
document: string
/**
 * Account identification.
 */
accountId: (null | string)
/**
 * Array containing customer address information.
 */
address: (null | string[])
/**
 * Callback URL information.
 */
callbackUrl: (null | string)
}
/**
 * Transaction information.
 */
transaction: {
/**
 * Transaction identification.
 */
id: string
/**
 * Merchant name.
 */
merchantName: string
}
}[]
/**
 * Payment details information.
 */
response: {
/**
 * Payment identification.
 */
id: string
/**
 * Payment system identification.
 */
paymentSystem: number
/**
 * Payment system name.
 */
paymentSystemName: string
/**
 * Merchant name.
 */
merchantName: (null | string)
/**
 * Payment group name.
 */
group: string
/**
 * Unique ID associated with the customer profile.
 */
userProfileId: (null | string)
/**
 * Indicates whether it is custom.
 */
isCustom: boolean
/**
 * Indicates whether the payment method allows installments.
 */
allowInstallments: boolean
/**
 * Indicates whether it is necessary to log in to make the payment.
 */
requiresAuthentication: boolean
/**
 * Indicates whether it is possible to identify the name of the bank responsible for issuing the card.
 */
allowIssuer: boolean
/**
 * Indicates the possibility of payment notification (used by bank invoices and notes payable).
 */
allowNotification: boolean
/**
 * Indicates whether the payment method is available for use.
 */
isAvailable: boolean
/**
 * Description of the payment method.
 */
description: (null | string)
/**
 * Payment authorization date.
 */
authorizationDate: (null | string)
/**
 * Object containing the payment system reference route.
 */
self: {
/**
 * Payment system reference route.
 */
href: string
}
/**
 * Provider's unique identifier for the transaction.
 */
tid: (null | string)
/**
 * Provider's unique sequential number for the transaction.
 */
nsu?: (null | string)
/**
 * Connector return code.
 */
returnCode: (null | string)
/**
 * Connector return message.
 */
returnMessage: (null | string)
/**
 * Payment status.
 */
status: string
/**
 * Connector name.
 */
connector: (null | string)
/**
 * Array containing connector responses information.
 */
ConnectorResponses: (null | {
/**
 * Provider's unique identifier for the transaction.
 */
Tid?: string
/**
 * Connector return code.
 */
ReturnCode?: (null | string)
/**
 * Connector return message.
 */
Message?: (null | string)
/**
 * Authorization identification.
 */
authId?: (null | string)
/**
 * Provider's unique sequential number for the transaction.
 */
nsu?: string
}[])
/**
 * Array containing connector response information.
 */
connectorResponse: (null | {
/**
 * Provider's unique identifier for the transaction.
 */
Tid?: string
/**
 * Connector return code.
 */
ReturnCode?: (null | string)
/**
 * Connector return message.
 */
Message?: (null | string)
/**
 * Authorization identification.
 */
authId?: (null | string)
/**
 * Provider's unique sequential number for the transaction.
 */
nsu?: string
}[])
/**
 * Indicates whether to display connector responses.
 */
ShowConnectorResponses: boolean
/**
 * Payment value.
 */
value: number
/**
 * The interest rate.
 */
installmentsInterestRate: number
/**
 * The value of each installment.
 */
installmentsValue: number
/**
 * Value amount of the payment without interest applied. This value is the same as the {value` field when `installmentsInterestRate` is 0.0.
 */
referenceValue: number
/**
 * Number of installments.
 */
installments: number
/**
 * Currency Code in ISO 4217 standard.
 */
currencyCode: (null | string)
/**
 * Provider name.
 */
provider: (null | string)
/**
 * Indicates whether the invoice address is different from the purchase delivery address.
 */
isBillingAddressDifferent: (null | boolean)
/**
 * Confirms that the [Regex](https://regexr.com/) rule is valid.
 */
isRegexValid: (null | boolean)
/**
 * Confirms that the [Luhn](https://en.wikipedia.org/wiki/Luhn_algorithm) rule is valid.
 */
isLuhnValid: (null | boolean)
/**
 * Field containing information and values of payment parameters.
 */
fields: {
/**
 * Payment parameter name.
 */
name: string
/**
 * Payment parameter value.
 */
value: string
}[]
/**
 * Sheets information.
 */
sheets: (null | string)
/**
 * Original payment identification, if applicable.
 */
originalPaymentId: (null | string)
}
}
/**
 * The third step to create a new transaction. This request sends additional data related to the transaction, such as profile information, shopping cart, shipping data, among others.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **Process payments** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/pvt/transactions/:transactionId/additional-data": {
/**
 * Array containing additional data.
 */
body: {
/**
 * Dataset name. This information must be sent in escaped JSON format.
 */
name: string
/**
 * Dataset values. This information must be sent in escaped JSON format.
 */
value: string
}[]
}
/**
 * Use this request to update any information that has previously been sent on endpoint [3. Send additional data](https://developers.vtex.com/docs/api-reference/payments-gateway-api#post-/api/pvt/transactions/-transactionId-/additional-data).
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **Process payments** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"PATCH /api/pvt/transactions/:transactionId/additional-data": {
/**
 * Array containing additional data.
 */
body: {
/**
 * Dataset name. This information must be sent in escaped JSON format.
 */
name: string
/**
 * Dataset values. This information must be sent in escaped JSON format.
 */
value: string
}[]
}
/**
 * The fourth and last step to create a new transaction. It will authorized the new transaction creation according to the data previously informed in the latests requests.
 * 
 * This step is the trigger to process each of payments that were received in step 2.
 * 
 * Each payment will be sent to acquirer. If all payments are authorized, the transaction will be authorized. If one of the payments is denied, all payments in transaction will be cancelled.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **Process payments** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/pvt/transactions/:transactionId/authorization-request": {
/**
 * Authorize new transaction request body information.
 */
body: {
/**
 * Transaction identification.
 */
transactionId: string
/**
 * Custom field for a transaction that can be displayed on the customer's invoice.
 */
softDescriptor: (null | string)
/**
 * Indicates whether the transaction supports recurrence.
 */
prepareForRecurrency: boolean
}
/**
 *  Transaction response body information.
 */
response: {
/**
 * Settle request identification.
 */
id: (null | string)
/**
 * Token identification.
 */
token: string
/**
 * Status code.
 */
status: number
/**
 * Status detail information.
 */
statusDetail: string
/**
 * Settlement processing date.
 */
processingDate: string
/**
 * Refunded value.
 */
refundedValue: number
/**
 * Refund operation token.
 */
refundedToken: (null | string)
/**
 * Custom message.
 */
message: (null | string)
/**
 * Custom code.
 */
code: (null | string)
/**
 * Refunded value by connector (provider).
 */
connectorRefundedValue: number
/**
 * Cancelled value.
 */
cancelledValue: number
}
}
/**
 * Returns data about a specific transaction made in your store.
 * 
 * >⚠️ Do not use the `interactions.href` route which is part of this endpoint's response. This is an internal-only route not meant to be used by external developers.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **View Payment Data** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/pvt/transactions/:transactionId": {
/**
 * Transaction details response body information.
 */
response: {
/**
 * Transaction identification.
 */
id: string
/**
 * Transaction identification (same value of the `id` field).
 */
transactionId: string
/**
 * Field used for anti-fraud to identify the transaction.
 */
referenceKey: string
/**
 * Object containing the reference route of transaction interactions.
 */
interactions: {
/**
 * Transaction interaction reference route.
 */
href: string
}
/**
 * Object containing the reference route of transaction settlements.
 */
settlements: {
/**
 * Transaction settlement reference route.
 */
href: string
}
/**
 * Object containing the reference route of transaction payments.
 */
payments: {
/**
 * Transaction payment reference route.
 */
href: string
}
/**
 * Object containing the reference route of transaction refunds.
 */
refunds: {
/**
 * Transaction refund reference route.
 */
href: string
}
/**
 * Object containing the reference route of transaction cancellations.
 */
cancellations: {
/**
 * Transaction cancellation reference route.
 */
href: string
}
/**
 * Object containing the reference route of transaction capabilities.
 */
capabilities: {
/**
 * Transaction capabilities reference route.
 */
href: string
}
/**
 * Field that represents the possible transaction timeout statuses. Possible statuses and meanings: `0` = NotStarted, `1` = CancellingOrFinishing, `2` = CancellingOrFinishingByTimeout, `3` = CancelledOrFinished and `4` = TriesExceeded.
 */
timeoutStatus: (0 | 1 | 2 | 3 | 4)
/**
 * Total refunded transaction amount.
 */
totalRefunds: number
/**
 * Transaction status.
 */
status: string
/**
 * Transaction value.
 */
value: number
/**
 * Receiver [URI](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) information.
 */
receiverUri: (null | string)
/**
 * Transaction start date.
 */
startDate: string
/**
 * Transaction authorization token.
 */
authorizationToken: (null | string)
/**
 * Transaction authorization date.
 */
authorizationDate: (null | string)
/**
 * Transaction completion token.
 */
commitmentToken: (null | string)
/**
 * Transaction completion date.
 */
commitmentDate: (null | string)
/**
 * Transaction refund token.
 */
refundingToken: (null | string)
/**
 * Transaction refund date.
 */
refundingDate: (null | string)
/**
 * Transaction cancellation token.
 */
cancelationToken: (null | string)
/**
 * Transaction cancellation date.
 */
cancelationDate: (null | string)
/**
 * Field containing information and values of payment parameters.
 */
fields: {
/**
 * Payment parameter name.
 */
name: string
/**
 * Payment parameter value.
 */
value: string
}[]
/**
 * Transaction origin.
 */
shopperInteraction: string
/**
 * Ip address information.
 */
ipAddress: (null | string)
/**
 * Session identification.
 */
sessionId: (null | string)
/**
 * Random [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) V4 generated when the Request Capture receives a session that does not contain the macID already set. This value is set to the cookie `VtexRCMacIdv7`. The cookie has 1 year of expiration.
 */
macId: string
/**
 * VTEX fingerprint information.
 */
vtexFingerprint: (null | string)
/**
 * Chargeback information.
 */
chargeback: (null | string)
/**
 * White signature (anti-fraud list) information.
 */
whiteSignature: (null | string)
/**
 * Responsible for transaction request.
 */
owner: string
/**
 * Order identitication.
 */
orderId: (null | string)
/**
 * HTTP client used in the transaction.
 */
userAgent: string
/**
 * Type of content accepted in the transaction request header.
 */
acceptHeader: string
/**
 * Anti-fraud transaction identification.
 */
antifraudTid: (null | string)
/**
 * Anti-fraud response information.
 */
antifraudResponse: (null | string)
/**
 * Anti-fraud reference information.
 */
antifraudReference: (null | string)
/**
 * Anti-fraud affiliation identification.
 */
antifraudAffiliationId: (null | string)
/**
 * Store where the transaction was initiated.
 */
channel: string
/**
 * Sales channel information.
 */
salesChannel: string
/**
 * [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) information.
 */
urn: (null | string)
/**
 * Custom field for a transaction that can be displayed on the customer's invoice.
 */
softDescriptor: (null | string)
/**
 * Indicates whether the payment transaction should be recurring.
 */
markedForRecurrence: boolean
/**
 * Buyer information.
 */
buyer: (null | {
/**
 * Buyer first name.
 */
firstName?: string
/**
 * Buyer last name.
 */
lastName?: string
/**
 * Type of the document informed by the buyer.
 */
documentType?: string
/**
 * Document informed by the buyer.
 */
document?: string
/**
 * Buyer email address.
 */
email?: string
/**
 * Buyer address.
 */
address?: string
/**
 * Buyer phone number.
 */
phone?: string
})
}
}
/**
 * Returns data about a specific payment made in your store.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **View Payment Data** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/pvt/transactions/:transactionId/payments/:paymentId": {
/**
 * Payment details information.
 */
response: {
/**
 * Payment identification.
 */
id: string
/**
 * Payment system identification.
 */
paymentSystem: number
/**
 * Payment system name.
 */
paymentSystemName: string
/**
 * Merchant name.
 */
merchantName: (null | string)
/**
 * Payment group name.
 */
group: string
/**
 * Unique ID associated with the customer profile.
 */
userProfileId: (null | string)
/**
 * Indicates whether it is custom.
 */
isCustom: boolean
/**
 * Indicates whether the payment method allows installments.
 */
allowInstallments: boolean
/**
 * Indicates whether it is necessary to log in to make the payment.
 */
requiresAuthentication: boolean
/**
 * Indicates whether it is possible to identify the name of the bank responsible for issuing the card.
 */
allowIssuer: boolean
/**
 * Indicates the possibility of payment notification (used by bank invoices and notes payable).
 */
allowNotification: boolean
/**
 * Indicates whether the payment method is available for use.
 */
isAvailable: boolean
/**
 * Description of the payment method.
 */
description: (null | string)
/**
 * Payment authorization date.
 */
authorizationDate: (null | string)
/**
 * Object containing the payment system reference route.
 */
self: {
/**
 * Payment system reference route.
 */
href: string
}
/**
 * Provider's unique identifier for the transaction.
 */
tid: (null | string)
/**
 * Provider's unique sequential number for the transaction.
 */
nsu?: (null | string)
/**
 * Connector return code.
 */
returnCode: (null | string)
/**
 * Connector return message.
 */
returnMessage: (null | string)
/**
 * Payment status.
 */
status: string
/**
 * Connector name.
 */
connector: (null | string)
/**
 * Array containing connector responses information.
 */
ConnectorResponses: (null | {
/**
 * Provider's unique identifier for the transaction.
 */
Tid?: string
/**
 * Connector return code.
 */
ReturnCode?: (null | string)
/**
 * Connector return message.
 */
Message?: (null | string)
/**
 * Authorization identification.
 */
authId?: (null | string)
/**
 * Provider's unique sequential number for the transaction.
 */
nsu?: string
}[])
/**
 * Array containing connector response information.
 */
connectorResponse: (null | {
/**
 * Provider's unique identifier for the transaction.
 */
Tid?: string
/**
 * Connector return code.
 */
ReturnCode?: (null | string)
/**
 * Connector return message.
 */
Message?: (null | string)
/**
 * Authorization identification.
 */
authId?: (null | string)
/**
 * Provider's unique sequential number for the transaction.
 */
nsu?: string
}[])
/**
 * Indicates whether to display connector responses.
 */
ShowConnectorResponses: boolean
/**
 * Payment value.
 */
value: number
/**
 * The interest rate.
 */
installmentsInterestRate: number
/**
 * The value of each installment.
 */
installmentsValue: number
/**
 * Value amount of the payment without interest applied. This value is the same as the {value` field when `installmentsInterestRate` is 0.0.
 */
referenceValue: number
/**
 * Number of installments.
 */
installments: number
/**
 * Currency Code in ISO 4217 standard.
 */
currencyCode: (null | string)
/**
 * Provider name.
 */
provider: (null | string)
/**
 * Indicates whether the invoice address is different from the purchase delivery address.
 */
isBillingAddressDifferent: (null | boolean)
/**
 * Confirms that the [Regex](https://regexr.com/) rule is valid.
 */
isRegexValid: (null | boolean)
/**
 * Confirms that the [Luhn](https://en.wikipedia.org/wiki/Luhn_algorithm) rule is valid.
 */
isLuhnValid: (null | boolean)
/**
 * Field containing information and values of payment parameters.
 */
fields: {
/**
 * Payment parameter name.
 */
name: string
/**
 * Payment parameter value.
 */
value: string
}[]
/**
 * Sheets information.
 */
sheets: (null | string)
/**
 * Original payment identification, if applicable.
 */
originalPaymentId: (null | string)
}
}
/**
 * Returns settlement data associated with a specific transaction.
 * 
 * The response body of this endpoint may return different information depending on the status of the settlement request for the queried transaction:
 * 
 * - **Transaction settlement not requested or initiated:** The response body does not return any data.
 * 
 * - **Settlement request initiated, but not completed as there are items that have not yet been invoiced in the order:** The response body will only display the `request` array information.
 * 
 * - **Transaction settlement completed:** The response body will display the `request` and `actions` arrays information.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **View Payment Data** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/pvt/transactions/:transactionId/settlements": {
/**
 * Transaction settlement details response body information.
 */
response: {
/**
 * Array containing requests information.
 */
requests: {
/**
 * Transaction identification. This is the same `transactionId` value sent in the request path.
 */
id: string
/**
 * Transaction settlement date.
 */
date: string
/**
 * Transaction settlement value.
 */
value: number
}[]
/**
 * Array containing actions information.
 */
actions: {
/**
 * Payment identification.
 */
paymentId: string
/**
 * Object containing the transaction settlement reference route.
 */
payment: {
/**
 * Transaction reference settlement route.
 */
href: string
}
/**
 * Transaction settlement date.
 */
date: string
/**
 * Settlement action date.
 */
type: string
/**
 * Transaction settlement value.
 */
value: number
/**
 * Connector transaction response information. This object can return different fields according to the internal configuration of each connector (payment provider), for example, `Tid`, `ReturnCode`, `authId`, among others).
 */
connectorResponse: (null | string)
}[]
}
}
/**
 * Settles the transaction amount. A payment settled means that the seller will receive the value of the purchase value after bank conciliation.
 * 
 * >ℹ️ This call is mandatory to complete a transaction and its payments.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **Process payments** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/pvt/transactions/:transactionId/settlement-request": {
/**
 * Settle transaction request body information.
 */
body: {
/**
 * Value to be settled. The value must be described without using separation for decimals, e.g. to capture a value of 320.50, send 32050.
 */
value: number
}
/**
 *  Transaction response body information.
 */
response: {
/**
 * Settle request identification.
 */
id: (null | string)
/**
 * Token identification.
 */
token: string
/**
 * Status code.
 */
status: number
/**
 * Status detail information.
 */
statusDetail: string
/**
 * Settlement processing date.
 */
processingDate: string
/**
 * Refunded value.
 */
refundedValue: number
/**
 * Refund operation token.
 */
refundedToken: (null | string)
/**
 * Custom message.
 */
message: (null | string)
/**
 * Custom code.
 */
code: (null | string)
/**
 * Refunded value by connector (provider).
 */
connectorRefundedValue: number
/**
 * Cancelled value.
 */
cancelledValue: number
}
}
/**
 * Refunds the amount of the transaction that was previously settled.
 * 
 * After a transaction is settled, this request can be used to partially or fully refund the transaction amount.
 * 
 * Due to acquirer rules, it is not possible to perform this step online against the acquirer, and, if an error occurrs, we notify the seller company responsible by email to manually check the transaction status against the acquirer.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **Process payments** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/pvt/transactions/:transactionId/refunding-request": {
/**
 * Refund transaction request body information.
 */
body: {
/**
 * Purchase value. The value must be described without using separation for decimals, e.g. to capture a value of 320.50, send 32050.
 */
value: number
/**
 * Freigth value, if applicable.
 */
freight?: number
/**
 * Tax value, if applicable.
 */
tax?: number
/**
 * This field is filled with the content of the cart of the transaction, which can be obtained using [Get Orders](https://developers.vtex.com/docs/api-reference/orders-api?endpoint=get-/api/oms/pvt/orders/-orderId-) or [Transaction Details](https://developers.vtex.com/docs/api-reference/payments-gateway-api?endpoint=get-/api/pvt/transactions/-transactionId-) endpoints. It should only be included for transactions with split payment.
 */
minicart?: {

}
}
/**
 *  Transaction response body information.
 */
response: {
/**
 * Settle request identification.
 */
id: (null | string)
/**
 * Token identification.
 */
token: string
/**
 * Status code.
 */
status: number
/**
 * Status detail information.
 */
statusDetail: string
/**
 * Settlement processing date.
 */
processingDate: string
/**
 * Refunded value.
 */
refundedValue: number
/**
 * Refund operation token.
 */
refundedToken: (null | string)
/**
 * Custom message.
 */
message: (null | string)
/**
 * Custom code.
 */
code: (null | string)
/**
 * Refunded value by connector (provider).
 */
connectorRefundedValue: number
/**
 * Cancelled value.
 */
cancelledValue: number
}
}
/**
 * Cancels a transaction that was previously approved, but not settled. It is possible to cancel partially or complete value of the transaction.
 * 
 * Due to acquirer rules it is not possible to perform this step online against the acquirer.
 * 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-Make Payments | **Process payments** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/pvt/transactions/:transactionId/cancellation-request": {
/**
 * Cancel transaction request body information.
 */
body: {
/**
 * Value of the purchase that will be cancelled.
 */
value: number
}
/**
 *  Transaction response body information.
 */
response: {
/**
 * Settle request identification.
 */
id: (null | string)
/**
 * Token identification.
 */
token: string
/**
 * Status code.
 */
status: number
/**
 * Status detail information.
 */
statusDetail: string
/**
 * Settlement processing date.
 */
processingDate: string
/**
 * Refunded value.
 */
refundedValue: number
/**
 * Refund operation token.
 */
refundedToken: (null | string)
/**
 * Custom message.
 */
message: (null | string)
/**
 * Custom code.
 */
code: (null | string)
/**
 * Refunded value by connector (provider).
 */
connectorRefundedValue: number
/**
 * Cancelled value.
 */
cancelledValue: number
}
}
/**
 * Sends a payment notification for an order based on the payment ID.
 * 
 * >ℹ If the payment was made on its creation date and for the full amount, use this endpoint. Otherwise, use the alternative endpoint: `POST` [Send payment notification with payment ID, date, and value paid](https://developers.vtex.com/docs/api-reference/payments-gateway-api#post-/api/payments/pvt/payments/-paymentId-/payment-notification).
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/authentication-overview#application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-NotifyPayments | **Payments Notification** |
 * 
 * You can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):
 * 
 * | **Role** | **Resource** |
 * | --------------- | ----------------- |
 * | Payments Notifier | **Payments Notification** |
 * 
 * To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).
 */
"GET /api/payments/pvt/payments/:paymentId/payment-notification": {

}
/**
 * Sends a payment notification for an order using the payment ID, including the payment date and the value paid.
 * 
 * >ℹ️ This endpoint should only be used when the payment was not completed on its creation date or was partially completed (e.g., $50 out of $100). If the payment was made in full on the creation date, use the `GET` [Send payment notification with payment ID](https://developers.vtex.com/docs/api-reference/payments-gateway-api#get-/api/payments/pvt/payments/-paymentId-/payment-notification) endpoint instead. 
 * ## Permissions
 * 
 * Any user or [application key](https://developers.vtex.com/docs/guides/authentication-overview#application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise, they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | PCI Gateway | Payment-NotifyPayments | **Payments Notification** |
 * 
 * You can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):
 * 
 * | **Role** | **Resource** |
 * | --------------- | ----------------- |
 * | Payments Notifier | **Payments Notification** |
 * 
 * To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).
 */
"POST /api/payments/pvt/payments/:paymentId/payment-notification": {
/**
 * Payment notification request body information.
 */
body: {
/**
 * Date when the payment was made, in DD/MM/YYYY format.
 */
paymentDate: string
/**
 * Value that was paid.
 */
valuePaid: number
}
}
}
