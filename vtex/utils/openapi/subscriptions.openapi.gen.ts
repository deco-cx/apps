
// deno-fmt-ignore-file
// deno-lint-ignore-file no-explicit-any ban-types ban-unused-ignore
//
// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// To generate this file: deno task start
//        


export interface OpenAPI {
/**
 * Retrieves a specific cycle by its ID.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view only** |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations. 
 */
"GET /api/rns/pub/cycles/:cycleId": {
response: SubscriptionCycleResponse
}
/**
 * Lists subscription cycles, based on filters defined in the query parameters.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view only** |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/rns/pub/cycles": {
searchParams: {
/**
 * Lower limit for the date of creation of the cycle
 */
beginDate?: (null | string)
/**
 * Upper limit for the date of creation of the cycle
 */
endDate?: (null | string)
/**
 * Id from the subscription that generated the cycle
 */
subscriptionId?: (null | string)
/**
 * Customer that owns the subscription. Defaults to the current logged user
 */
customerEmail?: (null | string)
/**
 * Current cycle status
 */
status?: (null | string)
/**
 * Page used for pagination
 */
page?: number
/**
 * Page size used for pagination
 */
size?: number
}
/**
 * List of subscriptions of the VTEX account, limited to 15 results.
 */
response: SubscriptionCycleResponse[]
}
/**
 * Every subscription order has an execution count called cycle, which determines the position of an order counting from when the shopper subscribed. This endpoint reruns a cycle that is currently in error state.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view only** |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/rns/pub/cycles/:cycleId/retry": {

}
/**
 * Lists subscription plans, based on filters defined in the query parameters.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription admin** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/rns/pvt/plans": {
searchParams: {
/**
 * Filter [subscription plans](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) by available periodicity.
 */
periodicity?: (null | string)
/**
 * Filter [subscription plans](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) by available interval.
 */
interval?: (null | string)
/**
 * Page used for pagination.
 */
page?: number
/**
 * Desired number of [subscription plans](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) in the response.
 */
size?: number
}
response: StorePlan[]
}
/**
 * Retrieves a specific subscription plan by its ID.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription admin** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/rns/pvt/plans/:id": {
response: StorePlan
}
/**
 * Lists all subscription report templates available.
 * 
 * >ℹ️ After choosing the desired template, use the [Generate report](https://developers.vtex.com/docs/api-reference/subscriptions-api-v3#post-/api/rns/pvt/reports/-reportName-/documents) endpoint to create the report for your store.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view only** |
 * | Subscriptions | ApplicationAccess | **Subscription admin** |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * | Subscriptions | ApplicationAccess | **Subscription metrics and reports** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/rns/pvt/reports": {
response: {
/**
 * VTEX store account name.
 */
account?: string
/**
 * Template type, more information in the `description` field.
 */
name?: ("subscriptionsWithStatus" | "subscriptionsScheduledBetweenDate" | "subscriptionsUpdatedBetweenDate" | "subscriptionsCreatedBetweenDate" | "executionsBetweenDate")
/**
 * Template description, which varies according to the template type:
 * - `subscriptionsWithStatus`: Get subscriptions based on status.
 * - `subscriptionsScheduledBetweenDate`: Get active subscriptions scheduled between dates.
 * - `subscriptionsUpdatedBetweenDate`: Get subscriptions updated between dates.
 * - `subscriptionsCreatedBetweenDates`: Get subscriptions created between date.
 * - `executionsBetweenDate`: Get executions between dates.
 */
description?: string
/**
 * Reason why the template was created.
 */
reason?: (null | string)
/**
 * On behalf of which user the template was created.
 */
behalfOf?: (null | string)
/**
 * Information about the template params.
 */
params?: {
/**
 * Template param type, which can be `string` for the `subscriptionsWithStatus` template type, or `date` for the other cases.
 */
type?: ("string" | "date")
/**
 * Template param format, such as `yyyy-MM-dd` for `beginDate` or `endDate`. Not applicable to the `subscriptionsWithStatus` type.
 */
format?: string
/**
 * Template param name, which can relate to the template status (`status`) or dates (`beginDate`, `endDate`).
 */
name?: ("status" | "beginDate" | "endDate")
}[]
}[]
}
/**
 * Retrieves information about a subscription report document, searching by document ID. In the status code `200 OK` response, you get a link to download the report.
 * 
 * >❗ Before using this endpoint, you must create a report with the [Generate report](https://developers.vtex.com/docs/api-reference/subscriptions-api-v3#post-/api/rns/pvt/reports/-reportName-/documents) endpoint and get the document ID.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription metrics and reports** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/rns/pvt/reports/:reportName/documents/:documentId": {
response: ReportResponse
}
/**
 * Creates a subscriptions report in the format of a `csv` file and sends it via email to a given user.
 * 
 * >ℹ️ In the response body of the current endpoint, you get the document ID required for the [Get report document details](https://developers.vtex.com/docs/api-reference/subscriptions-api-v3#get-/api/rns/pvt/reports/-reportName-/documents/-documentId-) endpoint.
 * 
 * You can generate the following types of report:
 * 
 * - `subscriptionsWithStatus`: Get subscriptions based on subscription cycle execution status.
 *   - **Required query param:** `status`.
 * 
 * - `subscriptionsScheduledBetweenDate`: Get active subscriptions scheduled between dates.
 *   - **Required query params:** `beginDate` and `endDate`.
 * 
 * - `subscriptionsUpdatedBetweenDate`: Get subscriptions updated between dates.
 *   - **Required query params:** `beginDate` and `endDate`.
 * 
 * - `subscriptionsCreatedBetweenDate`: Get subscriptions created between dates.
 *   - **Required query params:** `beginDate` and `endDate`.
 * 
 * - `executionsBetweenDate`: Get executions between dates.
 *   - **Required query params:** `beginDate` and `endDate`.
 * 
 * >ℹ️ You can also use the [List report templates](https://developers.vtex.com/docs/api-reference/subscriptions-api-v3#get-/api/rns/pvt/reports) endpoint to discover the types of reports you can generate.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription metrics and reports** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/rns/pvt/reports/:reportName/documents": {
searchParams: {
/**
 * The report will be sent to the email in this field. When no email is provided, the report is sent to the email of the user making the request.
 */
email?: string
/**
 * Subscription cycle execution status. This field is required only for the `subscriptionsWithStatus` report type, and the possible values are:
 * - `TRIGGERED`: Execution has been triggered.
 * - `IN_PROCESS`: Execution is being processed by the system.
 * - `FAILURE`: An internal error occurred during the subscription execution.
 * - `SUCCESS`: Successful cycle processing.
 * - `EXPIRED`: The subscription was not renewed, and the period for which it was valid has ended.
 * - `ORDER_ERROR`: Cycle was not executed due to an error in order placement.
 * - `PAYMENT_ERROR`: Cycle was not executed due to an error in the payment.
 * - `SKIPED`: A subscription cycle execution was skipped, and the subscription will be executed in the next cycle.
 * - `SUCCESS_WITH_NO_ORDER`: Cycle was executed successfully, and the linked order has no items.
 * - `SUCCESS_WITH_PARTIAL_ORDER`: Cycle was executed successfully, and has a linked partial order.
 * - `RE_TRIGGERED`: Execution retry was triggered manually.
 * - `SCHEDULE_UPDATED`: The next subscription cycle execution date has been updated.
 */
status?: string
/**
 * Beginning date in the format `YYYY-MM-DD`. This field is required for all report types, except for the `subscriptionsWithStatus` type.
 */
beginDate?: string
/**
 * Ending date in the format `YYYY-MM-DD`. This field is required for all report types, except for the `subscriptionsWithStatus` type.
 */
endDate?: string
}
response: ReportResponse
}
/**
 * Retrieves information about a subscription, searching by subscription ID.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view only** |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/rns/pub/subscriptions/:id": {
response: SubscriptionGroupResponse
}
/**
 * Updates a subscription, searching by subscription ID.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"PATCH /api/rns/pub/subscriptions/:id": {
body: {
/**
 * Customer email.
 */
customerEmail: string
/**
 * Subscription title.
 */
title?: (null | string)
/**
 * Status to which you wish to update the subscription.
 */
status?: (null | ("ACTIVE" | "PAUSED" | "CANCELED" | "EXPIRED" | "MISSING"))
/**
 * Date and time you wish to update the next purchase. The format is [ISO 8601 time zone offset](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
nextPurchaseDate?: string
/**
 * Defines if the customer asked to skip the next subscription order (`true`), or not (`false`).
 */
isSkipped?: boolean
plan?: PlanRequest
shippingAddress?: ShippingAddressRequest
purchaseSettings?: PurchaseSettingsRequest
}
response: SubscriptionGroupResponse
}
/**
 * Lists subscriptions from your store. By default, this request uses the query parameter `page` = `1`, and `size` = `15`. If you wish, you can use different values for query parameters. 
 * 
 * >⚠️ Each response is limited to 15 results. You can get different values by combining pagination query parameters.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view only** |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/rns/pub/subscriptions": {
searchParams: {
/**
 * Email of a customer that subscrived to your store.
 */
customerEmail?: string
/**
 * Subscription status. The acceptable values are:
 * - ACTIVE
 * - PAUSED
 * - CANCELED
 * - EXPIRED
 * - MISSING
 */
status?: string
/**
 * Subscription shipping address ID.
 */
addressId?: string
/**
 * [Payment method](https://help.vtex.com/en/tutorial/difference-between-payment-methods-and-payment-conditions--3azJenhGFyUy2gsocms42Q) ID. It corresponds to the `paymentAccountId` field.
 */
paymentId?: string
/**
 * [Subscription plan](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) ID.
 */
planId?: string
/**
 * Subscription next purchase date in the format `YYYY-MM-DD`.
 */
nextPurchaseDate?: string
/**
 * Order ID of when the customer subscribed.
 */
originalOrderId?: string
/**
 * Number of the starting page of the response. When no value is sent, it starts in page `1`.
 */
page?: number
/**
 * Determines the number of subscriptions in the response. The maximum is equal to the default value, which is `15`.
 */
size?: number
}
response: SubscriptionGroupResponse[]
}
/**
 * Creates a new subscription.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/rns/pub/subscriptions": {
body: SubscriptionGroupRequest
response: SubscriptionGroupResponse
}
/**
 * Removes an item from a given subscription.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"DELETE /api/rns/pub/subscriptions/:id/items/:itemId": {

}
/**
 * Edits an item from a given subscription.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view only** |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"PATCH /api/rns/pub/subscriptions/:id/items/:itemId": {
body: {
/**
 * Subscription status.
 */
status?: (null | ("ACTIVE" | "PAUSED" | "CANCELED" | "EXPIRED" | "MISSING"))
/**
 * Defines if the customer asked to skip the next subscription order (`true`), or not (`false`).
 */
isSkipped?: (null | boolean)
/**
 * Quantity of units being purchased via subscription.
 */
quantity?: number
/**
 * You can edit or configure a [manual price](https://help.vtex.com/en/tutorial/change-the-price-of-an-item-in-the-shopping-cart--7Cd37aCAmtL1qmoZJJvjNf) for the item, if you wish.
 */
manualPrice?: number
}
response: SubscriptionGroupResponse
}
/**
 * Adds a new item to a given subscription.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view only** |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/rns/pub/subscriptions/:id/items": {
body: {
/**
 * ID of the SKU being added to the subscription.
 */
skuId: string
/**
 * Quantity of units being purchased in each subscription order.
 */
quantity: number
/**
 * You can configure a [manual price](https://help.vtex.com/en/tutorial/change-the-price-of-an-item-in-the-shopping-cart--7Cd37aCAmtL1qmoZJJvjNf) for the subscription item, if you wish.
 */
manualPrice?: (null | number)
}
response: SubscriptionGroupResponse
}
/**
 * Simulates an order made by the specific subscription on checkout and retrieves the current price for items and shipping.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view only** |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/rns/pub/subscriptions/:id/simulate": {
response: SimulateResponseVO
}
/**
 * Simulates an order made by subscriptions on checkout and retrieves the current price for items and shipping.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view only** |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/rns/pub/subscriptions/simulate": {
body: SubscriptionGroupRequest
response: SimulateResponseVO
}
/**
 * Retrieves all conversation messages sent to a customer regarding a subscription.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription view only** |
 * | Subscriptions | ApplicationAccess | **Subscription view and edit** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/rns/pub/subscriptions/:subscriptionId/conversation-message": {
response: {
/**
 * Message ID.
 */
id?: string
/**
 * Information regarding the message sender.
 */
from?: {
/**
 * ID of the subscription related to the message.
 */
conversationRelatedTo?: string
/**
 * Subject of the conversation.
 */
conversationSubject?: string
/**
 * Email alias.
 */
emailAlias?: string
/**
 * Alias [mask type](https://help.vtex.com/en/tutorial/how-communication-with-the-client-is-made-during-the-order-flow--tutorials_195).
 */
aliasMaskType?: string
/**
 * Sender email address.
 */
email?: string
/**
 * Sender name.
 */
name?: string
/**
 * Sender [role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc).
 */
role?: (null | string)
}
/**
 * Information regarding the message receiver.
 */
to?: {
/**
 * ID of the subscription related to the message.
 */
conversationRelatedTo?: string
/**
 * Subject of the conversation.
 */
conversationSubject?: string
/**
 * Email alias.
 */
emailAlias?: string
/**
 * Alias [mask type](https://help.vtex.com/en/tutorial/how-communication-with-the-client-is-made-during-the-order-flow--tutorials_195).
 */
aliasMaskType?: string
/**
 * Customer email address.
 */
email?: string
/**
 * Customer name.
 */
name?: string
/**
 * Role identification.
 */
role?: string
}[]
/**
 * Message subject.
 */
subject?: string
/**
 * First words of the message text.
 */
firstWords?: string
/**
 * HTML content of the message's body.
 */
body?: string
/**
 * Indicates if the message has [attachments](https://help.vtex.com/en/tutorial/what-is-an-attachment--aGICk0RVbqKg6GYmQcWUm) (`true`) or not (`false`).
 */
hasAttachment?: boolean
/**
 * Attachment names.
 */
attachmentNames?: (null | (null | string)[])
/**
 * Message date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
date?: string
}[]
}
/**
 * Retrieves information about the subscriptions settings of your store.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription admin** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"GET /api/rns/settings": {
response: Settings
}
/**
 * Edits the subscriptions settings of your store. This configurations apply to all subscriptions.
 * 
 * ## Permissions
 * 
 * Any user or [API key](https://developers.vtex.com/docs/guides/api-authentication-using-api-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:
 * 
 * | **Product** | **Category** | **Resource** |
 * | --------------- | ----------------- | ----------------- |
 * | Subscriptions | ApplicationAccess | **Subscription admin** |
 * 
 * There are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint. To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).
 * 
 * >❗ To prevent integrations from having excessive permissions, consider the [best practices for managing API keys](https://help.vtex.com/en/tutorial/best-practices-api-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.
 */
"POST /api/rns/settings": {
body: {
/**
 * Service Level Agreement (SLA) option, which is the shipping method. The possible values are:
 * - `NONE`: The platform automatically chooses the smallest cost for shipping method at the time of the subscription cycle generation. The `defaultSla` field must remain `null`.
 * - `CHEAPEST`: Smallest cost for shipping method at the time of cycle generation. The `defaultSla` field must remain `null`.
 * - `CUSTOMER_CHOICE`: The customer can select the desired shipping method at checkout for every new subscription order. The `defaultSla` field must remain `null`.
 * - `STORE_CHOICE`: The store sets the preferred shipping method. This is configured in the `defaultSla` field.
 */
slaOption: ("NONE" | "CHEAPEST" | "CUSTOMER_CHOICE" | "STORE_CHOICE")
/**
 * This field contains the shipping method set by the store for new cycle generation. The only case when its value is not `null` is when the `slaOption` field is set as `STORE_CHOICE`.
 */
defaultSla: (null | string)
/**
 * Indicates if the store uses the updated Subscriptions V3 (`true`) or a previous version (`false`).
 */
isUsingV3: boolean
/**
 * Indicates whether or not the account is in the migration process to Subscriptions V3.
 */
onMigrationProcess: boolean
/**
 * Indicates the time future subscription orders will be generated.
 */
executionHourInUtc: number
/**
 * Workflow version.
 */
workflowVersion: string
/**
 * Array containing delivery channels.
 */
deliveryChannels: ("delivery" | "pickupInPoint")[]
/**
 * Defines if subscription order IDs will be randomly generated (`true`) or not (`false`).
 */
randomIdGeneration: boolean
/**
 * Defines if the store allows multiple installments when a subscription is created (`true`) or not (`false`).
 */
isMultipleInstallmentsEnabledOnCreation: boolean
/**
 * Defines if the store allows multiple installments when the subscription is updated (`true`) or not (`false`).
 */
isMultipleInstallmentsEnabledOnUpdate: boolean
/**
 * Store settings on how to process original orders with SKUs that contain [attachments](https://help.vtex.com/en/tutorial/what-is-an-attachment--aGICk0RVbqKg6GYmQcWUm).
 */
attachmentPreferences?: {
/**
 * Defines if the store [keeps attachments from original orders](https://developers.vtex.com/docs/guides/how-to-keep-attachments-from-original-orders-in-subscriptions) and subscription orders incorporate them (`true`) or if these attachments are disconsidered (`false`). By default, this field is set as `false`.
 */
enableAttachments?: boolean
/**
 * Defines if the [same SKUs that contain different attachments](https://developers.vtex.com/docs/guides/how-to-keep-attachments-from-original-orders-in-subscriptions) in the original order are split (`true`) or not (`false`). By default, this field is set as `false`. It can only be set as `true` if the `enableAttachments` field is also set as `true`.
 */
splitSameSkuWithDifferentAttachments?: boolean
}
/**
 * When there are custom fields configured, this field passes along the `customData` information in the original order to the next subscriptions orders.
 */
orderCustomDataAppId: (null | string)
/**
 * Defines if the expiration of subscriptions can be postponed (`true`) or not (`false`).
 */
postponeExpiration: boolean
/**
 * When set to `true`, this property enables [manual price](https://help.vtex.com/en/tutorial/change-the-price-of-an-item-in-the-shopping-cart--7Cd37aCAmtL1qmoZJJvjNf) configuration in subscription items. This is valid for all existing subscriptions, provided that there is a manual price configured and that the `isUsingV3` field is set as `true`.
 */
manualPriceAllowed: boolean
/**
 * When set to `true`, this property enables using the manual price for each item from the original subscription order. This is only valid for new subscriptions created from the moment this configuration is enabled. For this to work, it is mandatory that the `manualPriceAllowed` and `isUsingV3` properties are set to `true`.
 */
useItemPriceFromOriginalOrder: boolean
}
response: Settings
}
}
/**
 * Object with information about the subscription cycle.
 */
export interface SubscriptionCycleResponse {
/**
 * Cycle ID. When the `cycleCount` value is `1`, the `id` value will be the same as the `subscriptionId` value.
 */
id?: string
/**
 * [Subscription](https://help.vtex.com/en/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453) ID.
 */
subscriptionId?: string
/**
 * Code that identifies the subscription in the [order flow](https://help.vtex.com/en/tutorial/order-flow-and-status--tutorials_196).
 */
workflowId?: string
/**
 * Subscription cycle execution status. The possible values are:
 * - `TRIGGERED`: Execution has been triggered. 
 * - `IN_PROCESS`: Execution is being processed by the system.
 * - `FAILURE`: An internal error occurred during the subscription execution.
 * - `SUCCESS`: Successful cycle processing.
 * - `EXPIRED`: The subscription was not renewed, and the period for which it was valid has ended.
 * - `ORDER_ERROR`: Cycle was not executed due to an error in order placement.
 * - `PAYMENT_ERROR`: Cycle was not executed due to an error in the payment.
 * - `SKIPED`: A subscription cycle execution was skipped, and the subscription will be executed in the next cycle.
 * - `SUCCESS_WITH_NO_ORDER`: Cycle was executed successfully, and the linked order has no items.
 * - `SUCCESS_WITH_PARTIAL_ORDER`: Cycle was executed successfully, and has a linked partial order.
 * - `RE_TRIGGERED`: Execution retry was triggered manually.
 * - `SCHEDULE_UPDATED`: The next subscription cycle execution date has been updated.
 */
status?: ("TRIGGERED" | "IN_PROCESS" | "FAILURE" | "SUCCESS" | "EXPIRED" | "ORDER_ERROR" | "PAYMENT_ERROR" | "SKIPED" | "SUCCESS_WITH_NO_ORDER" | "SUCCESS_WITH_PARTIAL_ORDER" | "RE_TRIGGERED" | "SCHEDULE_UPDATED")
/**
 * Customer email.
 */
customerEmail?: string
/**
 * Customer ID.
 */
customerId?: string
/**
 * Current date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
date?: string
/**
 * Subscription cycle last update date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
lastUpdate?: string
/**
 * The cycle determines the position of an order counting from when the shopper subscribed. The original order that creates the subscription corresponds to cycle count `0`, the first subscription order corresponds to `1`, the second corresponds to `2`, and so on.
 */
cycleCount?: number
/**
 * Defines if the cycle execution is in retry (`true`), or not (`false`).
 */
isInRetry?: boolean
/**
 * Cycle execution message.
 */
message?: string
/**
 * Cycle execution friendly message.
 */
friendlyMessage?: string
plan?: PlanResponse
/**
 * Subscription order information.
 */
orderInfo?: {
/**
 * Order ID.
 */
orderId?: string
/**
 * Order group ID.
 */
orderGroup?: string
/**
 * Order payment URL.
 */
paymentURL?: string
/**
 * Order value in cents.
 */
value?: number
}
/**
 * Subscription cycle context.
 */
context?: {
/**
 * Information about subscription cycle items.
 */
items?: {
/**
 * Subscription item ID.
 */
subscriptionItemId?: string
/**
 * SKU ID.
 */
skuId?: string
/**
 * Quantity of item units.
 */
quantity?: number
/**
 * Subscription status.
 */
status?: ("ACTIVE" | "PAUSED" | "CANCELED" | "EXPIRED" | "MISSING")
/**
 * Defines if the customer asked to skip the item in the next subscription order (`true`), or not (`false`).
 */
isSkipped?: boolean
/**
 * The cycle determines the position of an order counting from when the shopper subscribed. The original order that creates the subscription corresponds to cycle count `0`, the first subscription order corresponds to `1`, the second corresponds to `2`, and so on.
 */
cycleCount?: number
}[]
/**
 * Payment system ID.
 */
paymentSystem?: string
/**
 * Payment system name.
 */
paymentSystemName?: string
/**
 * Payment system group.
 */
paymentSystemGroup?: string
/**
 * Information about the customer profile and their documents, such as a credit card number. You can also retrieve that information using the [Get client profile by email](https://developers.vtex.com/docs/api-reference/checkout-api#get-/api/checkout/pub/profiles) endpoint.
 */
paymentAccountId?: string
/**
 * Shipping address ID.
 */
addressId?: string
/**
 * Shipping address type.
 */
addressType?: string
/**
 * Subscription [attachment](https://help.vtex.com/en/tutorial/what-is-an-attachment--aGICk0RVbqKg6GYmQcWUm) content, when applicable.
 */
catalogAttachment?: string
minItems?: 0
}
/**
 * Subscription simulation items.
 */
simulationItems?: SimulationItemResult[]
}
/**
 * [Subscription plan](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) object.
 */
export interface PlanResponse {
/**
 * Subscription plan ID.
 */
id: string
/**
 * Subscription plan frequency.
 */
frequency: {
/**
 * Plan repurchase frequency, defines the subscription recurrence.
 */
periodicity: ("DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY")
/**
 * Time interval configured between subscription orders, which depends on the periodicity. For a `DAILY` periodicity, the value will be days, for `MONTHLY` it will be months, and so on.
 */
interval: number
}
/**
 * Information about the period during which the subscription plan will be valid.
 */
validity: {
/**
 * Subscription plan beginning date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
begin: string
/**
 * Subscription plan ending date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
end?: string
}
/**
 * Time reference in which subscription orders will be created. It will depend on the cycle periodicity, for `WEEKLY` subscriptions, for example, the purchase day could be `Sunday`. For `MONTHLY`, would be `7`, as in the 7th day of the month. When the subscription periodicity is `DAILY`, this field corresponds to `Not_Applicable`.
 */
purchaseDay: string
}
/**
 * Simulation information about an item.
 */
export interface SimulationItemResult {
/**
 * SKU ID.
 */
id?: string
/**
 * Quantity of units for the given SKU.
 */
quantity?: number
/**
 * Unit price in cents.
 */
unitPrice?: number
/**
 * Subscription cycle status in the simulation.
 */
status?: string
/**
 * Price in cents.
 */
price?: number
/**
 * Selling price in cents.
 */
sellingPrice?: number
/**
 * [Manual price](https://help.vtex.com/en/tutorial/change-the-price-of-an-item-in-the-shopping-cart--7Cd37aCAmtL1qmoZJJvjNf).
 */
manualPrice?: number
}
/**
 * Subscription [plan](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) object.
 */
export interface StorePlan {
/**
 * Subscription plan ID.
 */
id?: string
/**
 * Array of the plan frequencies.
 */
frequencies?: {
/**
 * Repurchase frequency requested by the customer, defines the subscriptions recurrence period.
 */
periodicity?: ("DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY")
/**
 * Time interval configured between subscription orders, which depends on the periodicity. For a `DAILY` periodicity, the value will be days, for `MONTHLY` it will be months, and so on.
 */
interval?: number
}[]
/**
 * Defines if the plan is active (`true`) or not (`false`).
 */
isActive?: boolean
/**
 * Defines if a SKU importing process is in progress (`true`) or not (`false`).
 */
importInProgress?: boolean
/**
 * Plan attachment ID.
 */
attachmentId?: number
/**
 * Defines if the plan is valid (`true`) or not (`false`).
 */
isValid?: boolean
/**
 * List of validation messages.
 */
validationMessages?: string[]
/**
 * Information about the period during which the subscription plan will be valid.
 */
validity?: {
/**
 * Subscription plan beginning date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
begin?: string
/**
 * Subscription plan ending date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
end?: string
}
/**
 * Time reference in which subscription orders will be created.
 */
purchaseDays?: string[]
}
/**
 * Subscription report information.
 */
export interface ReportResponse {
/**
 * Report document ID.
 */
id?: string
/**
 * Defines if the report is finished (`true`) or not (`false`).
 */
finished?: boolean
/**
 * Number of records processed at the moment.
 */
recordsProcessed?: number
/**
 * Total number of records to be processed.
 */
recordsSum?: number
/**
 * Report starting date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
startDate?: string
/**
 * Report last update date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
lastUpdateTime?: string
/**
 * Report completion date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
completedDate?: string
/**
 * Error counting numbers, when applicable.
 */
errorCount?: number
/**
 * Report processing percentage.
 */
percentageProcessed?: number
/**
 * Request enqueue date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
enqueueDate?: string
/**
 * Email of the user that receives the report.
 */
email?: string
/**
 * Defines if the report is canceled (`true`) or not (`false`).
 */
canceled?: boolean
/**
 * Report file extension.
 */
outputType?: string
/**
 * Defines if the report file is zipped (`true`) or not (`false`).
 */
zipped?: boolean
/**
 * Link do download the report.
 */
linkToDownload?: string
/**
 * Error last message, when applicable.
 */
lastErrorMessage?: string
/**
 * Report status message.
 */
statusMessage?: string
}
/**
 * Information about a given subscription.
 */
export interface SubscriptionGroupResponse {
/**
 * [Subscription](https://help.vtex.com/en/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453) ID.
 */
id: string
/**
 * Customer ID.
 */
customerId: string
/**
 * Customer email.
 */
customerEmail: string
/**
 * Subscription title.
 */
title?: string
/**
 * Subscription status.
 */
status: ("ACTIVE" | "PAUSED" | "CANCELED" | "EXPIRED" | "MISSING")
/**
 * Defines if the customer asked to skip the next subscription order (`true`), or not (`false`).
 */
isSkipped: boolean
/**
 * Next purchase date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
nextPurchaseDate: string
/**
 * Last purchase date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
lastPurchaseDate?: string
plan: PlanResponse
/**
 * Information about the subscription shipping address.
 */
shippingAddress: {
/**
 * Shipping address ID or [pickup point](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R) ID, according to the shipping address type.
 */
addressId: string
/**
 * Type of the address. The possible values are `residential`, when the customer gives an address for delivery, or `pickup`, when the customer picks the order at a pickup point.
 */
addressType: ("residential" | "pickup")
}
/**
 * Object with purchase information.
 */
purchaseSettings: {
/**
 * [Payment method](https://help.vtex.com/en/tutorial/difference-between-payment-methods-and-payment-conditions--3azJenhGFyUy2gsocms42Q) information.
 */
paymentMethod: {
/**
 * Payment account ID.
 */
paymentAccountId?: string
/**
 * Payment system ID.
 */
paymentSystem: string
/**
 * Number of installments.
 */
installments?: number
/**
 * Payment system name.
 */
paymentSystemName?: string
/**
 * Payment system group.
 */
paymentSystemGroup?: string
}
/**
 * Currency code in [ISO 4217](https://www.iban.com/currency-codes) format.
 */
currencyCode: string
/**
 * Selected Service Level Agreement (SLA).
 */
selectedSla?: string
/**
 * Sales channel ([trade policy](https://help.vtex.com/en/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV)) associated with the purchase.
 */
salesChannel?: string
/**
 * Seller name. When the store acts both as marketplace and seller, this field corresponds to `1`, because every VTEX store is its own seller 1.
 */
seller?: string
}
/**
 * The cycle determines the position of an order counting from when the customer subscribed. The original order that creates the subscription corresponds to cycle count `0`, the first subscription order corresponds to `1`, the second corresponds to `2`, and so on.
 */
cycleCount: number
/**
 * Subscription creation date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
createdAt: string
/**
 * Date and time of the last subscription update in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
lastUpdate: string
/**
 * Information about subscription items.
 */
items: {
/**
 * Subscription item ID.
 */
id: string
/**
 * SKU ID.
 */
skuId: string
/**
 * Quantity of units.
 */
quantity: number
/**
 * Defines if the customer asked to skip the item in the next subscription order (`true`), or not (`false`).
 */
isSkipped: boolean
/**
 * Subscription status.
 */
status: ("ACTIVE" | "PAUSED" | "CANCELED" | "EXPIRED" | "MISSING")
/**
 * Subscription original order ID.
 */
originalOrderId?: string
/**
 * The cycle determines the position of an order counting from when the customer subscribed. The original order that creates the subscription corresponds to cycle count `0`, the first subscription order corresponds to `1`, the second corresponds to `2`, and so on.
 */
cycleCount?: number
/**
 * Price at subscription date.
 */
priceAtSubscriptionDate?: number
/**
 * [Manual price](https://help.vtex.com/en/tutorial/change-the-price-of-an-item-in-the-shopping-cart--7Cd37aCAmtL1qmoZJJvjNf).
 */
manualPrice?: number
/**
 * Information about subscription [attachments](https://help.vtex.com/en/tutorial/what-is-an-attachment--aGICk0RVbqKg6GYmQcWUm).
 */
attachments?: {
/**
 * Attachment name.
 */
name?: string
/**
 * Custom field for attachment content.
 */
content?: {
/**
 * Custom field information.
 */
[k: string]: string
}
}[]
}[]
/**
 * Last subscription cycle ID.
 */
lastCycleId?: string
/**
 * Customizable fields created by the store for the shopping cart. This field is useful for storing data not included in other fields, for example, a message for a gift or a name to be printed in a shirt.
 */
customData?: {
/**
 * Customizable apps created by the store.
 */
customApps?: string[]
}
minItems?: 0
}
/**
 * [Subscription plan](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) object.
 */
export interface PlanRequest {
/**
 * Subscription plan ID.
 */
id: string
/**
 * Subscription plan frequency.
 */
frequency: {
/**
 * Plan repurchase frequency, defines the subscription recurrence.
 */
periodicity: ("DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY")
/**
 * Time interval configured between subscription orders, which depends on the periodicity. For a `DAILY` periodicity, the value will be measured in days, for `MONTHLY` it will be measured in months, and so on.
 */
interval: number
}
/**
 * Information about the period during which the subscription plan will be valid.
 */
validity?: {
/**
 * Subscription plan beginning date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
begin?: string
/**
 * Subscription plan ending date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
end?: string
}
/**
 * Time reference in which subscription orders will be created. It will depend on the cycle periodicity, for `WEEKLY` subscriptions, for example, the purchase day could be `Sunday`. For `MONTHLY`, would be `7`, as in the 7th day of the month. This field is not required for `DAILY` subscriptions.
 */
purchaseDay?: string
}
/**
 * Information about the subscription shipping address.
 */
export interface ShippingAddressRequest {
/**
 * Shipping address ID or [pickup point](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R) ID, according to the shipping address type.
 */
addressId: string
/**
 * Type of the address. The possible values are `residential`, when the customer gives an address for delivery, or `pickup`, when the customer picks the order at a pickup point.
 */
addressType: ("residential" | "pickup")
}
/**
 * Object with purchase settings information.
 */
export interface PurchaseSettingsRequest {
/**
 * Object with [payment method](https://help.vtex.com/en/tutorial/difference-between-payment-methods-and-payment-conditions--3azJenhGFyUy2gsocms42Q) information.
 */
paymentMethod: {
/**
 * ID of the payment account. You can find the ID using the endpoint [Get client profile by email](https://developers.vtex.com/docs/api-reference/checkout-api#get-/api/checkout/pub/profiles), in `availableAccounts.[].accountId`.
 */
paymentAccountId: string
/**
 * Payment system ID.
 */
paymentSystem: string
/**
 * Number of installments.
 */
installments?: number
/**
 * Payment system name.
 */
paymentSystemName?: string
/**
 * Payment system group.
 */
paymentSystemGroup?: string
}
/**
 * Currency code in [ISO 4217](https://www.iban.com/currency-codes) format.
 */
currencyCode?: string
/**
 * Selected Service Level Agreement (SLA).
 */
selectedSla?: string
/**
 * Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV)) applied to the subscription. You can associate only one sales channel to each subscription. The default value is the main sales channel, which corresponds to `1`.
 */
salesChannel: string
/**
 * Seller name. When the store acts both as marketplace and seller, this field corresponds to `1`, because every VTEX store is its own seller 1.
 */
seller?: string
}
/**
 * Object with subscription information.
 */
export interface SubscriptionGroupRequest {
/**
 * Customer email.
 */
customerEmail: string
/**
 * Subscription title.
 */
title?: string
/**
 * Subscription status.
 */
status?: ("ACTIVE" | "PAUSED" | "CANCELED" | "EXPIRED" | "MISSING")
/**
 * Subscription next purchase date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
nextPurchaseDate?: string
/**
 * Subscription [attachment](https://help.vtex.com/en/tutorial/what-is-an-attachment--aGICk0RVbqKg6GYmQcWUm) content.
 */
catalogAttachment?: string
plan: PlanRequest
shippingAddress: ShippingAddressRequest
purchaseSettings: PurchaseSettingsRequest
/**
 * List with subscription items information.
 */
items: {
/**
 * SKU ID.
 */
skuId: string
/**
 * Quantity of units.
 */
quantity: number
/**
 * [Manual price](https://help.vtex.com/en/tutorial/change-the-price-of-an-item-in-the-shopping-cart--7Cd37aCAmtL1qmoZJJvjNf).
 */
manualPrice?: number
/**
 * Information about subscription [attachments](https://help.vtex.com/en/tutorial/what-is-an-attachment--aGICk0RVbqKg6GYmQcWUm).
 */
attachments?: {
/**
 * Attachment name.
 */
name: string
/**
 * Custom field for attachment content.
 */
content: {
/**
 * Custom field information.
 */
[k: string]: string
}
}[]
}[]
minItems?: 0
}
/**
 * Subscription order simulation response.
 */
export interface SimulateResponseVO {
/**
 * Object with subscription order simulation details.
 */
simulation?: {
/**
 * Simulation items information.
 */
items?: {
/**
 * SKU ID.
 */
id?: string
/**
 * Seller name. When the store acts both as marketplace and seller, this field corresponds to `1`, because every VTEX store is its own seller 1.
 */
seller?: string
/**
 * Quantity of units.
 */
quantity?: number
/**
 * Price in cents.
 */
price?: number
/**
 * Selling price in cents.
 */
sellingPrice?: number
/**
 * [Manual price](https://help.vtex.com/en/tutorial/change-the-price-of-an-item-in-the-shopping-cart--7Cd37aCAmtL1qmoZJJvjNf).
 */
manualPrice?: number
/**
 * Item unit multiplier.
 */
unitMultiplier?: number
/**
 * Item measurement unit.
 */
measurementUnit?: string
/**
 * Information about subscription [attachments](https://help.vtex.com/en/tutorial/what-is-an-attachment--aGICk0RVbqKg6GYmQcWUm).
 */
attachments?: {
/**
 * Attachment name.
 */
name?: string
/**
 * Custom field for attachment content.
 */
content?: {
/**
 * Custom field information.
 */
[k: string]: string
}
}[]
/**
 * Item name.
 */
name?: string
/**
 * Defines it the item is a gift (`true`), or not (`false`).
 */
isGift?: boolean
/**
 * List of price tags, which are price modifiers.
 */
priceTags?: PriceTag[]
}[]
/**
 * Simulation logistics information.
 */
logisticsInfo?: {
/**
 * Each item in the subscription order is identified by an index. The position starts at `0`, followed by `1`, `2`, and so on.
 */
itemIndex?: number
/**
 * Quantity of units.
 */
quantity?: number
/**
 * Selected Service Level Agreement (SLA).
 */
selectedSla?: string
/**
 * Shipping type (shipping method) selected by the customer, like delivery or [pickup point](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R).
 */
selectedDeliveryChannel?: ("delivery" | "pickup-in-point")
/**
 * Logistics [reservation](https://help.vtex.com/en/tutorial/how-does-reservation-work--tutorials_92) waiting time of the SLA in days. One business day corresponds to `1bd`, for example.
 */
lockTTL?: string
/**
 * Shipping estimate time in days. Three business days correspond to `3bd`, for example.
 */
shippingEstimate?: string
/**
 * Shipping address ID.
 */
addressId?: string
/**
 * [Pickup point](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R) ID, when shipping type is pickup.
 */
pickupId?: string
/**
 * Shipping cost.
 */
price?: number
/**
 * [Scheduled delivery window](https://help.vtex.com/tutorial/scheduled-delivery--22g3HAVCGLFiU7xugShOBi) period.
 */
deliveryWindow?: string
/**
 * Service Level Agreement (SLA) of the [shipping policy](https://help.vtex.com/en/tutorial/shipping-policy--tutorials_140) considered for the simulation.
 */
slas?: {
/**
 * ID of the shipping type (shipping method) of the shipping policy.
 */
id?: string
/**
 * [Pickup point](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R) ID related to the SLA.
 */
pickupPointId?: string
/**
 * Defines if the delivery channel is `delivery` or `pickup-in-point`.
 */
deliveryChannel?: ("delivery" | "pickup-in-point")
/**
 * Item shipping price in cents. This value does not account for the order total shipping price.
 */
price?: number
/**
 * Total shipping estimate time in days. For instance, three business days is represented as `3bd`.
 */
shippingEstimate?: string
/**
 * Logistics [reservation](https://help.vtex.com/en/tutorial/how-does-reservation-work--tutorials_92) waiting time of the SLA. One business day is represented as `1bd`, for example.
 */
lockTTL?: string
/**
 * [Delivery windows](https://help.vtex.com/en/tutorial/scheduled-delivery--22g3HAVCGLFiU7xugShOBi#delivery-window) information.
 */
deliveryWindows?: {
/**
 * Delivery window starting date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
startDateUtc?: string
/**
 * Delivery window ending date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
endDateUtc?: string
/**
 * Delivery window shipping price.
 */
price?: number
}[]
/**
 * Available [delivery windows](https://help.vtex.com/en/tutorial/scheduled-delivery--22g3HAVCGLFiU7xugShOBi#delivery-window) information.
 */
availableDeliveryWindows?: {
/**
 * Available delivery window starting date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
startDateUtc?: string
/**
 * Available delivery window ending date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
endDateUtc?: string
/**
 * Delivery window shipping price.
 */
price?: number
}[]
}[]
}[]
/**
 * Simulation payment information.
 */
paymentData?: {
/**
 * Payment information.
 */
payments?: {
/**
 * Payment ID unique identifier in VTEX.
 */
id?: string
/**
 * Payment system ID.
 */
paymentSystem?: string
/**
 * Payment system group.
 */
group?: string
/**
 * Abbreviation for _Bank Identification Number_, which is a code that identifies the institution responsible for issuing the credit card.
 */
bin?: string
/**
 * Store account ID.
 */
accountId?: string
/**
 * Retrieves the main account ID if the payment was made in a subaccount.
 */
parentAccountId?: string
/**
 * Payment reference value in cents.
 */
referenceValue?: number
/**
 * Payment value in cents.
 */
value?: number
/**
 * Number of installments.
 */
installments?: number
/**
 * Payment URL.
 */
url?: string
/**
 * Card number information.
 */
cardNumber?: string
/**
 * Payment parameters names and values.
 */
fields?: {
/**
 * Payment parameter name.
 */
name?: string
/**
 * Payment parameter value.
 */
value?: string
}[]
/**
 * Payment system name.
 */
paymentSystemName?: string
}[]
/**
 * Financial transactions information. This array returns empty in the simulation.
 */
transactions?: {
/**
 * Defines if the subscription order payment is active (`true`) or inactive (`false`).
 */
isActive?: boolean
}[]
}
/**
 * Subscription order simulation three-digit country code in [ISO 3166 ALPHA-3](https://www.iban.com/country-codes) format.
 */
country?: string
/**
 * Subscription order simulation postal code.
 */
postalCode?: string
/**
 * Simulation messages information.
 */
messages?: {
/**
 * Message code.
 */
code?: string
/**
 * Message status.
 */
status?: string
/**
 * Message text.
 */
text?: string
}[]
/**
 * Information about subscription selectable gifts. For example, when the customer gains a gift from the store based on a promotion.
 */
selectableGifts?: {
/**
 * Selectable gift ID.
 */
id?: string
/**
 * Available quantity of selectable gifts.
 */
availableQuantity?: number
/**
 * Details about available gifts.
 */
availableGifts?: {
/**
 * Gift ID.
 */
id?: string
/**
 * Seller name.
 */
seller?: string
/**
 * Quantity of units.
 */
quantity?: number
/**
 * Price in cents.
 */
price?: number
/**
 * Selling price in cents.
 */
sellingPrice?: number
/**
 * Unit multiplier.
 */
unitMultiplier?: number
/**
 * Available gift attachments information, when applicable.
 */
attachments?: {
/**
 * Gift attachment name.
 */
name?: string
/**
 * Custom field for the gift attachment content.
 */
content?: {
/**
 * Custom field information.
 */
[k: string]: string
}
}[]
/**
 * Gift name.
 */
name?: string
/**
 * Defines it the item is from a gift list (`true`), or not (`false`).
 */
isGift?: boolean
/**
 * List of price tags, which are price modifiers.
 */
priceTags?: PriceTag[]
/**
 * Defines if the item can be selected (`true`), or not (`false`).
 */
isSelected?: boolean
}[]
}[]
/**
 * Information about simulation total counts.
 */
totals?: {
/**
 * Code that identifies if the information is about items, discounts, shipping or taxes.
 */
id?: ("Items" | "Discounts" | "Shipping" | "Tax")
/**
 * Total count name.
 */
name?: string
/**
 * Total count value in cents.
 */
valueAsInt?: number
}[]
/**
 * Information about simulation totals regarding items.
 */
totalsBySimulationItems?: SimulationItemResult[]
minItems?: 0
}
/**
 * Subscription order shipping estimate information.
 */
shippingEstimate?: {
/**
 * ID of the shipping type (shipping method) of the [shipping policy](https://help.vtex.com/en/tutorial/shipping-policy--tutorials_140).
 */
name?: string
/**
 * Total shipping estimate time in days. Three business days is represented as `3bd`, for example.
 */
estimate?: string
/**
 * Estimate delivery date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
estimateDeliveryDate?: string
/**
 * Next purchase date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.
 */
nextPurchaseDate?: string
/**
 * Defines if the shipping estimate is matched (`true`), or not (`false`).
 */
matched?: boolean
}
/**
 * Information about simulation totals regarding items.
 */
totalsBySimulationItems?: SimulationItemResult[]
/**
 * Information about total counts.
 */
totals?: {
/**
 * Code that identifies if the information is about items, discounts, shipping or taxes.
 */
id?: ("Items" | "Discounts" | "Shipping" | "Tax")
/**
 * Total count value.
 */
value?: number
}[]
}
/**
 * Information about a given price tag.
 */
export interface PriceTag {
/**
 * Price tag name.
 */
name?: string
/**
 * Price tag value.
 */
valueAsInt?: number
/**
 * Price tag raw value.
 */
rawValue?: number
/**
 * Defines if the price tag is applied as a percentage (`true`), or not (`false`).
 */
isPercentual?: boolean
/**
 * Price tag identifier.
 */
identifier?: string
}
/**
 * VTEX account subscriptions settings.
 */
export interface Settings {
/**
 * Service Level Agreement (SLA) option, which is the shipping method. The possible values are:
 * - `NONE`: The platform automatically chooses the smallest cost for shipping method at the time of the subscription cycle generation.
 * - `CHEAPEST`: Smallest cost for shipping method at the time of cycle generation.
 * - `CUSTOMER_CHOICE`: The customer can select the desired shipping method at checkout for every new subscription order.
 * - `STORE_CHOICE`: The store sets the preferred shipping method. This is configured in the `defaultSla` field.
 */
slaOption: ("NONE" | "CHEAPEST" | "CUSTOMER_CHOICE" | "STORE_CHOICE")
/**
 * This field contains the shipping method set by the store for new cycle generation. The only case when its value is not `null` is when the `slaOption` field is set as `STORE_CHOICE`.
 */
defaultSla: string
/**
 * Indicates if the store uses the updated Subscriptions V3 (`true`) or a previous version (`false`).
 */
isUsingV3: boolean
/**
 * Indicates if the store is in the process of migrating to Subscriptions V3 (`true`) or not (`false`).
 */
onMigrationProcess: boolean
/**
 * Indicates the time future subscription orders will be generated.
 */
executionHourInUtc: number
/**
 * Workflow version.
 */
workflowVersion: string
/**
 * Array containing delivery channels.
 */
deliveryChannels: ("delivery" | "pickupInPoint")[]
/**
 * Defines if subscription order IDs are randomly generated (`true`) or not (`false`).
 */
randomIdGeneration: boolean
/**
 * Defines if the store allows multiple installments when a subscription is created (`true`) or not (`false`).
 */
isMultipleInstallmentsEnabledOnCreation: boolean
/**
 * Defines if the store allows multiple installments when the subscription is updated (`true`) or not (`false`).
 */
isMultipleInstallmentsEnabledOnUpdate: boolean
/**
 * Store settings on how to process original orders with SKUs that contain [attachments](https://help.vtex.com/en/tutorial/what-is-an-attachment--aGICk0RVbqKg6GYmQcWUm).
 */
attachmentPreferences?: {
/**
 * Defines if the store [keeps attachments from original orders](https://developers.vtex.com/docs/guides/how-to-keep-attachments-from-original-orders-in-subscriptions) and subscription orders incorporate them (`true`) or if these attachments are disconsidered (`false`). By default, this field is set as `false`.
 */
enableAttachments?: boolean
/**
 * Defines if the [same SKUs that contain different attachments](https://developers.vtex.com/docs/guides/how-to-keep-attachments-from-original-orders-in-subscriptions) in the original order are split (`true`) or not (`false`). By default, this field is set as `false`. It can only be set as `true` if the `enableAttachments` field is also set as `true`.
 */
splitSameSkuWithDifferentAttachments?: boolean
}
/**
 * When there are custom fields configured, this field passes along the `customData` information in the original order to the next subscriptions orders.
 */
orderCustomDataAppId: string
/**
 * Defines if the expiration of subscriptions can be postponed (`true`) or not (`false`).
 */
postponeExpiration: boolean
/**
 * Defines if the [manual price](https://help.vtex.com/en/tutorial/change-the-price-of-an-item-in-the-shopping-cart--7Cd37aCAmtL1qmoZJJvjNf) configuration is enabled for subscriptions items (`true`), or not (`false`). This is valid for all existing subscriptions, provided that there is a manual price configured and that the `isUsingV3` field is set as `true`.
 */
manualPriceAllowed: boolean
/**
 * When set to `true`, this property enables using the manual price for each item from the original subscription order. This is only valid for new subscriptions created from the moment this configuration is enabled. For this to work, it is mandatory that the `manualPriceAllowed` and `isUsingV3` properties are set to `true`.
 */
useItemPriceFromOriginalOrder: boolean
}
